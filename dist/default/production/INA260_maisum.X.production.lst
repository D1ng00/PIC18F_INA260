

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Aug 04 17:27:39 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,inline
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,inline
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1,inline
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1,inline
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1,inline
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1,inline
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1,inline
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1,inline
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1,inline
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1,inline
   105                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   106                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   107                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   108                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   109                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   110                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   111                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   112  0000                     
   113                           ; Version 2.20
   114                           ; Generated 05/05/2020 GMT
   115                           ; 
   116                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   117                           ; All rights reserved.
   118                           ; 
   119                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   120                           ; 
   121                           ; Redistribution and use in source and binary forms, with or without modification, are
   122                           ; permitted provided that the following conditions are met:
   123                           ; 
   124                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   125                           ;        conditions and the following disclaimer.
   126                           ; 
   127                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   128                           ;        of conditions and the following disclaimer in the documentation and/or other
   129                           ;        materials provided with the distribution.
   130                           ; 
   131                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   132                           ;        software without specific prior written permission.
   133                           ; 
   134                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   135                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   136                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   137                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   138                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   139                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   140                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   141                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   142                           ; 
   143                           ; 
   144                           ; Code-generator required, PIC18F26K80 Definitions
   145                           ; 
   146                           ; SFR Addresses
   147  0000                     
   148                           	psect	idataBANK1
   149  0039FE                     __pidataBANK1:
   150                           	callstack 0
   151                           
   152                           ;initializer for I2CSIMPLE_example@F12630
   153  0039FE  00                 	db	0
   154  0039FF  00                 	db	0
   155  003A00  A1                 	db	161
   156  003A01  A2                 	db	162
   157  003A02  A3                 	db	163
   158  003A03  A4                 	db	164
   159  003A04  A5                 	db	165
   160  003A05  A6                 	db	166
   161  003A06  A7                 	db	167
   162  003A07  A8                 	db	168
   163  003A08  A9                 	db	169
   164  003A09  AA                 	db	170
   165  003A0A  AB                 	db	171
   166  003A0B  AC                 	db	172
   167  003A0C  AD                 	db	173
   168  003A0D  AE                 	db	174
   169  003A0E  AF                 	db	175
   170                           
   171                           	psect	mediumconst
   172  00FD3A                     __pmediumconst:
   173                           	callstack 0
   174  00FD3A  00                 	db	0
   175  00FD3B                     _i2c_fsmStateTable:
   176                           	callstack 0
   177  00FD3B  56                 	db	low _I2C_DO_IDLE
   178  00FD3C  3A                 	db	high _I2C_DO_IDLE
   179  00FD3D  20                 	db	low _I2C_DO_SEND_ADR_READ
   180  00FD3E  3A                 	db	high _I2C_DO_SEND_ADR_READ
   181  00FD3F  10                 	db	low _I2C_DO_SEND_ADR_WRITE
   182  00FD40  3A                 	db	high _I2C_DO_SEND_ADR_WRITE
   183  00FD41  04                 	db	low _I2C_DO_TX
   184  00FD42  2E                 	db	high _I2C_DO_TX
   185  00FD43  22                 	db	low _I2C_DO_RX
   186  00FD44  30                 	db	high _I2C_DO_RX
   187  00FD45  4A                 	db	low _I2C_DO_RCEN
   188  00FD46  3A                 	db	high _I2C_DO_RCEN
   189  00FD47  6C                 	db	low _I2C_DO_TX_EMPTY
   190  00FD48  31                 	db	high _I2C_DO_TX_EMPTY
   191  00FD49  B4                 	db	low _I2C_DO_SEND_RESTART_READ
   192  00FD4A  3A                 	db	high _I2C_DO_SEND_RESTART_READ
   193  00FD4B  AC                 	db	low _I2C_DO_SEND_RESTART_WRITE
   194  00FD4C  3A                 	db	high _I2C_DO_SEND_RESTART_WRITE
   195  00FD4D  A4                 	db	low _I2C_DO_SEND_RESTART
   196  00FD4E  3A                 	db	high _I2C_DO_SEND_RESTART
   197  00FD4F  9C                 	db	low _I2C_DO_SEND_STOP
   198  00FD50  3A                 	db	high _I2C_DO_SEND_STOP
   199  00FD51  94                 	db	low _I2C_DO_RX_ACK
   200  00FD52  3A                 	db	high _I2C_DO_RX_ACK
   201  00FD53  8C                 	db	low _I2C_DO_RX_NACK_STOP
   202  00FD54  3A                 	db	high _I2C_DO_RX_NACK_STOP
   203  00FD55  84                 	db	low _I2C_DO_RX_NACK_RESTART
   204  00FD56  3A                 	db	high _I2C_DO_RX_NACK_RESTART
   205  00FD57  3E                 	db	low _I2C_DO_RESET
   206  00FD58  3A                 	db	high _I2C_DO_RESET
   207  00FD59  D2                 	db	low _I2C_DO_ADDRESS_NACK
   208  00FD5A  32                 	db	high _I2C_DO_ADDRESS_NACK
   209  00FD5B                     __end_of_i2c_fsmStateTable:
   210                           	callstack 0
   211  00FD5B                     _ASCII:
   212                           	callstack 0
   213  00FD5B  00                 	db	0
   214  00FD5C  00                 	db	0
   215  00FD5D  00                 	db	0
   216  00FD5E  00                 	db	0
   217  00FD5F  00                 	db	0
   218  00FD60  00                 	db	0
   219  00FD61  00                 	db	0
   220  00FD62  5F                 	db	95
   221  00FD63  00                 	db	0
   222  00FD64  00                 	db	0
   223  00FD65  00                 	db	0
   224  00FD66  07                 	db	7
   225  00FD67  00                 	db	0
   226  00FD68  07                 	db	7
   227  00FD69  00                 	db	0
   228  00FD6A  14                 	db	20
   229  00FD6B  7F                 	db	127
   230  00FD6C  14                 	db	20
   231  00FD6D  7F                 	db	127
   232  00FD6E  14                 	db	20
   233  00FD6F  24                 	db	36
   234  00FD70  2A                 	db	42
   235  00FD71  7F                 	db	127
   236  00FD72  2A                 	db	42
   237  00FD73  12                 	db	18
   238  00FD74  23                 	db	35
   239  00FD75  13                 	db	19
   240  00FD76  08                 	db	8
   241  00FD77  64                 	db	100
   242  00FD78  62                 	db	98
   243  00FD79  36                 	db	54
   244  00FD7A  49                 	db	73
   245  00FD7B  55                 	db	85
   246  00FD7C  22                 	db	34
   247  00FD7D  50                 	db	80
   248  00FD7E  00                 	db	0
   249  00FD7F  05                 	db	5
   250  00FD80  03                 	db	3
   251  00FD81  00                 	db	0
   252  00FD82  00                 	db	0
   253  00FD83  00                 	db	0
   254  00FD84  1C                 	db	28
   255  00FD85  22                 	db	34
   256  00FD86  41                 	db	65
   257  00FD87  00                 	db	0
   258  00FD88  00                 	db	0
   259  00FD89  41                 	db	65
   260  00FD8A  22                 	db	34
   261  00FD8B  1C                 	db	28
   262  00FD8C  00                 	db	0
   263  00FD8D  14                 	db	20
   264  00FD8E  08                 	db	8
   265  00FD8F  3E                 	db	62
   266  00FD90  08                 	db	8
   267  00FD91  14                 	db	20
   268  00FD92  08                 	db	8
   269  00FD93  08                 	db	8
   270  00FD94  3E                 	db	62
   271  00FD95  08                 	db	8
   272  00FD96  08                 	db	8
   273  00FD97  00                 	db	0
   274  00FD98  50                 	db	80
   275  00FD99  30                 	db	48
   276  00FD9A  00                 	db	0
   277  00FD9B  00                 	db	0
   278  00FD9C  08                 	db	8
   279  00FD9D  08                 	db	8
   280  00FD9E  08                 	db	8
   281  00FD9F  08                 	db	8
   282  00FDA0  08                 	db	8
   283  00FDA1  00                 	db	0
   284  00FDA2  60                 	db	96
   285  00FDA3  60                 	db	96
   286  00FDA4  00                 	db	0
   287  00FDA5  00                 	db	0
   288  00FDA6  20                 	db	32
   289  00FDA7  10                 	db	16
   290  00FDA8  08                 	db	8
   291  00FDA9  04                 	db	4
   292  00FDAA  02                 	db	2
   293  00FDAB  3E                 	db	62
   294  00FDAC  51                 	db	81
   295  00FDAD  49                 	db	73
   296  00FDAE  45                 	db	69
   297  00FDAF  3E                 	db	62
   298  00FDB0  00                 	db	0
   299  00FDB1  42                 	db	66
   300  00FDB2  7F                 	db	127
   301  00FDB3  40                 	db	64
   302  00FDB4  00                 	db	0
   303  00FDB5  42                 	db	66
   304  00FDB6  61                 	db	97
   305  00FDB7  51                 	db	81
   306  00FDB8  49                 	db	73
   307  00FDB9  46                 	db	70
   308  00FDBA  21                 	db	33
   309  00FDBB  41                 	db	65
   310  00FDBC  45                 	db	69
   311  00FDBD  4B                 	db	75
   312  00FDBE  31                 	db	49
   313  00FDBF  18                 	db	24
   314  00FDC0  14                 	db	20
   315  00FDC1  12                 	db	18
   316  00FDC2  7F                 	db	127
   317  00FDC3  10                 	db	16
   318  00FDC4  27                 	db	39
   319  00FDC5  45                 	db	69
   320  00FDC6  45                 	db	69
   321  00FDC7  45                 	db	69
   322  00FDC8  39                 	db	57
   323  00FDC9  3C                 	db	60
   324  00FDCA  4A                 	db	74
   325  00FDCB  49                 	db	73
   326  00FDCC  49                 	db	73
   327  00FDCD  30                 	db	48
   328  00FDCE  01                 	db	1
   329  00FDCF  71                 	db	113
   330  00FDD0  09                 	db	9
   331  00FDD1  05                 	db	5
   332  00FDD2  03                 	db	3
   333  00FDD3  36                 	db	54
   334  00FDD4  49                 	db	73
   335  00FDD5  49                 	db	73
   336  00FDD6  49                 	db	73
   337  00FDD7  36                 	db	54
   338  00FDD8  06                 	db	6
   339  00FDD9  49                 	db	73
   340  00FDDA  49                 	db	73
   341  00FDDB  29                 	db	41
   342  00FDDC  1E                 	db	30
   343  00FDDD  00                 	db	0
   344  00FDDE  36                 	db	54
   345  00FDDF  36                 	db	54
   346  00FDE0  00                 	db	0
   347  00FDE1  00                 	db	0
   348  00FDE2  00                 	db	0
   349  00FDE3  56                 	db	86
   350  00FDE4  36                 	db	54
   351  00FDE5  00                 	db	0
   352  00FDE6  00                 	db	0
   353  00FDE7  08                 	db	8
   354  00FDE8  14                 	db	20
   355  00FDE9  22                 	db	34
   356  00FDEA  41                 	db	65
   357  00FDEB  00                 	db	0
   358  00FDEC  14                 	db	20
   359  00FDED  14                 	db	20
   360  00FDEE  14                 	db	20
   361  00FDEF  14                 	db	20
   362  00FDF0  14                 	db	20
   363  00FDF1  00                 	db	0
   364  00FDF2  41                 	db	65
   365  00FDF3  22                 	db	34
   366  00FDF4  14                 	db	20
   367  00FDF5  08                 	db	8
   368  00FDF6  02                 	db	2
   369  00FDF7  01                 	db	1
   370  00FDF8  51                 	db	81
   371  00FDF9  09                 	db	9
   372  00FDFA  06                 	db	6
   373  00FDFB  32                 	db	50
   374  00FDFC  49                 	db	73
   375  00FDFD  79                 	db	121
   376  00FDFE  41                 	db	65
   377  00FDFF  3E                 	db	62
   378  00FE00  7E                 	db	126
   379  00FE01  11                 	db	17
   380  00FE02  11                 	db	17
   381  00FE03  11                 	db	17
   382  00FE04  7E                 	db	126
   383  00FE05  7F                 	db	127
   384  00FE06  49                 	db	73
   385  00FE07  49                 	db	73
   386  00FE08  49                 	db	73
   387  00FE09  36                 	db	54
   388  00FE0A  3E                 	db	62
   389  00FE0B  41                 	db	65
   390  00FE0C  41                 	db	65
   391  00FE0D  41                 	db	65
   392  00FE0E  22                 	db	34
   393  00FE0F  7F                 	db	127
   394  00FE10  41                 	db	65
   395  00FE11  41                 	db	65
   396  00FE12  22                 	db	34
   397  00FE13  1C                 	db	28
   398  00FE14  7F                 	db	127
   399  00FE15  49                 	db	73
   400  00FE16  49                 	db	73
   401  00FE17  49                 	db	73
   402  00FE18  41                 	db	65
   403  00FE19  7F                 	db	127
   404  00FE1A  09                 	db	9
   405  00FE1B  09                 	db	9
   406  00FE1C  09                 	db	9
   407  00FE1D  01                 	db	1
   408  00FE1E  3E                 	db	62
   409  00FE1F  41                 	db	65
   410  00FE20  49                 	db	73
   411  00FE21  49                 	db	73
   412  00FE22  7A                 	db	122
   413  00FE23  7F                 	db	127
   414  00FE24  08                 	db	8
   415  00FE25  08                 	db	8
   416  00FE26  08                 	db	8
   417  00FE27  7F                 	db	127
   418  00FE28  00                 	db	0
   419  00FE29  41                 	db	65
   420  00FE2A  7F                 	db	127
   421  00FE2B  41                 	db	65
   422  00FE2C  00                 	db	0
   423  00FE2D  20                 	db	32
   424  00FE2E  40                 	db	64
   425  00FE2F  41                 	db	65
   426  00FE30  3F                 	db	63
   427  00FE31  01                 	db	1
   428  00FE32  7F                 	db	127
   429  00FE33  08                 	db	8
   430  00FE34  14                 	db	20
   431  00FE35  22                 	db	34
   432  00FE36  41                 	db	65
   433  00FE37  7F                 	db	127
   434  00FE38  40                 	db	64
   435  00FE39  40                 	db	64
   436  00FE3A  40                 	db	64
   437  00FE3B  40                 	db	64
   438  00FE3C  7F                 	db	127
   439  00FE3D  02                 	db	2
   440  00FE3E  0C                 	db	12
   441  00FE3F  02                 	db	2
   442  00FE40  7F                 	db	127
   443  00FE41  7F                 	db	127
   444  00FE42  04                 	db	4
   445  00FE43  08                 	db	8
   446  00FE44  10                 	db	16
   447  00FE45  7F                 	db	127
   448  00FE46  3E                 	db	62
   449  00FE47  41                 	db	65
   450  00FE48  41                 	db	65
   451  00FE49  41                 	db	65
   452  00FE4A  3E                 	db	62
   453  00FE4B  7F                 	db	127
   454  00FE4C  09                 	db	9
   455  00FE4D  09                 	db	9
   456  00FE4E  09                 	db	9
   457  00FE4F  06                 	db	6
   458  00FE50  3E                 	db	62
   459  00FE51  41                 	db	65
   460  00FE52  51                 	db	81
   461  00FE53  21                 	db	33
   462  00FE54  5E                 	db	94
   463  00FE55  7F                 	db	127
   464  00FE56  09                 	db	9
   465  00FE57  19                 	db	25
   466  00FE58  29                 	db	41
   467  00FE59  46                 	db	70
   468  00FE5A  46                 	db	70
   469  00FE5B  49                 	db	73
   470  00FE5C  49                 	db	73
   471  00FE5D  49                 	db	73
   472  00FE5E  31                 	db	49
   473  00FE5F  01                 	db	1
   474  00FE60  01                 	db	1
   475  00FE61  7F                 	db	127
   476  00FE62  01                 	db	1
   477  00FE63  01                 	db	1
   478  00FE64  3F                 	db	63
   479  00FE65  40                 	db	64
   480  00FE66  40                 	db	64
   481  00FE67  40                 	db	64
   482  00FE68  3F                 	db	63
   483  00FE69  1F                 	db	31
   484  00FE6A  20                 	db	32
   485  00FE6B  40                 	db	64
   486  00FE6C  20                 	db	32
   487  00FE6D  1F                 	db	31
   488  00FE6E  3F                 	db	63
   489  00FE6F  40                 	db	64
   490  00FE70  38                 	db	56
   491  00FE71  40                 	db	64
   492  00FE72  3F                 	db	63
   493  00FE73  63                 	db	99
   494  00FE74  14                 	db	20
   495  00FE75  08                 	db	8
   496  00FE76  14                 	db	20
   497  00FE77  63                 	db	99
   498  00FE78  07                 	db	7
   499  00FE79  08                 	db	8
   500  00FE7A  70                 	db	112
   501  00FE7B  08                 	db	8
   502  00FE7C  07                 	db	7
   503  00FE7D  61                 	db	97
   504  00FE7E  51                 	db	81
   505  00FE7F  49                 	db	73
   506  00FE80  45                 	db	69
   507  00FE81  43                 	db	67
   508  00FE82  00                 	db	0
   509  00FE83  7F                 	db	127
   510  00FE84  41                 	db	65
   511  00FE85  41                 	db	65
   512  00FE86  00                 	db	0
   513  00FE87  02                 	db	2
   514  00FE88  04                 	db	4
   515  00FE89  08                 	db	8
   516  00FE8A  10                 	db	16
   517  00FE8B  20                 	db	32
   518  00FE8C  00                 	db	0
   519  00FE8D  41                 	db	65
   520  00FE8E  41                 	db	65
   521  00FE8F  7F                 	db	127
   522  00FE90  00                 	db	0
   523  00FE91  04                 	db	4
   524  00FE92  02                 	db	2
   525  00FE93  01                 	db	1
   526  00FE94  02                 	db	2
   527  00FE95  04                 	db	4
   528  00FE96  40                 	db	64
   529  00FE97  40                 	db	64
   530  00FE98  40                 	db	64
   531  00FE99  40                 	db	64
   532  00FE9A  40                 	db	64
   533  00FE9B  00                 	db	0
   534  00FE9C  01                 	db	1
   535  00FE9D  02                 	db	2
   536  00FE9E  04                 	db	4
   537  00FE9F  00                 	db	0
   538  00FEA0  20                 	db	32
   539  00FEA1  54                 	db	84
   540  00FEA2  54                 	db	84
   541  00FEA3  54                 	db	84
   542  00FEA4  78                 	db	120
   543  00FEA5  7F                 	db	127
   544  00FEA6  48                 	db	72
   545  00FEA7  44                 	db	68
   546  00FEA8  44                 	db	68
   547  00FEA9  38                 	db	56
   548  00FEAA  38                 	db	56
   549  00FEAB  44                 	db	68
   550  00FEAC  44                 	db	68
   551  00FEAD  44                 	db	68
   552  00FEAE  20                 	db	32
   553  00FEAF  38                 	db	56
   554  00FEB0  44                 	db	68
   555  00FEB1  44                 	db	68
   556  00FEB2  48                 	db	72
   557  00FEB3  7F                 	db	127
   558  00FEB4  38                 	db	56
   559  00FEB5  54                 	db	84
   560  00FEB6  54                 	db	84
   561  00FEB7  54                 	db	84
   562  00FEB8  18                 	db	24
   563  00FEB9  08                 	db	8
   564  00FEBA  7E                 	db	126
   565  00FEBB  09                 	db	9
   566  00FEBC  01                 	db	1
   567  00FEBD  02                 	db	2
   568  00FEBE  0C                 	db	12
   569  00FEBF  52                 	db	82
   570  00FEC0  52                 	db	82
   571  00FEC1  52                 	db	82
   572  00FEC2  3E                 	db	62
   573  00FEC3  7F                 	db	127
   574  00FEC4  08                 	db	8
   575  00FEC5  04                 	db	4
   576  00FEC6  04                 	db	4
   577  00FEC7  78                 	db	120
   578  00FEC8  00                 	db	0
   579  00FEC9  44                 	db	68
   580  00FECA  7D                 	db	125
   581  00FECB  40                 	db	64
   582  00FECC  00                 	db	0
   583  00FECD  20                 	db	32
   584  00FECE  40                 	db	64
   585  00FECF  44                 	db	68
   586  00FED0  3D                 	db	61
   587  00FED1  00                 	db	0
   588  00FED2  7F                 	db	127
   589  00FED3  10                 	db	16
   590  00FED4  28                 	db	40
   591  00FED5  44                 	db	68
   592  00FED6  00                 	db	0
   593  00FED7  00                 	db	0
   594  00FED8  41                 	db	65
   595  00FED9  7F                 	db	127
   596  00FEDA  40                 	db	64
   597  00FEDB  00                 	db	0
   598  00FEDC  7C                 	db	124
   599  00FEDD  04                 	db	4
   600  00FEDE  18                 	db	24
   601  00FEDF  04                 	db	4
   602  00FEE0  78                 	db	120
   603  00FEE1  7C                 	db	124
   604  00FEE2  08                 	db	8
   605  00FEE3  04                 	db	4
   606  00FEE4  04                 	db	4
   607  00FEE5  78                 	db	120
   608  00FEE6  38                 	db	56
   609  00FEE7  44                 	db	68
   610  00FEE8  44                 	db	68
   611  00FEE9  44                 	db	68
   612  00FEEA  38                 	db	56
   613  00FEEB  7C                 	db	124
   614  00FEEC  14                 	db	20
   615  00FEED  14                 	db	20
   616  00FEEE  14                 	db	20
   617  00FEEF  08                 	db	8
   618  00FEF0  08                 	db	8
   619  00FEF1  14                 	db	20
   620  00FEF2  14                 	db	20
   621  00FEF3  18                 	db	24
   622  00FEF4  7C                 	db	124
   623  00FEF5  7C                 	db	124
   624  00FEF6  08                 	db	8
   625  00FEF7  04                 	db	4
   626  00FEF8  04                 	db	4
   627  00FEF9  08                 	db	8
   628  00FEFA  48                 	db	72
   629  00FEFB  54                 	db	84
   630  00FEFC  54                 	db	84
   631  00FEFD  54                 	db	84
   632  00FEFE  20                 	db	32
   633  00FEFF  04                 	db	4
   634  00FF00  3F                 	db	63
   635  00FF01  44                 	db	68
   636  00FF02  40                 	db	64
   637  00FF03  20                 	db	32
   638  00FF04  3C                 	db	60
   639  00FF05  40                 	db	64
   640  00FF06  40                 	db	64
   641  00FF07  20                 	db	32
   642  00FF08  7C                 	db	124
   643  00FF09  1C                 	db	28
   644  00FF0A  20                 	db	32
   645  00FF0B  40                 	db	64
   646  00FF0C  20                 	db	32
   647  00FF0D  1C                 	db	28
   648  00FF0E  3C                 	db	60
   649  00FF0F  40                 	db	64
   650  00FF10  30                 	db	48
   651  00FF11  40                 	db	64
   652  00FF12  3C                 	db	60
   653  00FF13  44                 	db	68
   654  00FF14  28                 	db	40
   655  00FF15  10                 	db	16
   656  00FF16  28                 	db	40
   657  00FF17  44                 	db	68
   658  00FF18  0C                 	db	12
   659  00FF19  50                 	db	80
   660  00FF1A  50                 	db	80
   661  00FF1B  50                 	db	80
   662  00FF1C  3C                 	db	60
   663  00FF1D  44                 	db	68
   664  00FF1E  64                 	db	100
   665  00FF1F  54                 	db	84
   666  00FF20  4C                 	db	76
   667  00FF21  44                 	db	68
   668  00FF22  00                 	db	0
   669  00FF23  08                 	db	8
   670  00FF24  36                 	db	54
   671  00FF25  41                 	db	65
   672  00FF26  00                 	db	0
   673  00FF27  00                 	db	0
   674  00FF28  00                 	db	0
   675  00FF29  7F                 	db	127
   676  00FF2A  00                 	db	0
   677  00FF2B  00                 	db	0
   678  00FF2C  00                 	db	0
   679  00FF2D  41                 	db	65
   680  00FF2E  36                 	db	54
   681  00FF2F  08                 	db	8
   682  00FF30  00                 	db	0
   683  00FF31  10                 	db	16
   684  00FF32  08                 	db	8
   685  00FF33  08                 	db	8
   686  00FF34  10                 	db	16
   687  00FF35  08                 	db	8
   688  00FF36  78                 	db	120
   689  00FF37  46                 	db	70
   690  00FF38  41                 	db	65
   691  00FF39  46                 	db	70
   692  00FF3A  78                 	db	120
   693  00FF3B                     __end_of_ASCII:
   694                           	callstack 0
   695  00FF3B  2D                 	db	45
   696  00FF3C  2D                 	db	45
   697  00FF3D  2D                 	db	45
   698  00FF3E  2D                 	db	45
   699  00FF3F  2D                 	db	45
   700  00FF40  2D                 	db	45
   701  00FF41  2D                 	db	45
   702  00FF42  2D                 	db	45
   703  00FF43  2D                 	db	45
   704  00FF44  2D                 	db	45
   705  00FF45  2D                 	db	45
   706  00FF46  2D                 	db	45
   707  00FF47  2D                 	db	45
   708  00FF48  2D                 	db	45
   709  00FF49  2D                 	db	45
   710  00FF4A  2D                 	db	45
   711  00FF4B  2D                 	db	45
   712  00FF4C  2D                 	db	45
   713  00FF4D  2D                 	db	45
   714  00FF4E  2D                 	db	45
   715  00FF4F  2D                 	db	45
   716  00FF50  2D                 	db	45
   717  00FF51  2D                 	db	45
   718  00FF52  2D                 	db	45
   719  00FF53  2D                 	db	45
   720  00FF54  2D                 	db	45
   721  00FF55  2D                 	db	45
   722  00FF56  2D                 	db	45
   723  00FF57  2D                 	db	45
   724  00FF58  2D                 	db	45
   725  00FF59  2D                 	db	45
   726  00FF5A  2D                 	db	45
   727  00FF5B  2D                 	db	45
   728  00FF5C  2D                 	db	45
   729  00FF5D  2D                 	db	45
   730  00FF5E  2D                 	db	45
   731  00FF5F  2D                 	db	45
   732  00FF60  2D                 	db	45
   733  00FF61  2D                 	db	45
   734  00FF62  2D                 	db	45
   735  00FF63  2D                 	db	45
   736  00FF64  2D                 	db	45
   737  00FF65  2D                 	db	45
   738  00FF66  2D                 	db	45
   739  00FF67  2D                 	db	45
   740  00FF68  2D                 	db	45
   741  00FF69  2D                 	db	45
   742  00FF6A  0A                 	db	10
   743  00FF6B  0D                 	db	13
   744  00FF6C  00                 	db	0
   745  00FF6D                     STR_3:
   746  00FF6D  0A                 	db	10
   747  00FF6E  44                 	db	68	;'D'
   748  00FF6F  61                 	db	97	;'a'
   749  00FF70  74                 	db	116	;'t'
   750  00FF71  61                 	db	97	;'a'
   751  00FF72  20                 	db	32
   752  00FF73  74                 	db	116	;'t'
   753  00FF74  6F                 	db	111	;'o'
   754  00FF75  20                 	db	32
   755  00FF76  62                 	db	98	;'b'
   756  00FF77  65                 	db	101	;'e'
   757  00FF78  20                 	db	32
   758  00FF79  77                 	db	119	;'w'
   759  00FF7A  72                 	db	114	;'r'
   760  00FF7B  69                 	db	105	;'i'
   761  00FF7C  74                 	db	116	;'t'
   762  00FF7D  74                 	db	116	;'t'
   763  00FF7E  65                 	db	101	;'e'
   764  00FF7F  6E                 	db	110	;'n'
   765  00FF80  20                 	db	32
   766  00FF81  74                 	db	116	;'t'
   767  00FF82  6F                 	db	111	;'o'
   768  00FF83  20                 	db	32
   769  00FF84  45                 	db	69	;'E'
   770  00FF85  45                 	db	69	;'E'
   771  00FF86  50                 	db	80	;'P'
   772  00FF87  52                 	db	82	;'R'
   773  00FF88  4F                 	db	79	;'O'
   774  00FF89  4D                 	db	77	;'M'
   775  00FF8A  3A                 	db	58	;':'
   776  00FF8B  0A                 	db	10
   777  00FF8C  0A                 	db	10
   778  00FF8D  0D                 	db	13
   779  00FF8E  00                 	db	0
   780  00FF8F  45                 	db	69	;'E'
   781  00FF90  45                 	db	69	;'E'
   782  00FF91  50                 	db	80	;'P'
   783  00FF92  52                 	db	82	;'R'
   784  00FF93  4F                 	db	79	;'O'
   785  00FF94  4D                 	db	77	;'M'
   786  00FF95  20                 	db	32
   787  00FF96  48                 	db	72	;'H'
   788  00FF97  69                 	db	105	;'i'
   789  00FF98  67                 	db	103	;'g'
   790  00FF99  68                 	db	104	;'h'
   791  00FF9A  20                 	db	32
   792  00FF9B  41                 	db	65	;'A'
   793  00FF9C  64                 	db	100	;'d'
   794  00FF9D  64                 	db	100	;'d'
   795  00FF9E  72                 	db	114	;'r'
   796  00FF9F  65                 	db	101	;'e'
   797  00FFA0  73                 	db	115	;'s'
   798  00FFA1  73                 	db	115	;'s'
   799  00FFA2  3A                 	db	58	;':'
   800  00FFA3  30                 	db	48	;'0'
   801  00FFA4  78                 	db	120	;'x'
   802  00FFA5  25                 	db	37
   803  00FFA6  78                 	db	120	;'x'
   804  00FFA7  0A                 	db	10
   805  00FFA8  0D                 	db	13
   806  00FFA9  00                 	db	0
   807  00FFAA  45                 	db	69	;'E'
   808  00FFAB  45                 	db	69	;'E'
   809  00FFAC  50                 	db	80	;'P'
   810  00FFAD  52                 	db	82	;'R'
   811  00FFAE  4F                 	db	79	;'O'
   812  00FFAF  4D                 	db	77	;'M'
   813  00FFB0  20                 	db	32
   814  00FFB1  4C                 	db	76	;'L'
   815  00FFB2  6F                 	db	111	;'o'
   816  00FFB3  77                 	db	119	;'w'
   817  00FFB4  20                 	db	32
   818  00FFB5  41                 	db	65	;'A'
   819  00FFB6  64                 	db	100	;'d'
   820  00FFB7  64                 	db	100	;'d'
   821  00FFB8  72                 	db	114	;'r'
   822  00FFB9  65                 	db	101	;'e'
   823  00FFBA  73                 	db	115	;'s'
   824  00FFBB  73                 	db	115	;'s'
   825  00FFBC  3A                 	db	58	;':'
   826  00FFBD  30                 	db	48	;'0'
   827  00FFBE  78                 	db	120	;'x'
   828  00FFBF  25                 	db	37
   829  00FFC0  78                 	db	120	;'x'
   830  00FFC1  0A                 	db	10
   831  00FFC2  0D                 	db	13
   832  00FFC3  00                 	db	0
   833  00FFC4  0A                 	db	10
   834  00FFC5  0D                 	db	13
   835  00FFC6  45                 	db	69	;'E'
   836  00FFC7  45                 	db	69	;'E'
   837  00FFC8  50                 	db	80	;'P'
   838  00FFC9  52                 	db	82	;'R'
   839  00FFCA  4F                 	db	79	;'O'
   840  00FFCB  4D                 	db	77	;'M'
   841  00FFCC  20                 	db	32
   842  00FFCD  52                 	db	82	;'R'
   843  00FFCE  65                 	db	101	;'e'
   844  00FFCF  61                 	db	97	;'a'
   845  00FFD0  64                 	db	100	;'d'
   846  00FFD1  20                 	db	32
   847  00FFD2  44                 	db	68	;'D'
   848  00FFD3  61                 	db	97	;'a'
   849  00FFD4  74                 	db	116	;'t'
   850  00FFD5  61                 	db	97	;'a'
   851  00FFD6  3A                 	db	58	;':'
   852  00FFD7  0A                 	db	10
   853  00FFD8  0A                 	db	10
   854  00FFD9  0D                 	db	13
   855  00FFDA  00                 	db	0
   856  00FFDB                     STR_4:
   857  00FFDB  30                 	db	48	;'0'
   858  00FFDC  78                 	db	120	;'x'
   859  00FFDD  25                 	db	37
   860  00FFDE  78                 	db	120	;'x'
   861  00FFDF  20                 	db	32
   862  00FFE0  20                 	db	32
   863  00FFE1  00                 	db	0
   864  00FFE2                     STR_11:
   865  00FFE2  25                 	db	37
   866  00FFE3  2E                 	db	46
   867  00FFE4  32                 	db	50	;'2'
   868  00FFE5  66                 	db	102	;'f'
   869  00FFE6  00                 	db	0
   870  00FFE7                     STR_10:
   871  00FFE7  25                 	db	37
   872  00FFE8  2E                 	db	46
   873  00FFE9  33                 	db	51	;'3'
   874  00FFEA  66                 	db	102	;'f'
   875  00FFEB  00                 	db	0
   876  00FFEC                     STR_13:
   877  00FFEC  49                 	db	73	;'I'
   878  00FFED  4E                 	db	78	;'N'
   879  00FFEE  46                 	db	70	;'F'
   880  00FFEF  00                 	db	0
   881  00FFF0                     STR_17:
   882  00FFF0  4E                 	db	78	;'N'
   883  00FFF1  41                 	db	65	;'A'
   884  00FFF2  4E                 	db	78	;'N'
   885  00FFF3  00                 	db	0
   886  00FFF4                     STR_14:
   887  00FFF4  69                 	db	105	;'i'
   888  00FFF5  6E                 	db	110	;'n'
   889  00FFF6  66                 	db	102	;'f'
   890  00FFF7  00                 	db	0
   891  00FFF8                     STR_18:
   892  00FFF8  6E                 	db	110	;'n'
   893  00FFF9  61                 	db	97	;'a'
   894  00FFFA  6E                 	db	110	;'n'
   895  00FFFB  00                 	db	0
   896  00FFFC                     STR_21:
   897  00FFFC  6C                 	db	108	;'l'
   898  00FFFD  66                 	db	102	;'f'
   899  00FFFE  00                 	db	0
   900  00FFFF  00                 	db	0	; dummy byte at the end
   901  0000                     
   902                           	psect	nvBANK0
   903  0000F3                     __pnvBANK0:
   904                           	callstack 0
   905  0000F3                     _Power:
   906                           	callstack 0
   907  0000F3                     	ds	4
   908  0000F7                     _Current:
   909                           	callstack 0
   910  0000F7                     	ds	4
   911  0000FB                     _Voltage:
   912                           	callstack 0
   913  0000FB                     	ds	4
   914  0000                     _WPUB	set	3931
   915  0000                     _ANCON1	set	3932
   916  0000                     _ANCON0	set	3933
   917  0000                     _SSPSTATbits	set	4039
   918  0000                     _SSPCON2bits	set	4037
   919  0000                     _SSPBUF	set	4041
   920  0000                     _SSPCON1bits	set	4038
   921  0000                     _SSPADD	set	4040
   922  0000                     _SSPCON2	set	4037
   923  0000                     _SSPCON1	set	4038
   924  0000                     _SSPSTAT	set	4039
   925  0000                     _REFOCON	set	3994
   926  0000                     _OSCTUNE	set	3995
   927  0000                     _OSCCON2	set	4050
   928  0000                     _OSCCON	set	4051
   929  0000                     _INTCON2bits	set	4081
   930  0000                     _TRISC	set	3988
   931  0000                     _TRISB	set	3987
   932  0000                     _TRISA	set	3986
   933  0000                     _LATC	set	3979
   934  0000                     _LATB	set	3978
   935  0000                     _LATA	set	3977
   936  0000                     _PIR1bits	set	3998
   937  0000                     _PIE1bits	set	3997
   938  0000                     _PIR2bits	set	4001
   939  0000                     _PIE2bits	set	4000
   940  0000                     _INTCONbits	set	4082
   941  0000                     _RCONbits	set	4048
   942  0000                     _TRISC4	set	31908
   943  0000                     _TRISC3	set	31907
   944  0000                     _ACKEN	set	32300
   945  0000                     _ACKDT	set	32301
   946  0000                     _RCEN	set	32299
   947  0000                     _PEN	set	32298
   948  0000                     _RSEN	set	32297
   949  0000                     _SEN	set	32296
   950                           
   951                           ; #config settings
   952                           
   953                           	psect	cinit
   954  00355C                     __pcinit:
   955                           	callstack 0
   956  00355C                     start_initialization:
   957                           	callstack 0
   958  00355C                     __initialization:
   959                           	callstack 0
   960                           
   961                           ; Initialize objects allocated to BANK1 (17 bytes)
   962                           ; load TBLPTR registers with __pidataBANK1
   963  00355C  0EFE               	movlw	low __pidataBANK1
   964  00355E  6EF6               	movwf	tblptrl,c
   965  003560  0E39               	movlw	high __pidataBANK1
   966  003562  6EF7               	movwf	tblptrh,c
   967  003564  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   968  003566  6EF8               	movwf	tblptru,c
   969  003568  EE01  F0DC         	lfsr	0,__pdataBANK1
   970  00356C  EE10 F011          	lfsr	1,17
   971  003570                     copy_data0:
   972  003570  0009               	tblrd		*+
   973  003572  CFF5 FFEE          	movff	tablat,postinc0
   974  003576  50E5               	movf	postdec1,w,c
   975  003578  50E1               	movf	fsr1l,w,c
   976  00357A  E1FA               	bnz	copy_data0
   977                           
   978                           ; Clear objects allocated to BANK1 (196 bytes)
   979  00357C  EE01  F000         	lfsr	0,__pbssBANK1
   980  003580  0EC4               	movlw	196
   981  003582                     clear_0:
   982  003582  6AEE               	clrf	postinc0,c
   983  003584  06E8               	decf	wreg,f,c
   984  003586  E1FD               	bnz	clear_0
   985                           
   986                           ; Clear objects allocated to BANK0 (18 bytes)
   987  003588  EE00  F0E1         	lfsr	0,__pbssBANK0
   988  00358C  0E12               	movlw	18
   989  00358E                     clear_1:
   990  00358E  6AEE               	clrf	postinc0,c
   991  003590  06E8               	decf	wreg,f,c
   992  003592  E1FD               	bnz	clear_1
   993                           
   994                           ; Clear objects allocated to COMRAM (24 bytes)
   995  003594  EE00  F02E         	lfsr	0,__pbssCOMRAM
   996  003598  0E18               	movlw	24
   997  00359A                     clear_2:
   998  00359A  6AEE               	clrf	postinc0,c
   999  00359C  06E8               	decf	wreg,f,c
  1000  00359E  E1FD               	bnz	clear_2
  1001  0035A0                     end_of_initialization:
  1002                           	callstack 0
  1003  0035A0                     __end_of__initialization:
  1004                           	callstack 0
  1005  0035A0  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1006  0035A2  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1007  0035A4  0100               	movlb	0
  1008  0035A6  EF70  F015         	goto	_main	;jump to C main() function
  1009                           
  1010                           	psect	bssCOMRAM
  1011  00002E                     __pbssCOMRAM:
  1012                           	callstack 0
  1013  00002E                     floorf@F527:
  1014                           	callstack 0
  1015  00002E                     	ds	4
  1016  000032                     ___fpclassifyf@F465:
  1017                           	callstack 0
  1018  000032                     	ds	4
  1019  000036                     _power:
  1020                           	callstack 0
  1021  000036                     	ds	4
  1022  00003A                     _current:
  1023                           	callstack 0
  1024  00003A                     	ds	4
  1025  00003E                     _voltage:
  1026                           	callstack 0
  1027  00003E                     	ds	4
  1028  000042                     _flags:
  1029                           	callstack 0
  1030  000042                     	ds	2
  1031  000044                     _MSSP_InterruptHandler:
  1032                           	callstack 0
  1033  000044                     	ds	2
  1034                           
  1035                           	psect	bssBANK0
  1036  0000E1                     __pbssBANK0:
  1037                           	callstack 0
  1038  0000E1                     _nout:
  1039                           	callstack 0
  1040  0000E1                     	ds	2
  1041  0000E3                     _width:
  1042                           	callstack 0
  1043  0000E3                     	ds	2
  1044  0000E5                     _prec:
  1045                           	callstack 0
  1046  0000E5                     	ds	2
  1047  0000E7                     _power_str:
  1048                           	callstack 0
  1049  0000E7                     	ds	4
  1050  0000EB                     _current_str:
  1051                           	callstack 0
  1052  0000EB                     	ds	4
  1053  0000EF                     _voltage_str:
  1054                           	callstack 0
  1055  0000EF                     	ds	4
  1056                           
  1057                           	psect	bssBANK1
  1058  000100                     __pbssBANK1:
  1059                           	callstack 0
  1060  000100                     _oi:
  1061                           	callstack 0
  1062  000100                     	ds	80
  1063  000150                     _I2C_Status:
  1064                           	callstack 0
  1065  000150                     	ds	36
  1066  000174                     _dbuf:
  1067                           	callstack 0
  1068  000174                     	ds	80
  1069                           
  1070                           	psect	dataBANK1
  1071  0001DC                     __pdataBANK1:
  1072                           	callstack 0
  1073  0001DC                     I2CSIMPLE_example@F12630:
  1074                           	callstack 0
  1075  0001DC                     	ds	17
  1076                           
  1077                           	psect	cstackBANK1
  1078  0001C4                     __pcstackBANK1:
  1079                           	callstack 0
  1080  0001C4                     ?_vfprintf:
  1081                           	callstack 0
  1082  0001C4                     vfprintf@fp:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x0
  1086  0001C4                     	ds	2
  1087  0001C6                     vfprintf@fmt:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x2
  1091  0001C6                     	ds	2
  1092  0001C8                     vfprintf@ap:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x4
  1096  0001C8                     	ds	2
  1097  0001CA                     ?_sprintf:
  1098                           	callstack 0
  1099  0001CA                     sprintf@s:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x6
  1103  0001CA                     	ds	2
  1104  0001CC                     sprintf@fmt:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x8
  1108  0001CC                     	ds	8
  1109  0001D4                     sprintf@ap:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x10
  1113  0001D4                     	ds	2
  1114  0001D6                     sprintf@f:
  1115                           	callstack 0
  1116                           
  1117                           ; 6 bytes @ 0x12
  1118  0001D6                     	ds	6
  1119                           
  1120                           	psect	cstackBANK0
  1121  000060                     __pcstackBANK0:
  1122                           	callstack 0
  1123  000060                     ??_I2C_Master_Init:
  1124  000060                     ?_pad:
  1125                           	callstack 0
  1126  000060                     ?___flmul:
  1127                           	callstack 0
  1128  000060                     pad@fp:
  1129                           	callstack 0
  1130  000060                     atoi@neg:
  1131                           	callstack 0
  1132  000060                     ___fldiv@rem:
  1133                           	callstack 0
  1134  000060                     ___flmul@b:
  1135                           	callstack 0
  1136                           
  1137                           ; 4 bytes @ 0x0
  1138  000060                     	ds	2
  1139  000062                     pad@buf:
  1140                           	callstack 0
  1141  000062                     _atoi$2110:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x2
  1145  000062                     	ds	2
  1146  000064                     ___fldiv@sign:
  1147                           	callstack 0
  1148  000064                     pad@p:
  1149                           	callstack 0
  1150  000064                     _atoi$2112:
  1151                           	callstack 0
  1152  000064                     ___flmul@a:
  1153                           	callstack 0
  1154                           
  1155                           ; 4 bytes @ 0x4
  1156  000064                     	ds	1
  1157  000065                     ___fldiv@new_exp:
  1158                           	callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x5
  1161  000065                     	ds	1
  1162  000066                     _atoi$2111:
  1163                           	callstack 0
  1164  000066                     pad@i:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x6
  1168  000066                     	ds	1
  1169  000067                     atoi@n:
  1170                           	callstack 0
  1171  000067                     ___fldiv@grs:
  1172                           	callstack 0
  1173                           
  1174                           ; 4 bytes @ 0x7
  1175  000067                     	ds	1
  1176  000068                     ??___flmul:
  1177  000068                     pad@w:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x8
  1181  000068                     	ds	3
  1182  00006B                     ___fldiv@bexp:
  1183                           	callstack 0
  1184                           
  1185                           ; 1 bytes @ 0xB
  1186  00006B                     	ds	1
  1187  00006C                     ___fldiv@aexp:
  1188                           	callstack 0
  1189  00006C                     ___flmul@sign:
  1190                           	callstack 0
  1191                           
  1192                           ; 1 bytes @ 0xC
  1193  00006C                     	ds	1
  1194  00006D                     ??_floorf:
  1195  00006D                     ?_Power_ReadRegister:
  1196                           	callstack 0
  1197  00006D                     ___flmul@aexp:
  1198                           	callstack 0
  1199                           
  1200                           ; 1 bytes @ 0xD
  1201  00006D                     	ds	1
  1202  00006E                     ___flmul@grs:
  1203                           	callstack 0
  1204                           
  1205                           ; 4 bytes @ 0xE
  1206  00006E                     	ds	3
  1207  000071                     ??_Power_ReadRegister:
  1208                           
  1209                           ; 1 bytes @ 0x11
  1210  000071                     	ds	1
  1211  000072                     ___flmul@bexp:
  1212                           	callstack 0
  1213                           
  1214                           ; 1 bytes @ 0x12
  1215  000072                     	ds	1
  1216  000073                     Power_ReadRegister@temp_f:
  1217                           	callstack 0
  1218  000073                     ___flmul@prod:
  1219                           	callstack 0
  1220  000073                     floorf@m:
  1221                           	callstack 0
  1222                           
  1223                           ; 4 bytes @ 0x13
  1224  000073                     	ds	2
  1225  000075                     Power_ReadRegister@temp_e:
  1226                           	callstack 0
  1227                           
  1228                           ; 1 bytes @ 0x15
  1229  000075                     	ds	2
  1230  000077                     ___flmul@temp:
  1231                           	callstack 0
  1232  000077                     floorf@e:
  1233                           	callstack 0
  1234                           
  1235                           ; 2 bytes @ 0x17
  1236  000077                     	ds	2
  1237  000079                     ?_Voltage_ReadRegister:
  1238                           	callstack 0
  1239  000079                     ?_Current_ReadRegister:
  1240                           	callstack 0
  1241  000079                     ?___flsub:
  1242                           	callstack 0
  1243  000079                     ___flge@ff1:
  1244                           	callstack 0
  1245  000079                     ___flsub@b:
  1246                           	callstack 0
  1247  000079                     floorf@u:
  1248                           	callstack 0
  1249                           
  1250                           ; 4 bytes @ 0x19
  1251  000079                     	ds	4
  1252  00007D                     ??_Voltage_ReadRegister:
  1253  00007D                     ??_Current_ReadRegister:
  1254  00007D                     ___flge@ff2:
  1255                           	callstack 0
  1256  00007D                     ___flsub@a:
  1257                           	callstack 0
  1258                           
  1259                           ; 4 bytes @ 0x1D
  1260  00007D                     	ds	2
  1261  00007F                     Voltage_ReadRegister@temp_b:
  1262                           	callstack 0
  1263  00007F                     Current_ReadRegister@temp_d:
  1264                           	callstack 0
  1265                           
  1266                           ; 2 bytes @ 0x1F
  1267  00007F                     	ds	2
  1268  000081                     ??___flge:
  1269  000081                     Voltage_ReadRegister@temp_a:
  1270                           	callstack 0
  1271  000081                     Current_ReadRegister@temp_c:
  1272                           	callstack 0
  1273                           
  1274                           ; 1 bytes @ 0x21
  1275  000081                     	ds	4
  1276  000085                     ?_efgtoa:
  1277                           	callstack 0
  1278  000085                     efgtoa@fp:
  1279                           	callstack 0
  1280                           
  1281                           ; 2 bytes @ 0x25
  1282  000085                     	ds	2
  1283  000087                     efgtoa@f:
  1284                           	callstack 0
  1285                           
  1286                           ; 4 bytes @ 0x27
  1287  000087                     	ds	4
  1288  00008B                     efgtoa@c:
  1289                           	callstack 0
  1290                           
  1291                           ; 1 bytes @ 0x2B
  1292  00008B                     	ds	1
  1293  00008C                     ??_efgtoa:
  1294                           
  1295                           ; 1 bytes @ 0x2C
  1296  00008C                     	ds	5
  1297  000091                     _efgtoa$2046:
  1298                           	callstack 0
  1299                           
  1300                           ; 2 bytes @ 0x31
  1301  000091                     	ds	2
  1302  000093                     _efgtoa$2047:
  1303                           	callstack 0
  1304                           
  1305                           ; 2 bytes @ 0x33
  1306  000093                     	ds	2
  1307  000095                     _efgtoa$2052:
  1308                           	callstack 0
  1309                           
  1310                           ; 2 bytes @ 0x35
  1311  000095                     	ds	2
  1312  000097                     _efgtoa$2056:
  1313                           	callstack 0
  1314                           
  1315                           ; 2 bytes @ 0x37
  1316  000097                     	ds	2
  1317  000099                     _efgtoa$2057:
  1318                           	callstack 0
  1319                           
  1320                           ; 2 bytes @ 0x39
  1321  000099                     	ds	2
  1322  00009B                     _efgtoa$2058:
  1323                           	callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x3B
  1326  00009B                     	ds	2
  1327  00009D                     efgtoa@t:
  1328                           	callstack 0
  1329                           
  1330                           ; 2 bytes @ 0x3D
  1331  00009D                     	ds	2
  1332  00009F                     efgtoa@pp:
  1333                           	callstack 0
  1334                           
  1335                           ; 2 bytes @ 0x3F
  1336  00009F                     	ds	2
  1337  0000A1                     efgtoa@ne:
  1338                           	callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x41
  1341  0000A1                     	ds	2
  1342  0000A3                     efgtoa@m:
  1343                           	callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x43
  1346  0000A3                     	ds	2
  1347  0000A5                     efgtoa@ou:
  1348                           	callstack 0
  1349                           
  1350                           ; 4 bytes @ 0x45
  1351  0000A5                     	ds	4
  1352  0000A9                     efgtoa@d:
  1353                           	callstack 0
  1354                           
  1355                           ; 2 bytes @ 0x49
  1356  0000A9                     	ds	2
  1357  0000AB                     efgtoa@sign:
  1358                           	callstack 0
  1359                           
  1360                           ; 2 bytes @ 0x4B
  1361  0000AB                     	ds	2
  1362  0000AD                     efgtoa@p:
  1363                           	callstack 0
  1364                           
  1365                           ; 2 bytes @ 0x4D
  1366  0000AD                     	ds	2
  1367  0000AF                     efgtoa@w:
  1368                           	callstack 0
  1369                           
  1370                           ; 2 bytes @ 0x4F
  1371  0000AF                     	ds	2
  1372  0000B1                     efgtoa@nmode:
  1373                           	callstack 0
  1374                           
  1375                           ; 1 bytes @ 0x51
  1376  0000B1                     	ds	1
  1377  0000B2                     efgtoa@mode:
  1378                           	callstack 0
  1379                           
  1380                           ; 1 bytes @ 0x52
  1381  0000B2                     	ds	1
  1382  0000B3                     efgtoa@h:
  1383                           	callstack 0
  1384                           
  1385                           ; 4 bytes @ 0x53
  1386  0000B3                     	ds	4
  1387  0000B7                     efgtoa@l:
  1388                           	callstack 0
  1389                           
  1390                           ; 4 bytes @ 0x57
  1391  0000B7                     	ds	4
  1392  0000BB                     efgtoa@i:
  1393                           	callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x5B
  1396  0000BB                     	ds	2
  1397  0000BD                     efgtoa@g:
  1398                           	callstack 0
  1399                           
  1400                           ; 4 bytes @ 0x5D
  1401  0000BD                     	ds	4
  1402  0000C1                     efgtoa@e:
  1403                           	callstack 0
  1404                           
  1405                           ; 2 bytes @ 0x61
  1406  0000C1                     	ds	2
  1407  0000C3                     efgtoa@n:
  1408                           	callstack 0
  1409                           
  1410                           ; 2 bytes @ 0x63
  1411  0000C3                     	ds	2
  1412  0000C5                     efgtoa@u:
  1413                           	callstack 0
  1414                           
  1415                           ; 4 bytes @ 0x65
  1416  0000C5                     	ds	4
  1417  0000C9                     ?_vfpfcnvrt:
  1418                           	callstack 0
  1419  0000C9                     vfpfcnvrt@fp:
  1420                           	callstack 0
  1421                           
  1422                           ; 2 bytes @ 0x69
  1423  0000C9                     	ds	2
  1424  0000CB                     vfpfcnvrt@fmt:
  1425                           	callstack 0
  1426                           
  1427                           ; 2 bytes @ 0x6B
  1428  0000CB                     	ds	2
  1429  0000CD                     vfpfcnvrt@ap:
  1430                           	callstack 0
  1431                           
  1432                           ; 2 bytes @ 0x6D
  1433  0000CD                     	ds	2
  1434  0000CF                     ??_vfpfcnvrt:
  1435                           
  1436                           ; 1 bytes @ 0x6F
  1437  0000CF                     	ds	4
  1438  0000D3                     _vfpfcnvrt$2072:
  1439                           	callstack 0
  1440                           
  1441                           ; 2 bytes @ 0x73
  1442  0000D3                     	ds	2
  1443  0000D5                     _vfpfcnvrt$2076:
  1444                           	callstack 0
  1445                           
  1446                           ; 2 bytes @ 0x75
  1447  0000D5                     	ds	2
  1448  0000D7                     vfpfcnvrt@f:
  1449                           	callstack 0
  1450                           
  1451                           ; 4 bytes @ 0x77
  1452  0000D7                     	ds	4
  1453  0000DB                     vfpfcnvrt@ct:
  1454                           	callstack 0
  1455                           
  1456                           ; 3 bytes @ 0x7B
  1457  0000DB                     	ds	3
  1458  0000DE                     vfpfcnvrt@c:
  1459                           	callstack 0
  1460                           
  1461                           ; 1 bytes @ 0x7E
  1462  0000DE                     	ds	1
  1463  0000DF                     vfprintf@cfmt:
  1464                           	callstack 0
  1465                           
  1466                           ; 2 bytes @ 0x7F
  1467  0000DF                     	ds	2
  1468                           
  1469                           	psect	cstackCOMRAM
  1470  000001                     __pcstackCOMRAM:
  1471                           	callstack 0
  1472  000001                     I2C_MasterSendTxData@data:
  1473                           	callstack 0
  1474  000001                     I2C_SetBuffer@buffer:
  1475                           	callstack 0
  1476  000001                     I2C_SetCallback@cb:
  1477                           	callstack 0
  1478                           
  1479                           ; 2 bytes @ 0x0
  1480  000001                     	ds	1
  1481  000002                     
  1482                           ; 1 bytes @ 0x1
  1483  000002                     	ds	1
  1484  000003                     I2C_SetBuffer@bufferSize:
  1485                           	callstack 0
  1486  000003                     I2C_SetCallback@ptr:
  1487                           	callstack 0
  1488                           
  1489                           ; 2 bytes @ 0x2
  1490  000003                     	ds	2
  1491  000005                     I2C_SetCallback@idx:
  1492                           	callstack 0
  1493                           
  1494                           ; 1 bytes @ 0x4
  1495  000005                     	ds	1
  1496  000006                     I2C_SetDataCompleteCallback@cb:
  1497                           	callstack 0
  1498                           
  1499                           ; 2 bytes @ 0x5
  1500  000006                     	ds	2
  1501  000008                     I2C_SetDataCompleteCallback@ptr:
  1502                           	callstack 0
  1503                           
  1504                           ; 2 bytes @ 0x7
  1505  000008                     	ds	2
  1506  00000A                     wr1RegCompleteHandler@p:
  1507                           	callstack 0
  1508  00000A                     rd1RegCompleteHandler@p:
  1509                           	callstack 0
  1510  00000A                     rd2RegCompleteHandler@p:
  1511                           	callstack 0
  1512  00000A                     wr2RegCompleteHandler@p:
  1513                           	callstack 0
  1514  00000A                     rdBlkRegCompleteHandler@p:
  1515                           	callstack 0
  1516  00000A                     rd1RegCompleteHandler@i2c_master_example$F148@ptr:
  1517                           	callstack 0
  1518  00000A                     rd2RegCompleteHandler@i2c_master_example$F159@ptr:
  1519                           	callstack 0
  1520  00000A                     wr1RegCompleteHandler@i2c_master_example$F165@ptr:
  1521                           	callstack 0
  1522  00000A                     wr2RegCompleteHandler@i2c_master_example$F171@ptr:
  1523                           	callstack 0
  1524  00000A                     rdBlkRegCompleteHandler@i2c_master_example$F182@ptr:
  1525                           	callstack 0
  1526  00000A                     I2C_CallbackReturnReset@funPtr:
  1527                           	callstack 0
  1528                           
  1529                           ; 2 bytes @ 0x9
  1530  00000A                     	ds	2
  1531  00000C                     ??_I2C_DO_TX:
  1532  00000C                     ??_I2C_DO_RX:
  1533  00000C                     ??_I2C_DO_TX_EMPTY:
  1534  00000C                     ??_I2C_DO_ADDRESS_NACK:
  1535  00000C                     
  1536                           ; 1 bytes @ 0xB
  1537  00000C                     	ds	2
  1538  00000E                     ??_I2C_MasterFsm:
  1539                           
  1540                           ; 1 bytes @ 0xD
  1541  00000E                     	ds	2
  1542  000010                     ??_INTERRUPT_InterruptManager:
  1543                           
  1544                           ; 1 bytes @ 0xF
  1545  000010                     	ds	10
  1546  00001A                     ??_I2C_Master_Wait:
  1547  00001A                     ?_strlen:
  1548                           	callstack 0
  1549  00001A                     ?___fpclassifyf:
  1550                           	callstack 0
  1551  00001A                     ?_isupper:
  1552                           	callstack 0
  1553  00001A                     ?_isdigit:
  1554                           	callstack 0
  1555  00001A                     ?_strncmp:
  1556                           	callstack 0
  1557  00001A                     ?_isspace:
  1558                           	callstack 0
  1559  00001A                     ?___wmul:
  1560                           	callstack 0
  1561  00001A                     ?___awdiv:
  1562                           	callstack 0
  1563  00001A                     ?___awmod:
  1564                           	callstack 0
  1565  00001A                     ?___fladd:
  1566                           	callstack 0
  1567  00001A                     ?___fldiv:
  1568                           	callstack 0
  1569  00001A                     ?___lldiv:
  1570                           	callstack 0
  1571  00001A                     ?___flneg:
  1572                           	callstack 0
  1573  00001A                     ?___fltol:
  1574                           	callstack 0
  1575  00001A                     ___wmul@multiplier:
  1576                           	callstack 0
  1577  00001A                     ___awdiv@dividend:
  1578                           	callstack 0
  1579  00001A                     ___awmod@dividend:
  1580                           	callstack 0
  1581  00001A                     isdigit@c:
  1582                           	callstack 0
  1583  00001A                     isspace@c:
  1584                           	callstack 0
  1585  00001A                     isupper@c:
  1586                           	callstack 0
  1587  00001A                     fputc@c:
  1588                           	callstack 0
  1589  00001A                     strcpy@dest:
  1590                           	callstack 0
  1591  00001A                     strlen@s:
  1592                           	callstack 0
  1593  00001A                     strncmp@_l:
  1594                           	callstack 0
  1595  00001A                     ___lldiv@dividend:
  1596                           	callstack 0
  1597  00001A                     ___fleq@ff1:
  1598                           	callstack 0
  1599  00001A                     ___flneg@f1:
  1600                           	callstack 0
  1601  00001A                     ___fltol@f1:
  1602                           	callstack 0
  1603  00001A                     ___fladd@b:
  1604                           	callstack 0
  1605  00001A                     ___fldiv@b:
  1606                           	callstack 0
  1607  00001A                     ___fpclassifyf@x:
  1608                           	callstack 0
  1609                           
  1610                           ; 4 bytes @ 0x19
  1611  00001A                     	ds	1
  1612  00001B                     ?_I2C_Master_Read:
  1613                           	callstack 0
  1614  00001B                     I2C_Master_Write@d:
  1615                           	callstack 0
  1616  00001B                     I2C_Master_Read@a:
  1617                           	callstack 0
  1618                           
  1619                           ; 2 bytes @ 0x1A
  1620  00001B                     	ds	1
  1621  00001C                     ??_isupper:
  1622  00001C                     ??_isdigit:
  1623  00001C                     ??_isspace:
  1624  00001C                     ___wmul@multiplicand:
  1625                           	callstack 0
  1626  00001C                     ___awdiv@divisor:
  1627                           	callstack 0
  1628  00001C                     ___awmod@divisor:
  1629                           	callstack 0
  1630  00001C                     fputc@fp:
  1631                           	callstack 0
  1632  00001C                     strcpy@src:
  1633                           	callstack 0
  1634  00001C                     strlen@a:
  1635                           	callstack 0
  1636  00001C                     strncmp@_r:
  1637                           	callstack 0
  1638                           
  1639                           ; 2 bytes @ 0x1B
  1640  00001C                     	ds	1
  1641  00001D                     I2C_Master_Read@temp:
  1642                           	callstack 0
  1643                           
  1644                           ; 2 bytes @ 0x1C
  1645  00001D                     	ds	1
  1646  00001E                     ??_fputc:
  1647  00001E                     ??___fpclassifyf:
  1648  00001E                     ??_strcpy:
  1649  00001E                     ??___fltol:
  1650  00001E                     ___awdiv@counter:
  1651                           	callstack 0
  1652  00001E                     ___awmod@counter:
  1653                           	callstack 0
  1654  00001E                     ___wmul@product:
  1655                           	callstack 0
  1656  00001E                     strncmp@n:
  1657                           	callstack 0
  1658  00001E                     ___lldiv@divisor:
  1659                           	callstack 0
  1660  00001E                     ___fleq@ff2:
  1661                           	callstack 0
  1662  00001E                     ___fladd@a:
  1663                           	callstack 0
  1664  00001E                     ___fldiv@a:
  1665                           	callstack 0
  1666                           
  1667                           ; 4 bytes @ 0x1D
  1668  00001E                     	ds	1
  1669  00001F                     ___awdiv@sign:
  1670                           	callstack 0
  1671  00001F                     ___awmod@sign:
  1672                           	callstack 0
  1673                           
  1674                           ; 1 bytes @ 0x1E
  1675  00001F                     	ds	1
  1676  000020                     ??_strncmp:
  1677  000020                     ?_tolower:
  1678                           	callstack 0
  1679  000020                     ?___xxtofl:
  1680                           	callstack 0
  1681  000020                     _isspace$2141:
  1682                           	callstack 0
  1683  000020                     ___awdiv@quotient:
  1684                           	callstack 0
  1685  000020                     strcpy@s:
  1686                           	callstack 0
  1687  000020                     tolower@c:
  1688                           	callstack 0
  1689  000020                     ___xxtofl@val:
  1690                           	callstack 0
  1691                           
  1692                           ; 4 bytes @ 0x1F
  1693  000020                     	ds	1
  1694  000021                     ?_atoi:
  1695                           	callstack 0
  1696  000021                     atoi@s:
  1697                           	callstack 0
  1698  000021                     strncmp@l:
  1699                           	callstack 0
  1700                           
  1701                           ; 2 bytes @ 0x20
  1702  000021                     	ds	1
  1703  000022                     ??___fladd:
  1704  000022                     ??___fldiv:
  1705  000022                     ??_tolower:
  1706  000022                     ??___fleq:
  1707  000022                     ___fltol@sign1:
  1708                           	callstack 0
  1709  000022                     ___fpclassifyf@e:
  1710                           	callstack 0
  1711  000022                     strcpy@d:
  1712                           	callstack 0
  1713  000022                     ___lldiv@quotient:
  1714                           	callstack 0
  1715                           
  1716                           ; 4 bytes @ 0x21
  1717  000022                     	ds	1
  1718  000023                     ??_atoi:
  1719  000023                     ___fltol@exp1:
  1720                           	callstack 0
  1721  000023                     fputs@s:
  1722                           	callstack 0
  1723  000023                     strncmp@r:
  1724                           	callstack 0
  1725                           
  1726                           ; 2 bytes @ 0x22
  1727  000023                     	ds	1
  1728  000024                     ??___xxtofl:
  1729  000024                     ___fpclassifyf@u:
  1730                           	callstack 0
  1731                           
  1732                           ; 4 bytes @ 0x23
  1733  000024                     	ds	1
  1734  000025                     fputs@fp:
  1735                           	callstack 0
  1736                           
  1737                           ; 2 bytes @ 0x24
  1738  000025                     	ds	1
  1739  000026                     ?_floorf:
  1740                           	callstack 0
  1741  000026                     ___lldiv@counter:
  1742                           	callstack 0
  1743  000026                     ___fladd@signs:
  1744                           	callstack 0
  1745  000026                     _tolower$2215:
  1746                           	callstack 0
  1747  000026                     floorf@x:
  1748                           	callstack 0
  1749                           
  1750                           ; 4 bytes @ 0x25
  1751  000026                     	ds	1
  1752  000027                     ___fladd@aexp:
  1753                           	callstack 0
  1754  000027                     fputs@c:
  1755                           	callstack 0
  1756  000027                     I2C_Master_Init@c:
  1757                           	callstack 0
  1758                           
  1759                           ; 4 bytes @ 0x26
  1760  000027                     	ds	1
  1761  000028                     ___fladd@bexp:
  1762                           	callstack 0
  1763  000028                     ___xxtofl@sign:
  1764                           	callstack 0
  1765  000028                     fputs@i:
  1766                           	callstack 0
  1767                           
  1768                           ; 2 bytes @ 0x27
  1769  000028                     	ds	1
  1770  000029                     ___fladd@grs:
  1771                           	callstack 0
  1772  000029                     ___xxtofl@exp:
  1773                           	callstack 0
  1774                           
  1775                           ; 1 bytes @ 0x28
  1776  000029                     	ds	1
  1777  00002A                     ??_pad:
  1778  00002A                     ___xxtofl@arg:
  1779                           	callstack 0
  1780                           
  1781                           ; 4 bytes @ 0x29
  1782  00002A                     	ds	4
  1783  00002E                     
  1784                           ; 1 bytes @ 0x2D
  1785 ;;
  1786 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1787 ;;
  1788 ;; *************** function _main *****************
  1789 ;; Defined at:
  1790 ;;		line 66 in file "main.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;		None
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;		None
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      void 
  1797 ;; Registers used:
  1798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1808 ;;Total ram usage:        0 bytes
  1809 ;; Hardware stack levels required when called:   15
  1810 ;; This function calls:
  1811 ;;		_Current_ReadRegister
  1812 ;;		_I2C_Master_Init
  1813 ;;		_Power_ReadRegister
  1814 ;;		_SYSTEM_Initialize
  1815 ;;		_Voltage_ReadRegister
  1816 ;;		_sprintf
  1817 ;; This function is called by:
  1818 ;;		Startup code after reset
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           	psect	text0
  1823  002AE0                     __ptext0:
  1824                           	callstack 0
  1825  002AE0                     _main:
  1826                           	callstack 16
  1827  002AE0                     
  1828                           ;main.c: 69:     SYSTEM_Initialize();
  1829  002AE0  EC18  F01D         	call	_SYSTEM_Initialize	;wreg free
  1830  002AE4                     
  1831                           ;main.c: 70:     I2C_Master_Init(1000000);
  1832  002AE4  0E40               	movlw	64
  1833  002AE6  6E27               	movwf	I2C_Master_Init@c^0,c
  1834  002AE8  0E42               	movlw	66
  1835  002AEA  6E28               	movwf	(I2C_Master_Init@c+1)^0,c
  1836  002AEC  0E0F               	movlw	15
  1837  002AEE  6E29               	movwf	(I2C_Master_Init@c+2)^0,c
  1838  002AF0  0E00               	movlw	0
  1839  002AF2  6E2A               	movwf	(I2C_Master_Init@c+3)^0,c
  1840  002AF4  EC2D  F01A         	call	_I2C_Master_Init	;wreg free
  1841  002AF8                     l8110:
  1842                           
  1843                           ;main.c: 88:     {;;main.c: 89:        Voltage = Voltage_ReadRegister();
  1844  002AF8  ECD0  F011         	call	_Voltage_ReadRegister	;wreg free
  1845  002AFC  C079  F0FB         	movff	?_Voltage_ReadRegister,_Voltage
  1846  002B00  C07A  F0FC         	movff	?_Voltage_ReadRegister+1,_Voltage+1
  1847  002B04  C07B  F0FD         	movff	?_Voltage_ReadRegister+2,_Voltage+2
  1848  002B08  C07C  F0FE         	movff	?_Voltage_ReadRegister+3,_Voltage+3
  1849  002B0C                     
  1850                           ;main.c: 90:        Current = Current_ReadRegister();
  1851  002B0C  EC62  F012         	call	_Current_ReadRegister	;wreg free
  1852  002B10  C079  F0F7         	movff	?_Current_ReadRegister,_Current
  1853  002B14  C07A  F0F8         	movff	?_Current_ReadRegister+1,_Current+1
  1854  002B18  C07B  F0F9         	movff	?_Current_ReadRegister+2,_Current+2
  1855  002B1C  C07C  F0FA         	movff	?_Current_ReadRegister+3,_Current+3
  1856  002B20                     
  1857                           ;main.c: 91:        Power = Power_ReadRegister();
  1858  002B20  ECF4  F012         	call	_Power_ReadRegister	;wreg free
  1859  002B24  C06D  F0F3         	movff	?_Power_ReadRegister,_Power
  1860  002B28  C06E  F0F4         	movff	?_Power_ReadRegister+1,_Power+1
  1861  002B2C  C06F  F0F5         	movff	?_Power_ReadRegister+2,_Power+2
  1862  002B30  C070  F0F6         	movff	?_Power_ReadRegister+3,_Power+3
  1863  002B34                     
  1864                           ;main.c: 92:        sprintf(voltage_str, "%.3f",Voltage);
  1865  002B34  0EEF               	movlw	low _voltage_str
  1866  002B36  0101               	movlb	1	; () banked
  1867  002B38  6FCA               	movwf	sprintf@s& (0+255),b
  1868  002B3A  0E00               	movlw	high _voltage_str
  1869  002B3C  6FCB               	movwf	(sprintf@s+1)& (0+255),b
  1870  002B3E  0EE7               	movlw	low STR_10
  1871  002B40  6FCC               	movwf	sprintf@fmt& (0+255),b
  1872  002B42  0EFF               	movlw	high STR_10
  1873  002B44  6FCD               	movwf	(sprintf@fmt+1)& (0+255),b
  1874  002B46  C0FB  F1CE         	movff	_Voltage,?_sprintf+4
  1875  002B4A  C0FC  F1CF         	movff	_Voltage+1,?_sprintf+5
  1876  002B4E  C0FD  F1D0         	movff	_Voltage+2,?_sprintf+6
  1877  002B52  C0FE  F1D1         	movff	_Voltage+3,?_sprintf+7
  1878  002B56  EC5C  F01A         	call	_sprintf	;wreg free
  1879  002B5A                     
  1880                           ;main.c: 93:        sprintf(current_str, "%.2f",Current);
  1881  002B5A  0EEB               	movlw	low _current_str
  1882  002B5C  0101               	movlb	1	; () banked
  1883  002B5E  6FCA               	movwf	sprintf@s& (0+255),b
  1884  002B60  0E00               	movlw	high _current_str
  1885  002B62  6FCB               	movwf	(sprintf@s+1)& (0+255),b
  1886  002B64  0EE2               	movlw	low STR_11
  1887  002B66  6FCC               	movwf	sprintf@fmt& (0+255),b
  1888  002B68  0EFF               	movlw	high STR_11
  1889  002B6A  6FCD               	movwf	(sprintf@fmt+1)& (0+255),b
  1890  002B6C  C0F7  F1CE         	movff	_Current,?_sprintf+4
  1891  002B70  C0F8  F1CF         	movff	_Current+1,?_sprintf+5
  1892  002B74  C0F9  F1D0         	movff	_Current+2,?_sprintf+6
  1893  002B78  C0FA  F1D1         	movff	_Current+3,?_sprintf+7
  1894  002B7C  EC5C  F01A         	call	_sprintf	;wreg free
  1895  002B80                     
  1896                           ;main.c: 94:        sprintf(power_str, "%.2f",Power);
  1897  002B80  0EE7               	movlw	low _power_str
  1898  002B82  0101               	movlb	1	; () banked
  1899  002B84  6FCA               	movwf	sprintf@s& (0+255),b
  1900  002B86  0E00               	movlw	high _power_str
  1901  002B88  6FCB               	movwf	(sprintf@s+1)& (0+255),b
  1902  002B8A  0EE2               	movlw	low STR_11
  1903  002B8C  6FCC               	movwf	sprintf@fmt& (0+255),b
  1904  002B8E  0EFF               	movlw	high STR_11
  1905  002B90  6FCD               	movwf	(sprintf@fmt+1)& (0+255),b
  1906  002B92  C0F3  F1CE         	movff	_Power,?_sprintf+4
  1907  002B96  C0F4  F1CF         	movff	_Power+1,?_sprintf+5
  1908  002B9A  C0F5  F1D0         	movff	_Power+2,?_sprintf+6
  1909  002B9E  C0F6  F1D1         	movff	_Power+3,?_sprintf+7
  1910  002BA2  EC5C  F01A         	call	_sprintf	;wreg free
  1911  002BA6  EF7C  F015         	goto	l8110
  1912  002BAA  EF62  F000         	goto	start
  1913  002BAE                     __end_of_main:
  1914                           	callstack 0
  1915                           
  1916 ;; *************** function _sprintf *****************
  1917 ;; Defined at:
  1918 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;  s               2    6[BANK1 ] PTR unsigned char 
  1921 ;;		 -> power_str(4), current_str(4), voltage_str(4), 
  1922 ;;  fmt             2    8[BANK1 ] PTR const unsigned char 
  1923 ;;		 -> STR_12(5), STR_11(5), STR_10(5), 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  f               6   18[BANK1 ] struct _IO_FILE
  1926 ;;  ap              2   16[BANK1 ] PTR void [1]
  1927 ;;		 -> ?_printf(2), ?_sprintf(2), 
  1928 ;;  ret             2    0        int 
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  2    6[BANK1 ] int 
  1931 ;; Registers used:
  1932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1938 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1939 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1941 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1942 ;;Total ram usage:       18 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:   14
  1945 ;; This function calls:
  1946 ;;		_vfprintf
  1947 ;; This function is called by:
  1948 ;;		_main
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text1
  1953  0034B8                     __ptext1:
  1954                           	callstack 0
  1955  0034B8                     _sprintf:
  1956                           	callstack 16
  1957  0034B8  0ECE               	movlw	low (?_sprintf+4)
  1958  0034BA  0101               	movlb	1	; () banked
  1959  0034BC  6FD4               	movwf	sprintf@ap& (0+255),b
  1960  0034BE  0E01               	movlw	high (?_sprintf+4)
  1961  0034C0  6FD5               	movwf	(sprintf@ap+1)& (0+255),b
  1962  0034C2  C1CA  F1D6         	movff	sprintf@s,sprintf@f
  1963  0034C6  C1CB  F1D7         	movff	sprintf@s+1,sprintf@f+1
  1964  0034CA                     
  1965                           ; BSR set to: 1
  1966  0034CA  0E00               	movlw	0
  1967  0034CC  6FD9               	movwf	(sprintf@f+3)& (0+255),b
  1968  0034CE  0E00               	movlw	0
  1969  0034D0  6FD8               	movwf	(sprintf@f+2)& (0+255),b
  1970  0034D2                     
  1971                           ; BSR set to: 1
  1972  0034D2  0E00               	movlw	0
  1973  0034D4  6FDB               	movwf	(sprintf@f+5)& (0+255),b
  1974  0034D6  0E00               	movlw	0
  1975  0034D8  6FDA               	movwf	(sprintf@f+4)& (0+255),b
  1976  0034DA                     
  1977                           ; BSR set to: 1
  1978  0034DA  0ED6               	movlw	low sprintf@f
  1979  0034DC  6FC4               	movwf	vfprintf@fp& (0+255),b
  1980  0034DE  0E01               	movlw	high sprintf@f
  1981  0034E0  6FC5               	movwf	(vfprintf@fp+1)& (0+255),b
  1982  0034E2  C1CC  F1C6         	movff	sprintf@fmt,vfprintf@fmt
  1983  0034E6  C1CD  F1C7         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1984  0034EA  0ED4               	movlw	low sprintf@ap
  1985  0034EC  6FC8               	movwf	vfprintf@ap& (0+255),b
  1986  0034EE  0E01               	movlw	high sprintf@ap
  1987  0034F0  6FC9               	movwf	(vfprintf@ap+1)& (0+255),b
  1988  0034F2  EC9C  F019         	call	_vfprintf	;wreg free
  1989  0034F6  0101               	movlb	1	; () banked
  1990  0034F8  51D8               	movf	(sprintf@f+2)& (0+255),w,b
  1991  0034FA  25CA               	addwf	sprintf@s& (0+255),w,b
  1992  0034FC  6ED9               	movwf	fsr2l,c
  1993  0034FE  51D9               	movf	(sprintf@f+3)& (0+255),w,b
  1994  003500  21CB               	addwfc	(sprintf@s+1)& (0+255),w,b
  1995  003502  6EDA               	movwf	fsr2h,c
  1996  003504  0E00               	movlw	0
  1997  003506  6EDF               	movwf	indf2,c
  1998  003508                     
  1999                           ; BSR set to: 1
  2000  003508  0012               	return		;funcret
  2001  00350A                     __end_of_sprintf:
  2002                           	callstack 0
  2003                           
  2004 ;; *************** function _vfprintf *****************
  2005 ;; Defined at:
  2006 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  2009 ;;		 -> sprintf@f(6), NULL(0), 
  2010 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  2011 ;;		 -> STR_12(5), STR_11(5), STR_10(5), STR_9(50), 
  2012 ;;		 -> STR_8(3), STR_7(7), STR_6(23), STR_5(3), 
  2013 ;;		 -> STR_4(7), STR_3(34), STR_2(26), STR_1(27), 
  2014 ;;  ap              2    4[BANK1 ] PTR PTR void 
  2015 ;;		 -> printf@ap(2), sprintf@ap(2), 
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;  cfmt            2  127[BANK0 ] PTR unsigned char 
  2018 ;;		 -> STR_12(5), STR_11(5), STR_10(5), STR_9(50), 
  2019 ;;		 -> STR_8(3), STR_7(7), STR_6(23), STR_5(3), 
  2020 ;;		 -> STR_4(7), STR_3(34), STR_2(26), STR_1(27), 
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  2    0[BANK1 ] int 
  2023 ;; Registers used:
  2024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2030 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2031 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2033 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2034 ;;Total ram usage:        8 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; Hardware stack levels required when called:   13
  2037 ;; This function calls:
  2038 ;;		_vfpfcnvrt
  2039 ;; This function is called by:
  2040 ;;		_sprintf
  2041 ;;		_printf
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text2
  2046  003338                     __ptext2:
  2047                           	callstack 0
  2048  003338                     _vfprintf:
  2049                           	callstack 16
  2050  003338                     
  2051                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2052  003338  C1C6  F0DF         	movff	vfprintf@fmt,vfprintf@cfmt
  2053  00333C  C1C7  F0E0         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2054  003340                     
  2055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2056  003340  0E00               	movlw	0
  2057  003342  0100               	movlb	0	; () banked
  2058  003344  6FE2               	movwf	(_nout+1)& (0+255),b
  2059  003346  0E00               	movlw	0
  2060  003348  6FE1               	movwf	_nout& (0+255),b
  2061                           
  2062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2063  00334A  EFBA  F019         	goto	l7976
  2064  00334E                     l7974:
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2068  00334E  C1C4  F0C9         	movff	vfprintf@fp,vfpfcnvrt@fp
  2069  003352  C1C5  F0CA         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2070  003356  0EDF               	movlw	low vfprintf@cfmt
  2071  003358  6FCB               	movwf	vfpfcnvrt@fmt& (0+255),b
  2072  00335A  0E00               	movlw	high vfprintf@cfmt
  2073  00335C  6FCC               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2074  00335E  C1C8  F0CD         	movff	vfprintf@ap,vfpfcnvrt@ap
  2075  003362  C1C9  F0CE         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2076  003366  ECF5  F008         	call	_vfpfcnvrt	;wreg free
  2077  00336A  0100               	movlb	0	; () banked
  2078  00336C  51C9               	movf	?_vfpfcnvrt& (0+255),w,b
  2079  00336E  27E1               	addwf	_nout& (0+255),f,b
  2080  003370  51CA               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2081  003372  23E2               	addwfc	(_nout+1)& (0+255),f,b
  2082  003374                     l7976:
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2086  003374  C0DF  FFF6         	movff	vfprintf@cfmt,tblptrl
  2087  003378  C0E0  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2088  00337C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2089  00337C  6AF8               	clrf	tblptru,c
  2090  00337E                     	endif
  2091  00337E                     	if	0	;tblptru may be non-zero
  2092  00337E                     	endif
  2093  00337E  0008               	tblrd		*
  2094  003380  50F5               	movf	tablat,w,c
  2095  003382  0900               	iorlw	0
  2096  003384  A4D8               	btfss	status,2,c
  2097  003386  EFC7  F019         	goto	u8641
  2098  00338A  EFC9  F019         	goto	u8640
  2099  00338E                     u8641:
  2100  00338E  EFA7  F019         	goto	l7974
  2101  003392                     u8640:
  2102  003392                     
  2103                           ; BSR set to: 0
  2104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2105  003392  C0E1  F1C4         	movff	_nout,?_vfprintf
  2106  003396  C0E2  F1C5         	movff	_nout+1,?_vfprintf+1
  2107  00339A                     
  2108                           ; BSR set to: 0
  2109  00339A  0012               	return		;funcret
  2110  00339C                     __end_of_vfprintf:
  2111                           	callstack 0
  2112                           
  2113 ;; *************** function _vfpfcnvrt *****************
  2114 ;; Defined at:
  2115 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;  fp              2  105[BANK0 ] PTR struct _IO_FILE
  2118 ;;		 -> sprintf@f(6), NULL(0), 
  2119 ;;  fmt             2  107[BANK0 ] PTR PTR unsigned char 
  2120 ;;		 -> vfprintf@cfmt(2), 
  2121 ;;  ap              2  109[BANK0 ] PTR PTR void 
  2122 ;;		 -> printf@ap(2), sprintf@ap(2), 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  llu             8    0        unsigned long long 
  2125 ;;  ll              8    0        long long 
  2126 ;;  f               4  119[BANK0 ] long long 
  2127 ;;  ct              3  123[BANK0 ] unsigned char [3]
  2128 ;;  vp              3    0        PTR void 
  2129 ;;  cp              3    0        PTR unsigned char 
  2130 ;;  i               2    0        int 
  2131 ;;  done            2    0        int 
  2132 ;;  c               1  126[BANK0 ] unsigned char 
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  2  105[BANK0 ] int 
  2135 ;; Registers used:
  2136 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2142 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2143 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2144 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2145 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2146 ;;Total ram usage:       22 bytes
  2147 ;; Hardware stack levels used:    1
  2148 ;; Hardware stack levels required when called:   12
  2149 ;; This function calls:
  2150 ;;		_atoi
  2151 ;;		_efgtoa
  2152 ;;		_fputc
  2153 ;;		_isdigit
  2154 ;;		_isupper
  2155 ;;		_strncmp
  2156 ;;		_tolower
  2157 ;; This function is called by:
  2158 ;;		_vfprintf
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text3
  2163  0011EA                     __ptext3:
  2164                           	callstack 0
  2165  0011EA                     _vfpfcnvrt:
  2166                           	callstack 16
  2167  0011EA                     
  2168                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2169  0011EA  C0CB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2170  0011EE  C0CC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2171  0011F2  CFDE FFF6          	movff	postinc2,tblptrl
  2172  0011F6  CFDD FFF7          	movff	postdec2,tblptrh
  2173  0011FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2174  0011FA  6AF8               	clrf	tblptru,c
  2175  0011FC                     	endif
  2176  0011FC                     	if	0	;tblptru may be non-zero
  2177  0011FC                     	endif
  2178  0011FC  0008               	tblrd		*
  2179  0011FE  50F5               	movf	tablat,w,c
  2180  001200  0A25               	xorlw	37
  2181  001202  A4D8               	btfss	status,2,c
  2182  001204  EF06  F009         	goto	u8381
  2183  001208  EF08  F009         	goto	u8380
  2184  00120C                     u8381:
  2185  00120C  EF1B  F00B         	goto	l7886
  2186  001210                     u8380:
  2187  001210                     
  2188                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2189  001210  C0CB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2190  001214  C0CC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2191  001218  2ADE               	incf	postinc2,f,c
  2192  00121A  0E00               	movlw	0
  2193  00121C  22DD               	addwfc	postdec2,f,c
  2194  00121E                     
  2195                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2196  00121E  0E00               	movlw	0
  2197  001220  0100               	movlb	0	; () banked
  2198  001222  6FE4               	movwf	(_width+1)& (0+255),b
  2199  001224  0E00               	movlw	0
  2200  001226  6FE3               	movwf	_width& (0+255),b
  2201  001228  C0E3  F042         	movff	_width,_flags
  2202  00122C  C0E4  F043         	movff	_width+1,_flags+1
  2203  001230                     
  2204                           ; BSR set to: 0
  2205                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2206  001230  69E5               	setf	_prec& (0+255),b
  2207  001232  69E6               	setf	(_prec+1)& (0+255),b
  2208  001234                     
  2209                           ; BSR set to: 0
  2210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2211  001234  C0CB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2212  001238  C0CC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2213  00123C  CFDE FFF6          	movff	postinc2,tblptrl
  2214  001240  CFDD FFF7          	movff	postdec2,tblptrh
  2215  001244                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2216  001244  6AF8               	clrf	tblptru,c
  2217  001246                     	endif
  2218  001246                     	if	0	;tblptru may be non-zero
  2219  001246                     	endif
  2220  001246  0008               	tblrd		*
  2221  001248  50F5               	movf	tablat,w,c
  2222  00124A  0A2E               	xorlw	46
  2223  00124C  A4D8               	btfss	status,2,c
  2224  00124E  EF2B  F009         	goto	u8391
  2225  001252  EF2D  F009         	goto	u8390
  2226  001256                     u8391:
  2227  001256  EFAD  F009         	goto	l7832
  2228  00125A                     u8390:
  2229  00125A                     
  2230                           ; BSR set to: 0
  2231                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2232  00125A  0E00               	movlw	0
  2233  00125C  6FE6               	movwf	(_prec+1)& (0+255),b
  2234  00125E  0E00               	movlw	0
  2235  001260  6FE5               	movwf	_prec& (0+255),b
  2236  001262                     
  2237                           ; BSR set to: 0
  2238                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2239  001262  C0CB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2240  001266  C0CC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2241  00126A  2ADE               	incf	postinc2,f,c
  2242  00126C  0E00               	movlw	0
  2243  00126E  22DD               	addwfc	postdec2,f,c
  2244  001270                     
  2245                           ; BSR set to: 0
  2246                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2247  001270  C0CB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2248  001274  C0CC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2249  001278  CFDE FFF6          	movff	postinc2,tblptrl
  2250  00127C  CFDD FFF7          	movff	postdec2,tblptrh
  2251  001280                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2252  001280  6AF8               	clrf	tblptru,c
  2253  001282                     	endif
  2254  001282                     	if	0	;tblptru may be non-zero
  2255  001282                     	endif
  2256  001282  0008               	tblrd		*
  2257  001284  50F5               	movf	tablat,w,c
  2258  001286  0A2A               	xorlw	42
  2259  001288  A4D8               	btfss	status,2,c
  2260  00128A  EF49  F009         	goto	u8401
  2261  00128E  EF4B  F009         	goto	u8400
  2262  001292                     u8401:
  2263  001292  EF68  F009         	goto	l7822
  2264  001296                     u8400:
  2265  001296                     
  2266                           ; BSR set to: 0
  2267                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2268  001296  C0CB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2269  00129A  C0CC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2270  00129E  2ADE               	incf	postinc2,f,c
  2271  0012A0  0E00               	movlw	0
  2272  0012A2  22DD               	addwfc	postdec2,f,c
  2273                           
  2274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2275  0012A4  C0CD  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2276  0012A8  C0CE  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2277  0012AC  CFDF F0CF          	movff	indf2,??_vfpfcnvrt
  2278  0012B0  0E02               	movlw	2
  2279  0012B2  26DE               	addwf	postinc2,f,c
  2280  0012B4  CFDF F0D0          	movff	indf2,??_vfpfcnvrt+1
  2281  0012B8  0E00               	movlw	0
  2282  0012BA  22DD               	addwfc	postdec2,f,c
  2283  0012BC  C0CF  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2284  0012C0  C0D0  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2285  0012C4  CFDE F0E5          	movff	postinc2,_prec
  2286  0012C8  CFDD F0E6          	movff	postdec2,_prec+1
  2287                           
  2288                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2289  0012CC  EFAD  F009         	goto	l7832
  2290  0012D0                     l7822:
  2291                           
  2292                           ; BSR set to: 0
  2293                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2294  0012D0  C0CB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2295  0012D4  C0CC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2296  0012D8  CFDE F021          	movff	postinc2,atoi@s
  2297  0012DC  CFDD F022          	movff	postdec2,atoi@s+1
  2298  0012E0  EC01  F011         	call	_atoi	;wreg free
  2299  0012E4  C021  F0E5         	movff	?_atoi,_prec
  2300  0012E8  C022  F0E6         	movff	?_atoi+1,_prec+1
  2301                           
  2302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2303  0012EC  EF7F  F009         	goto	l7826
  2304  0012F0                     l7824:
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2308  0012F0  C0CB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2309  0012F4  C0CC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2310  0012F8  2ADE               	incf	postinc2,f,c
  2311  0012FA  0E00               	movlw	0
  2312  0012FC  22DD               	addwfc	postdec2,f,c
  2313  0012FE                     l7826:
  2314  0012FE  0ED0               	movlw	208
  2315  001300  0100               	movlb	0	; () banked
  2316  001302  6FCF               	movwf	??_vfpfcnvrt& (0+255),b
  2317  001304  0EFF               	movlw	255
  2318  001306  6FD0               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2319  001308  C0CB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2320  00130C  C0CC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2321  001310  CFDE FFF6          	movff	postinc2,tblptrl
  2322  001314  CFDD FFF7          	movff	postdec2,tblptrh
  2323  001318                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2324  001318  6AF8               	clrf	tblptru,c
  2325  00131A                     	endif
  2326  00131A                     	if	0	;tblptru may be non-zero
  2327  00131A                     	endif
  2328  00131A  0008               	tblrd		*
  2329  00131C  50F5               	movf	tablat,w,c
  2330  00131E  6FD1               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2331  001320  6BD2               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2332  001322  51CF               	movf	??_vfpfcnvrt& (0+255),w,b
  2333  001324  27D1               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2334  001326  51D0               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2335  001328  23D2               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2336  00132A  51D2               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2337  00132C  E10A               	bnz	u8410
  2338  00132E  0E0A               	movlw	10
  2339  001330  5DD1               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2340  001332  A0D8               	btfss	status,0,c
  2341  001334  EF9E  F009         	goto	u8411
  2342  001338  EFA1  F009         	goto	u8410
  2343  00133C                     u8411:
  2344  00133C  0E01               	movlw	1
  2345  00133E  EFA2  F009         	goto	u8420
  2346  001342                     u8410:
  2347  001342  0E00               	movlw	0
  2348  001344                     u8420:
  2349  001344  6FD3               	movwf	_vfpfcnvrt$2072& (0+255),b
  2350  001346  6BD4               	clrf	(_vfpfcnvrt$2072+1)& (0+255),b
  2351  001348                     
  2352                           ; BSR set to: 0
  2353  001348  51D3               	movf	_vfpfcnvrt$2072& (0+255),w,b
  2354  00134A  11D4               	iorwf	(_vfpfcnvrt$2072+1)& (0+255),w,b
  2355  00134C  A4D8               	btfss	status,2,c
  2356  00134E  EFAB  F009         	goto	u8431
  2357  001352  EFAD  F009         	goto	u8430
  2358  001356                     u8431:
  2359  001356  EF78  F009         	goto	l7824
  2360  00135A                     u8430:
  2361  00135A                     l7832:
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2365  00135A  C0CB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2366  00135E  C0CC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2367  001362  CFDE FFF6          	movff	postinc2,tblptrl
  2368  001366  CFDD FFF7          	movff	postdec2,tblptrh
  2369  00136A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2370  00136A  6AF8               	clrf	tblptru,c
  2371  00136C                     	endif
  2372  00136C                     	if	0	;tblptru may be non-zero
  2373  00136C                     	endif
  2374  00136C  0008               	tblrd		*
  2375  00136E  50F5               	movf	tablat,w,c
  2376  001370  6E20               	movwf	tolower@c^0,c
  2377  001372  6A21               	clrf	(tolower@c+1)^0,c
  2378  001374  ECCE  F019         	call	_tolower	;wreg free
  2379  001378  5020               	movf	?_tolower^0,w,c
  2380  00137A  0100               	movlb	0	; () banked
  2381  00137C  6FDB               	movwf	vfpfcnvrt@ct& (0+255),b
  2382  00137E                     
  2383                           ; BSR set to: 0
  2384                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2385  00137E  51DB               	movf	vfpfcnvrt@ct& (0+255),w,b
  2386  001380  B4D8               	btfsc	status,2,c
  2387  001382  EFC5  F009         	goto	u8441
  2388  001386  EFC7  F009         	goto	u8440
  2389  00138A                     u8441:
  2390  00138A  EF03  F00A         	goto	l7842
  2391  00138E                     u8440:
  2392  00138E                     
  2393                           ; BSR set to: 0
  2394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2395  00138E  C0CB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2396  001392  C0CC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2397  001396  CFDE F0CF          	movff	postinc2,??_vfpfcnvrt
  2398  00139A  CFDD F0D0          	movff	postdec2,??_vfpfcnvrt+1
  2399  00139E  0E01               	movlw	1
  2400  0013A0  27CF               	addwf	??_vfpfcnvrt& (0+255),f,b
  2401  0013A2  0E00               	movlw	0
  2402  0013A4  23D0               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2403  0013A6  C0CF  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2404  0013AA  C0D0  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2405  0013AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2406  0013AE  6AF8               	clrf	tblptru,c
  2407  0013B0                     	endif
  2408  0013B0                     	if	0	;tblptru may be non-zero
  2409  0013B0                     	endif
  2410  0013B0  0008               	tblrd		*
  2411  0013B2  50F5               	movf	tablat,w,c
  2412  0013B4  6E20               	movwf	tolower@c^0,c
  2413  0013B6  6A21               	clrf	(tolower@c+1)^0,c
  2414  0013B8  ECCE  F019         	call	_tolower	;wreg free
  2415  0013BC  5020               	movf	?_tolower^0,w,c
  2416  0013BE  0100               	movlb	0	; () banked
  2417  0013C0  6FDC               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2418  0013C2                     
  2419                           ; BSR set to: 0
  2420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2421  0013C2  51DC               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2422  0013C4  B4D8               	btfsc	status,2,c
  2423  0013C6  EFE7  F009         	goto	u8451
  2424  0013CA  EFE9  F009         	goto	u8450
  2425  0013CE                     u8451:
  2426  0013CE  EF03  F00A         	goto	l7842
  2427  0013D2                     u8450:
  2428  0013D2                     
  2429                           ; BSR set to: 0
  2430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2431  0013D2  C0CB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2432  0013D6  C0CC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2433  0013DA  CFDE F0CF          	movff	postinc2,??_vfpfcnvrt
  2434  0013DE  CFDD F0D0          	movff	postdec2,??_vfpfcnvrt+1
  2435  0013E2  0E02               	movlw	2
  2436  0013E4  27CF               	addwf	??_vfpfcnvrt& (0+255),f,b
  2437  0013E6  0E00               	movlw	0
  2438  0013E8  23D0               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2439  0013EA  C0CF  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2440  0013EE  C0D0  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2441  0013F2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2442  0013F2  6AF8               	clrf	tblptru,c
  2443  0013F4                     	endif
  2444  0013F4                     	if	0	;tblptru may be non-zero
  2445  0013F4                     	endif
  2446  0013F4  0008               	tblrd		*
  2447  0013F6  50F5               	movf	tablat,w,c
  2448  0013F8  6E20               	movwf	tolower@c^0,c
  2449  0013FA  6A21               	clrf	(tolower@c+1)^0,c
  2450  0013FC  ECCE  F019         	call	_tolower	;wreg free
  2451  001400  5020               	movf	?_tolower^0,w,c
  2452  001402  0100               	movlb	0	; () banked
  2453  001404  6FDD               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2454  001406                     l7842:
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2458  001406  0E66               	movlw	102
  2459  001408  19DB               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2460  00140A  A4D8               	btfss	status,2,c
  2461  00140C  EF0A  F00A         	goto	u8461
  2462  001410  EF0C  F00A         	goto	u8460
  2463  001414                     u8461:
  2464  001414  EF4D  F00A         	goto	l7854
  2465  001418                     u8460:
  2466  001418                     
  2467                           ; BSR set to: 0
  2468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2469  001418  C0CB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2470  00141C  C0CC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2471  001420  CFDE FFF6          	movff	postinc2,tblptrl
  2472  001424  CFDD FFF7          	movff	postdec2,tblptrh
  2473  001428                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2474  001428  6AF8               	clrf	tblptru,c
  2475  00142A                     	endif
  2476  00142A                     	if	0	;tblptru may be non-zero
  2477  00142A                     	endif
  2478  00142A  0008               	tblrd		*
  2479  00142C  CFF5 F0DE          	movff	tablat,vfpfcnvrt@c
  2480  001430                     
  2481                           ; BSR set to: 0
  2482                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2483  001430  C0CB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2484  001434  C0CC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2485  001438  2ADE               	incf	postinc2,f,c
  2486  00143A  0E00               	movlw	0
  2487  00143C  22DD               	addwfc	postdec2,f,c
  2488  00143E                     
  2489                           ; BSR set to: 0
  2490                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2491  00143E  C0CD  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2492  001442  C0CE  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2493  001446  CFDF F0CF          	movff	indf2,??_vfpfcnvrt
  2494  00144A  0E04               	movlw	4
  2495  00144C  26DE               	addwf	postinc2,f,c
  2496  00144E  CFDF F0D0          	movff	indf2,??_vfpfcnvrt+1
  2497  001452  0E00               	movlw	0
  2498  001454  22DD               	addwfc	postdec2,f,c
  2499  001456  C0CF  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2500  00145A  C0D0  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2501  00145E  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  2502  001462  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  2503  001466  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  2504  00146A  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  2505  00146E                     l7850:
  2506                           
  2507                           ; BSR set to: 0
  2508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2509  00146E  C0C9  F085         	movff	vfpfcnvrt@fp,efgtoa@fp
  2510  001472  C0CA  F086         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2511  001476  C0D7  F087         	movff	vfpfcnvrt@f,efgtoa@f
  2512  00147A  C0D8  F088         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2513  00147E  C0D9  F089         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2514  001482  C0DA  F08A         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2515  001486  C0DE  F08B         	movff	vfpfcnvrt@c,efgtoa@c
  2516  00148A  EC64  F000         	call	_efgtoa	;wreg free
  2517  00148E  C085  F0C9         	movff	?_efgtoa,?_vfpfcnvrt
  2518  001492  C086  F0CA         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2519  001496  EF37  F00B         	goto	l1643
  2520  00149A                     l7854:
  2521                           
  2522                           ; BSR set to: 0
  2523                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2524  00149A  0EDB               	movlw	low vfpfcnvrt@ct
  2525  00149C  6E1A               	movwf	strncmp@_l^0,c
  2526  00149E  0E00               	movlw	high vfpfcnvrt@ct
  2527  0014A0  6E1B               	movwf	(strncmp@_l+1)^0,c
  2528  0014A2  0EFC               	movlw	low STR_21
  2529  0014A4  6E1C               	movwf	strncmp@_r^0,c
  2530  0014A6  0EFF               	movlw	high STR_21
  2531  0014A8  6E1D               	movwf	(strncmp@_r+1)^0,c
  2532  0014AA  0E00               	movlw	0
  2533  0014AC  6E1F               	movwf	(strncmp@n+1)^0,c
  2534  0014AE  0E02               	movlw	2
  2535  0014B0  6E1E               	movwf	strncmp@n^0,c
  2536  0014B2  EC02  F015         	call	_strncmp	;wreg free
  2537  0014B6  501A               	movf	?_strncmp^0,w,c
  2538  0014B8  101B               	iorwf	(?_strncmp+1)^0,w,c
  2539  0014BA  A4D8               	btfss	status,2,c
  2540  0014BC  EF62  F00A         	goto	u8471
  2541  0014C0  EF64  F00A         	goto	u8470
  2542  0014C4                     u8471:
  2543  0014C4  EFE2  F00A         	goto	l7870
  2544  0014C8                     u8470:
  2545  0014C8                     
  2546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2547  0014C8  C0CB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2548  0014CC  C0CC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2549  0014D0  CFDE F0CF          	movff	postinc2,??_vfpfcnvrt
  2550  0014D4  CFDD F0D0          	movff	postdec2,??_vfpfcnvrt+1
  2551  0014D8  0E01               	movlw	1
  2552  0014DA  0100               	movlb	0	; () banked
  2553  0014DC  27CF               	addwf	??_vfpfcnvrt& (0+255),f,b
  2554  0014DE  0E00               	movlw	0
  2555  0014E0  23D0               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2556  0014E2  C0CF  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2557  0014E6  C0D0  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2558  0014EA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2559  0014EA  6AF8               	clrf	tblptru,c
  2560  0014EC                     	endif
  2561  0014EC                     	if	0	;tblptru may be non-zero
  2562  0014EC                     	endif
  2563  0014EC  0008               	tblrd		*
  2564  0014EE  CFF5 F0DE          	movff	tablat,vfpfcnvrt@c
  2565  0014F2  0EBF               	movlw	191
  2566  0014F4  6FCF               	movwf	??_vfpfcnvrt& (0+255),b
  2567  0014F6  0EFF               	movlw	255
  2568  0014F8  6FD0               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2569  0014FA  C0CB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2570  0014FE  C0CC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2571  001502  CFDE FFF6          	movff	postinc2,tblptrl
  2572  001506  CFDD FFF7          	movff	postdec2,tblptrh
  2573  00150A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2574  00150A  6AF8               	clrf	tblptru,c
  2575  00150C                     	endif
  2576  00150C                     	if	0	;tblptru may be non-zero
  2577  00150C                     	endif
  2578  00150C  0008               	tblrd		*
  2579  00150E  50F5               	movf	tablat,w,c
  2580  001510  6FD1               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2581  001512  6BD2               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2582  001514  51CF               	movf	??_vfpfcnvrt& (0+255),w,b
  2583  001516  27D1               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2584  001518  51D0               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2585  00151A  23D2               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2586  00151C  51D2               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2587  00151E  E10A               	bnz	u8480
  2588  001520  0E1A               	movlw	26
  2589  001522  5DD1               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2590  001524  A0D8               	btfss	status,0,c
  2591  001526  EF97  F00A         	goto	u8481
  2592  00152A  EF9A  F00A         	goto	u8480
  2593  00152E                     u8481:
  2594  00152E  0E01               	movlw	1
  2595  001530  EF9B  F00A         	goto	u8490
  2596  001534                     u8480:
  2597  001534  0E00               	movlw	0
  2598  001536                     u8490:
  2599  001536  6FD5               	movwf	_vfpfcnvrt$2076& (0+255),b
  2600  001538  6BD6               	clrf	(_vfpfcnvrt$2076+1)& (0+255),b
  2601  00153A                     
  2602                           ; BSR set to: 0
  2603  00153A  51D5               	movf	_vfpfcnvrt$2076& (0+255),w,b
  2604  00153C  11D6               	iorwf	(_vfpfcnvrt$2076+1)& (0+255),w,b
  2605  00153E  B4D8               	btfsc	status,2,c
  2606  001540  EFA4  F00A         	goto	u8501
  2607  001544  EFA6  F00A         	goto	u8500
  2608  001548                     u8501:
  2609  001548  EFC0  F00A         	goto	l7864
  2610  00154C                     u8500:
  2611  00154C                     
  2612                           ; BSR set to: 0
  2613                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2614  00154C  C0CD  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2615  001550  C0CE  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2616  001554  CFDF F0CF          	movff	indf2,??_vfpfcnvrt
  2617  001558  0E04               	movlw	4
  2618  00155A  26DE               	addwf	postinc2,f,c
  2619  00155C  CFDF F0D0          	movff	indf2,??_vfpfcnvrt+1
  2620  001560  0E00               	movlw	0
  2621  001562  22DD               	addwfc	postdec2,f,c
  2622  001564  C0CF  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2623  001568  C0D0  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2624  00156C  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  2625  001570  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  2626  001574  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  2627  001578  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  2628                           
  2629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2630  00157C  EFD8  F00A         	goto	l1650
  2631  001580                     l7864:
  2632                           
  2633                           ; BSR set to: 0
  2634                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2635  001580  C0CD  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2636  001584  C0CE  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2637  001588  CFDF F0CF          	movff	indf2,??_vfpfcnvrt
  2638  00158C  0E04               	movlw	4
  2639  00158E  26DE               	addwf	postinc2,f,c
  2640  001590  CFDF F0D0          	movff	indf2,??_vfpfcnvrt+1
  2641  001594  0E00               	movlw	0
  2642  001596  22DD               	addwfc	postdec2,f,c
  2643  001598  C0CF  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2644  00159C  C0D0  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2645  0015A0  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  2646  0015A4  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  2647  0015A8  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  2648  0015AC  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  2649  0015B0                     l1650:
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2653  0015B0  0E02               	movlw	2
  2654  0015B2  C0CB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2655  0015B6  C0CC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2656  0015BA  26DE               	addwf	postinc2,f,c
  2657  0015BC  0E00               	movlw	0
  2658  0015BE  22DD               	addwfc	postdec2,f,c
  2659  0015C0  EF37  F00A         	goto	l7850
  2660  0015C4                     l7870:
  2661                           
  2662                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2663  0015C4  C0CB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2664  0015C8  C0CC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2665  0015CC  CFDE FFF6          	movff	postinc2,tblptrl
  2666  0015D0  CFDD FFF7          	movff	postdec2,tblptrh
  2667  0015D4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2668  0015D4  6AF8               	clrf	tblptru,c
  2669  0015D6                     	endif
  2670  0015D6                     	if	0	;tblptru may be non-zero
  2671  0015D6                     	endif
  2672  0015D6  0008               	tblrd		*
  2673  0015D8  50F5               	movf	tablat,w,c
  2674  0015DA  0A25               	xorlw	37
  2675  0015DC  A4D8               	btfss	status,2,c
  2676  0015DE  EFF3  F00A         	goto	u8511
  2677  0015E2  EFF5  F00A         	goto	u8510
  2678  0015E6                     u8511:
  2679  0015E6  EF0D  F00B         	goto	l7880
  2680  0015EA                     u8510:
  2681  0015EA                     
  2682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2683  0015EA  C0CB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2684  0015EE  C0CC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2685  0015F2  2ADE               	incf	postinc2,f,c
  2686  0015F4  0E00               	movlw	0
  2687  0015F6  22DD               	addwfc	postdec2,f,c
  2688  0015F8                     
  2689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2690  0015F8  0E00               	movlw	0
  2691  0015FA  6E1B               	movwf	(fputc@c+1)^0,c
  2692  0015FC  0E25               	movlw	37
  2693  0015FE  6E1A               	movwf	fputc@c^0,c
  2694  001600  C0C9  F01C         	movff	vfpfcnvrt@fp,fputc@fp
  2695  001604  C0CA  F01D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2696  001608  ECD7  F015         	call	_fputc	;wreg free
  2697  00160C                     l7876:
  2698                           
  2699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2700  00160C  0E00               	movlw	0
  2701  00160E  0100               	movlb	0	; () banked
  2702  001610  6FCA               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2703  001612  0E01               	movlw	1
  2704  001614  6FC9               	movwf	?_vfpfcnvrt& (0+255),b
  2705  001616  EF37  F00B         	goto	l1643
  2706  00161A                     l7880:
  2707                           
  2708                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2709  00161A  C0CB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2710  00161E  C0CC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2711  001622  2ADE               	incf	postinc2,f,c
  2712  001624  0E00               	movlw	0
  2713  001626  22DD               	addwfc	postdec2,f,c
  2714  001628                     
  2715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2716  001628  0E00               	movlw	0
  2717  00162A  0100               	movlb	0	; () banked
  2718  00162C  6FCA               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2719  00162E  0E00               	movlw	0
  2720  001630  6FC9               	movwf	?_vfpfcnvrt& (0+255),b
  2721  001632  EF37  F00B         	goto	l1643
  2722  001636                     l7886:
  2723                           
  2724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2725  001636  C0CB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2726  00163A  C0CC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2727  00163E  CFDE FFF6          	movff	postinc2,tblptrl
  2728  001642  CFDD FFF7          	movff	postdec2,tblptrh
  2729  001646                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2730  001646  6AF8               	clrf	tblptru,c
  2731  001648                     	endif
  2732  001648                     	if	0	;tblptru may be non-zero
  2733  001648                     	endif
  2734  001648  0008               	tblrd		*
  2735  00164A  50F5               	movf	tablat,w,c
  2736  00164C  6E1A               	movwf	fputc@c^0,c
  2737  00164E  6A1B               	clrf	(fputc@c+1)^0,c
  2738  001650  C0C9  F01C         	movff	vfpfcnvrt@fp,fputc@fp
  2739  001654  C0CA  F01D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2740  001658  ECD7  F015         	call	_fputc	;wreg free
  2741  00165C                     
  2742                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2743  00165C  C0CB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2744  001660  C0CC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2745  001664  2ADE               	incf	postinc2,f,c
  2746  001666  0E00               	movlw	0
  2747  001668  22DD               	addwfc	postdec2,f,c
  2748  00166A  EF06  F00B         	goto	l7876
  2749  00166E                     l1643:
  2750  00166E  0012               	return		;funcret
  2751  001670                     __end_of_vfpfcnvrt:
  2752                           	callstack 0
  2753                           
  2754 ;; *************** function _strncmp *****************
  2755 ;; Defined at:
  2756 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strncmp.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  _l              2   25[COMRAM] PTR const unsigned char 
  2759 ;;		 -> vfpfcnvrt@ct(3), 
  2760 ;;  _r              2   27[COMRAM] PTR const unsigned char 
  2761 ;;		 -> STR_23(3), 
  2762 ;;  n               2   29[COMRAM] unsigned int 
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;  r               2   34[COMRAM] PTR const unsigned char 
  2765 ;;		 -> STR_23(3), 
  2766 ;;  l               2   32[COMRAM] PTR const unsigned char 
  2767 ;;		 -> vfpfcnvrt@ct(3), 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  2   25[COMRAM] int 
  2770 ;; Registers used:
  2771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2777 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2778 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2779 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2780 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2781 ;;Total ram usage:       11 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; Hardware stack levels required when called:    7
  2784 ;; This function calls:
  2785 ;;		Nothing
  2786 ;; This function is called by:
  2787 ;;		_vfpfcnvrt
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           	psect	text4
  2792  002A04                     __ptext4:
  2793                           	callstack 0
  2794  002A04                     _strncmp:
  2795                           	callstack 20
  2796  002A04  C01A  F021         	movff	strncmp@_l,strncmp@l
  2797  002A08  C01B  F022         	movff	strncmp@_l+1,strncmp@l+1
  2798  002A0C  C01C  F023         	movff	strncmp@_r,strncmp@r
  2799  002A10  C01D  F024         	movff	strncmp@_r+1,strncmp@r+1
  2800  002A14  061E               	decf	strncmp@n^0,f,c
  2801  002A16  A0D8               	btfss	status,0,c
  2802  002A18  061F               	decf	(strncmp@n+1)^0,f,c
  2803  002A1A  281E               	incf	strncmp@n^0,w,c
  2804  002A1C  E106               	bnz	u8311
  2805  002A1E  281F               	incf	(strncmp@n+1)^0,w,c
  2806  002A20  A4D8               	btfss	status,2,c
  2807  002A22  EF15  F015         	goto	u8311
  2808  002A26  EF17  F015         	goto	u8310
  2809  002A2A                     u8311:
  2810  002A2A  EF24  F015         	goto	l7788
  2811  002A2E                     u8310:
  2812  002A2E  0E00               	movlw	0
  2813  002A30  6E1B               	movwf	(?_strncmp+1)^0,c
  2814  002A32  0E00               	movlw	0
  2815  002A34  6E1A               	movwf	?_strncmp^0,c
  2816  002A36  EF6F  F015         	goto	l1778
  2817  002A3A                     l7786:
  2818  002A3A  4A21               	infsnz	strncmp@l^0,f,c
  2819  002A3C  2A22               	incf	(strncmp@l+1)^0,f,c
  2820  002A3E  4A23               	infsnz	strncmp@r^0,f,c
  2821  002A40  2A24               	incf	(strncmp@r+1)^0,f,c
  2822  002A42  061E               	decf	strncmp@n^0,f,c
  2823  002A44  A0D8               	btfss	status,0,c
  2824  002A46  061F               	decf	(strncmp@n+1)^0,f,c
  2825  002A48                     l7788:
  2826  002A48  C021  FFD9         	movff	strncmp@l,fsr2l
  2827  002A4C  C022  FFDA         	movff	strncmp@l+1,fsr2h
  2828  002A50  50DF               	movf	indf2,w,c
  2829  002A52  B4D8               	btfsc	status,2,c
  2830  002A54  EF2E  F015         	goto	u8321
  2831  002A58  EF30  F015         	goto	u8320
  2832  002A5C                     u8321:
  2833  002A5C  EF5D  F015         	goto	l7796
  2834  002A60                     u8320:
  2835  002A60  C023  FFF6         	movff	strncmp@r,tblptrl
  2836  002A64  C024  FFF7         	movff	strncmp@r+1,tblptrh
  2837  002A68                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2838  002A68  6AF8               	clrf	tblptru,c
  2839  002A6A                     	endif
  2840  002A6A                     	if	0	;tblptru may be non-zero
  2841  002A6A                     	endif
  2842  002A6A  0008               	tblrd		*
  2843  002A6C  50F5               	movf	tablat,w,c
  2844  002A6E  0900               	iorlw	0
  2845  002A70  B4D8               	btfsc	status,2,c
  2846  002A72  EF3D  F015         	goto	u8331
  2847  002A76  EF3F  F015         	goto	u8330
  2848  002A7A                     u8331:
  2849  002A7A  EF5D  F015         	goto	l7796
  2850  002A7E                     u8330:
  2851  002A7E  501E               	movf	strncmp@n^0,w,c
  2852  002A80  101F               	iorwf	(strncmp@n+1)^0,w,c
  2853  002A82  B4D8               	btfsc	status,2,c
  2854  002A84  EF46  F015         	goto	u8341
  2855  002A88  EF48  F015         	goto	u8340
  2856  002A8C                     u8341:
  2857  002A8C  EF5D  F015         	goto	l7796
  2858  002A90                     u8340:
  2859  002A90  C021  FFD9         	movff	strncmp@l,fsr2l
  2860  002A94  C022  FFDA         	movff	strncmp@l+1,fsr2h
  2861  002A98  50DF               	movf	indf2,w,c
  2862  002A9A  6E20               	movwf	??_strncmp^0,c
  2863  002A9C  C023  FFF6         	movff	strncmp@r,tblptrl
  2864  002AA0  C024  FFF7         	movff	strncmp@r+1,tblptrh
  2865  002AA4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2866  002AA4  6AF8               	clrf	tblptru,c
  2867  002AA6                     	endif
  2868  002AA6                     	if	0	;tblptru may be non-zero
  2869  002AA6                     	endif
  2870  002AA6  0008               	tblrd		*
  2871  002AA8  50F5               	movf	tablat,w,c
  2872  002AAA  1820               	xorwf	??_strncmp^0,w,c
  2873  002AAC  B4D8               	btfsc	status,2,c
  2874  002AAE  EF5B  F015         	goto	u8351
  2875  002AB2  EF5D  F015         	goto	u8350
  2876  002AB6                     u8351:
  2877  002AB6  EF1D  F015         	goto	l7786
  2878  002ABA                     u8350:
  2879  002ABA                     l7796:
  2880  002ABA  C021  FFD9         	movff	strncmp@l,fsr2l
  2881  002ABE  C022  FFDA         	movff	strncmp@l+1,fsr2h
  2882  002AC2  50DF               	movf	indf2,w,c
  2883  002AC4  6E20               	movwf	??_strncmp^0,c
  2884  002AC6  C023  FFF6         	movff	strncmp@r,tblptrl
  2885  002ACA  C024  FFF7         	movff	strncmp@r+1,tblptrh
  2886  002ACE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2887  002ACE  6AF8               	clrf	tblptru,c
  2888  002AD0                     	endif
  2889  002AD0                     	if	0	;tblptru may be non-zero
  2890  002AD0                     	endif
  2891  002AD0  0008               	tblrd		*
  2892  002AD2  50F5               	movf	tablat,w,c
  2893  002AD4  5C20               	subwf	??_strncmp^0,w,c
  2894  002AD6  6E1A               	movwf	?_strncmp^0,c
  2895  002AD8  6A1B               	clrf	(?_strncmp+1)^0,c
  2896  002ADA  A0D8               	btfss	status,0,c
  2897  002ADC  061B               	decf	(?_strncmp+1)^0,f,c
  2898  002ADE                     l1778:
  2899  002ADE  0012               	return		;funcret
  2900  002AE0                     __end_of_strncmp:
  2901                           	callstack 0
  2902                           
  2903 ;; *************** function _efgtoa *****************
  2904 ;; Defined at:
  2905 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  fp              2   37[BANK0 ] PTR struct _IO_FILE
  2908 ;;		 -> sprintf@f(6), NULL(0), 
  2909 ;;  f               4   39[BANK0 ] PTR struct _IO_FILE
  2910 ;;  c               1   43[BANK0 ] unsigned char 
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;  u               4  101[BANK0 ] unsigned char 
  2913 ;;  g               4   93[BANK0 ] unsigned char 
  2914 ;;  l               4   87[BANK0 ] unsigned char 
  2915 ;;  h               4   83[BANK0 ] unsigned char 
  2916 ;;  ou              4   69[BANK0 ] unsigned char 
  2917 ;;  n               2   99[BANK0 ] int 
  2918 ;;  e               2   97[BANK0 ] int 
  2919 ;;  i               2   91[BANK0 ] int 
  2920 ;;  w               2   79[BANK0 ] int 
  2921 ;;  p               2   77[BANK0 ] int 
  2922 ;;  sign            2   75[BANK0 ] int 
  2923 ;;  d               2   73[BANK0 ] int 
  2924 ;;  m               2   67[BANK0 ] int 
  2925 ;;  ne              2   65[BANK0 ] int 
  2926 ;;  pp              2   63[BANK0 ] int 
  2927 ;;  t               2   61[BANK0 ] int 
  2928 ;;  mode            1   82[BANK0 ] unsigned char 
  2929 ;;  nmode           1   81[BANK0 ] unsigned char 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  2   37[BANK0 ] int 
  2932 ;; Registers used:
  2933 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2939 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2940 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2941 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2942 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2943 ;;Total ram usage:       68 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:   11
  2946 ;; This function calls:
  2947 ;;		___awdiv
  2948 ;;		___awmod
  2949 ;;		___fladd
  2950 ;;		___fldiv
  2951 ;;		___fleq
  2952 ;;		___flge
  2953 ;;		___flmul
  2954 ;;		___flneg
  2955 ;;		___flsub
  2956 ;;		___fltol
  2957 ;;		___fpclassifyf
  2958 ;;		_floorf
  2959 ;;		_isupper
  2960 ;;		_pad
  2961 ;;		_strcpy
  2962 ;;		_tolower
  2963 ;; This function is called by:
  2964 ;;		_vfpfcnvrt
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	text5
  2969  0000C8                     __ptext5:
  2970                           	callstack 0
  2971  0000C8                     _efgtoa:
  2972                           	callstack 16
  2973  0000C8                     
  2974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.31\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2975  0000C8  0E00               	movlw	0
  2976  0000CA  0100               	movlb	0	; () banked
  2977  0000CC  6FAC               	movwf	(efgtoa@sign+1)& (0+255),b
  2978  0000CE  0E00               	movlw	0
  2979  0000D0  6FAB               	movwf	efgtoa@sign& (0+255),b
  2980  0000D2                     
  2981                           ; BSR set to: 0
  2982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2983  0000D2  C087  F0BD         	movff	efgtoa@f,efgtoa@g
  2984  0000D6  C088  F0BE         	movff	efgtoa@f+1,efgtoa@g+1
  2985  0000DA  C089  F0BF         	movff	efgtoa@f+2,efgtoa@g+2
  2986  0000DE  C08A  F0C0         	movff	efgtoa@f+3,efgtoa@g+3
  2987  0000E2                     
  2988                           ; BSR set to: 0
  2989                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2990  0000E2  BFC0               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2991  0000E4  EF78  F000         	goto	u7700
  2992  0000E8  EF76  F000         	goto	u7701
  2993  0000EC                     u7701:
  2994  0000EC  EF8E  F000         	goto	l7438
  2995  0000F0                     u7700:
  2996  0000F0                     
  2997                           ; BSR set to: 0
  2998                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2999  0000F0  0E00               	movlw	0
  3000  0000F2  6FAC               	movwf	(efgtoa@sign+1)& (0+255),b
  3001  0000F4  0E01               	movlw	1
  3002  0000F6  6FAB               	movwf	efgtoa@sign& (0+255),b
  3003  0000F8                     
  3004                           ; BSR set to: 0
  3005                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3006  0000F8  C0BD  F01A         	movff	efgtoa@g,___flneg@f1
  3007  0000FC  C0BE  F01B         	movff	efgtoa@g+1,___flneg@f1+1
  3008  000100  C0BF  F01C         	movff	efgtoa@g+2,___flneg@f1+2
  3009  000104  C0C0  F01D         	movff	efgtoa@g+3,___flneg@f1+3
  3010  000108  EC77  F01B         	call	___flneg	;wreg free
  3011  00010C  C01A  F0BD         	movff	?___flneg,efgtoa@g
  3012  000110  C01B  F0BE         	movff	?___flneg+1,efgtoa@g+1
  3013  000114  C01C  F0BF         	movff	?___flneg+2,efgtoa@g+2
  3014  000118  C01D  F0C0         	movff	?___flneg+3,efgtoa@g+3
  3015  00011C                     l7438:
  3016                           
  3017                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3018  00011C  0E00               	movlw	0
  3019  00011E  0100               	movlb	0	; () banked
  3020  000120  6FC4               	movwf	(efgtoa@n+1)& (0+255),b
  3021  000122  0E00               	movlw	0
  3022  000124  6FC3               	movwf	efgtoa@n& (0+255),b
  3023  000126                     
  3024                           ; BSR set to: 0
  3025                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3026  000126  C0E3  F0AF         	movff	_width,efgtoa@w
  3027  00012A  C0E4  F0B0         	movff	_width+1,efgtoa@w+1
  3028  00012E                     
  3029                           ; BSR set to: 0
  3030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3031  00012E  51AB               	movf	efgtoa@sign& (0+255),w,b
  3032  000130  11AC               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3033  000132  A4D8               	btfss	status,2,c
  3034  000134  EF9E  F000         	goto	u7711
  3035  000138  EFA0  F000         	goto	u7710
  3036  00013C                     u7711:
  3037  00013C  EFA7  F000         	goto	l7446
  3038  000140                     u7710:
  3039  000140                     
  3040                           ; BSR set to: 0
  3041  000140  A442               	btfss	_flags^0,2,c
  3042  000142  EFA5  F000         	goto	u7721
  3043  000146  EFA7  F000         	goto	u7720
  3044  00014A                     u7721:
  3045  00014A  EFC1  F000         	goto	l7458
  3046  00014E                     u7720:
  3047  00014E                     l7446:
  3048                           
  3049                           ; BSR set to: 0
  3050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3051  00014E  51AB               	movf	efgtoa@sign& (0+255),w,b
  3052  000150  11AC               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3053  000152  A4D8               	btfss	status,2,c
  3054  000154  EFAE  F000         	goto	u7731
  3055  000158  EFB0  F000         	goto	u7730
  3056  00015C                     u7731:
  3057  00015C  EFB6  F000         	goto	l7450
  3058  000160                     u7730:
  3059  000160                     
  3060                           ; BSR set to: 0
  3061  000160  0E00               	movlw	0
  3062  000162  6F92               	movwf	(_efgtoa$2046+1)& (0+255),b
  3063  000164  0E2B               	movlw	43
  3064  000166  6F91               	movwf	_efgtoa$2046& (0+255),b
  3065  000168  EFBA  F000         	goto	l7452
  3066  00016C                     l7450:
  3067                           
  3068                           ; BSR set to: 0
  3069  00016C  0E00               	movlw	0
  3070  00016E  6F92               	movwf	(_efgtoa$2046+1)& (0+255),b
  3071  000170  0E2D               	movlw	45
  3072  000172  6F91               	movwf	_efgtoa$2046& (0+255),b
  3073  000174                     l7452:
  3074                           
  3075                           ; BSR set to: 0
  3076  000174  C091  F174         	movff	_efgtoa$2046,_dbuf
  3077  000178                     
  3078                           ; BSR set to: 0
  3079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3080  000178  4BC3               	infsnz	efgtoa@n& (0+255),f,b
  3081  00017A  2BC4               	incf	(efgtoa@n+1)& (0+255),f,b
  3082  00017C                     
  3083                           ; BSR set to: 0
  3084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 352:         --w;
  3085  00017C  07AF               	decf	efgtoa@w& (0+255),f,b
  3086  00017E  A0D8               	btfss	status,0,c
  3087  000180  07B0               	decf	(efgtoa@w+1)& (0+255),f,b
  3088  000182                     l7458:
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3092  000182  C0BD  F01A         	movff	efgtoa@g,___fpclassifyf@x
  3093  000186  C0BE  F01B         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3094  00018A  C0BF  F01C         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3095  00018E  C0C0  F01D         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3096  000192  EC83  F014         	call	___fpclassifyf	;wreg free
  3097  000196  041A               	decf	?___fpclassifyf^0,w,c
  3098  000198  101B               	iorwf	(?___fpclassifyf+1)^0,w,c
  3099  00019A  A4D8               	btfss	status,2,c
  3100  00019C  EFD2  F000         	goto	u7741
  3101  0001A0  EFD4  F000         	goto	u7740
  3102  0001A4                     u7741:
  3103  0001A4  EF2C  F001         	goto	l7476
  3104  0001A8                     u7740:
  3105  0001A8  0EBF               	movlw	191
  3106  0001AA  0100               	movlb	0	; () banked
  3107  0001AC  6F8C               	movwf	??_efgtoa& (0+255),b
  3108  0001AE  0EFF               	movlw	255
  3109  0001B0  6F8D               	movwf	(??_efgtoa+1)& (0+255),b
  3110  0001B2  518B               	movf	efgtoa@c& (0+255),w,b
  3111  0001B4  6F8E               	movwf	(??_efgtoa+2)& (0+255),b
  3112  0001B6  6B8F               	clrf	(??_efgtoa+3)& (0+255),b
  3113  0001B8  518C               	movf	??_efgtoa& (0+255),w,b
  3114  0001BA  278E               	addwf	(??_efgtoa+2)& (0+255),f,b
  3115  0001BC  518D               	movf	(??_efgtoa+1)& (0+255),w,b
  3116  0001BE  238F               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3117  0001C0  518F               	movf	(??_efgtoa+3)& (0+255),w,b
  3118  0001C2  E10A               	bnz	u7750
  3119  0001C4  0E1A               	movlw	26
  3120  0001C6  5D8E               	subwf	(??_efgtoa+2)& (0+255),w,b
  3121  0001C8  A0D8               	btfss	status,0,c
  3122  0001CA  EFE9  F000         	goto	u7751
  3123  0001CE  EFEC  F000         	goto	u7750
  3124  0001D2                     u7751:
  3125  0001D2  0E01               	movlw	1
  3126  0001D4  EFED  F000         	goto	u7760
  3127  0001D8                     u7750:
  3128  0001D8  0E00               	movlw	0
  3129  0001DA                     u7760:
  3130  0001DA  6F93               	movwf	_efgtoa$2047& (0+255),b
  3131  0001DC  6B94               	clrf	(_efgtoa$2047+1)& (0+255),b
  3132  0001DE                     
  3133                           ; BSR set to: 0
  3134  0001DE  5193               	movf	_efgtoa$2047& (0+255),w,b
  3135  0001E0  1194               	iorwf	(_efgtoa$2047+1)& (0+255),w,b
  3136  0001E2  B4D8               	btfsc	status,2,c
  3137  0001E4  EFF6  F000         	goto	u7771
  3138  0001E8  EFF8  F000         	goto	u7770
  3139  0001EC                     u7771:
  3140  0001EC  EF06  F001         	goto	l7468
  3141  0001F0                     u7770:
  3142  0001F0                     
  3143                           ; BSR set to: 0
  3144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3145  0001F0  0E74               	movlw	low _dbuf
  3146  0001F2  25C3               	addwf	efgtoa@n& (0+255),w,b
  3147  0001F4  6E1A               	movwf	strcpy@dest^0,c
  3148  0001F6  0E01               	movlw	high _dbuf
  3149  0001F8  21C4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3150  0001FA  6E1B               	movwf	(strcpy@dest+1)^0,c
  3151  0001FC  0EEC               	movlw	low STR_13
  3152  0001FE  6E1C               	movwf	strcpy@src^0,c
  3153  000200  0EFF               	movlw	high STR_13
  3154  000202  6E1D               	movwf	(strcpy@src+1)^0,c
  3155  000204  ECFE  F019         	call	_strcpy	;wreg free
  3156                           
  3157                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3158  000208  EF12  F001         	goto	l7470
  3159  00020C                     l7468:
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3163  00020C  0E74               	movlw	low _dbuf
  3164  00020E  25C3               	addwf	efgtoa@n& (0+255),w,b
  3165  000210  6E1A               	movwf	strcpy@dest^0,c
  3166  000212  0E01               	movlw	high _dbuf
  3167  000214  21C4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3168  000216  6E1B               	movwf	(strcpy@dest+1)^0,c
  3169  000218  0EF4               	movlw	low STR_14
  3170  00021A  6E1C               	movwf	strcpy@src^0,c
  3171  00021C  0EFF               	movlw	high STR_14
  3172  00021E  6E1D               	movwf	(strcpy@src+1)^0,c
  3173  000220  ECFE  F019         	call	_strcpy	;wreg free
  3174  000224                     l7470:
  3175                           
  3176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3177  000224  0100               	movlb	0	; () banked
  3178  000226  0EFD               	movlw	253
  3179  000228  27AF               	addwf	efgtoa@w& (0+255),f,b
  3180  00022A  0EFF               	movlw	255
  3181  00022C  23B0               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3182  00022E                     l7472:
  3183                           
  3184                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3185  00022E  C085  F060         	movff	efgtoa@fp,pad@fp
  3186  000232  C086  F061         	movff	efgtoa@fp+1,pad@fp+1
  3187  000236  0E74               	movlw	low _dbuf
  3188  000238  0100               	movlb	0	; () banked
  3189  00023A  6F62               	movwf	pad@buf& (0+255),b
  3190  00023C  0E01               	movlw	high _dbuf
  3191  00023E  6F63               	movwf	(pad@buf+1)& (0+255),b
  3192  000240  C0AF  F064         	movff	efgtoa@w,pad@p
  3193  000244  C0B0  F065         	movff	efgtoa@w+1,pad@p+1
  3194  000248  EC3C  F016         	call	_pad	;wreg free
  3195  00024C  C060  F085         	movff	?_pad,?_efgtoa
  3196  000250  C061  F086         	movff	?_pad+1,?_efgtoa+1
  3197  000254  EF94  F006         	goto	l1551
  3198  000258                     l7476:
  3199                           
  3200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3201  000258  C0BD  F01A         	movff	efgtoa@g,___fpclassifyf@x
  3202  00025C  C0BE  F01B         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3203  000260  C0BF  F01C         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3204  000264  C0C0  F01D         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3205  000268  EC83  F014         	call	___fpclassifyf	;wreg free
  3206  00026C  501A               	movf	?___fpclassifyf^0,w,c
  3207  00026E  101B               	iorwf	(?___fpclassifyf+1)^0,w,c
  3208  000270  A4D8               	btfss	status,2,c
  3209  000272  EF3D  F001         	goto	u7781
  3210  000276  EF3F  F001         	goto	u7780
  3211  00027A                     u7781:
  3212  00027A  EF7F  F001         	goto	l7494
  3213  00027E                     u7780:
  3214  00027E  0EBF               	movlw	191
  3215  000280  0100               	movlb	0	; () banked
  3216  000282  6F8C               	movwf	??_efgtoa& (0+255),b
  3217  000284  0EFF               	movlw	255
  3218  000286  6F8D               	movwf	(??_efgtoa+1)& (0+255),b
  3219  000288  518B               	movf	efgtoa@c& (0+255),w,b
  3220  00028A  6F8E               	movwf	(??_efgtoa+2)& (0+255),b
  3221  00028C  6B8F               	clrf	(??_efgtoa+3)& (0+255),b
  3222  00028E  518C               	movf	??_efgtoa& (0+255),w,b
  3223  000290  278E               	addwf	(??_efgtoa+2)& (0+255),f,b
  3224  000292  518D               	movf	(??_efgtoa+1)& (0+255),w,b
  3225  000294  238F               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3226  000296  518F               	movf	(??_efgtoa+3)& (0+255),w,b
  3227  000298  E10A               	bnz	u7790
  3228  00029A  0E1A               	movlw	26
  3229  00029C  5D8E               	subwf	(??_efgtoa+2)& (0+255),w,b
  3230  00029E  A0D8               	btfss	status,0,c
  3231  0002A0  EF54  F001         	goto	u7791
  3232  0002A4  EF57  F001         	goto	u7790
  3233  0002A8                     u7791:
  3234  0002A8  0E01               	movlw	1
  3235  0002AA  EF58  F001         	goto	u7800
  3236  0002AE                     u7790:
  3237  0002AE  0E00               	movlw	0
  3238  0002B0                     u7800:
  3239  0002B0  6F95               	movwf	_efgtoa$2052& (0+255),b
  3240  0002B2  6B96               	clrf	(_efgtoa$2052+1)& (0+255),b
  3241  0002B4                     
  3242                           ; BSR set to: 0
  3243  0002B4  5195               	movf	_efgtoa$2052& (0+255),w,b
  3244  0002B6  1196               	iorwf	(_efgtoa$2052+1)& (0+255),w,b
  3245  0002B8  B4D8               	btfsc	status,2,c
  3246  0002BA  EF61  F001         	goto	u7811
  3247  0002BE  EF63  F001         	goto	u7810
  3248  0002C2                     u7811:
  3249  0002C2  EF71  F001         	goto	l7486
  3250  0002C6                     u7810:
  3251  0002C6                     
  3252                           ; BSR set to: 0
  3253                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3254  0002C6  0E74               	movlw	low _dbuf
  3255  0002C8  25C3               	addwf	efgtoa@n& (0+255),w,b
  3256  0002CA  6E1A               	movwf	strcpy@dest^0,c
  3257  0002CC  0E01               	movlw	high _dbuf
  3258  0002CE  21C4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3259  0002D0  6E1B               	movwf	(strcpy@dest+1)^0,c
  3260  0002D2  0EF0               	movlw	low STR_17
  3261  0002D4  6E1C               	movwf	strcpy@src^0,c
  3262  0002D6  0EFF               	movlw	high STR_17
  3263  0002D8  6E1D               	movwf	(strcpy@src+1)^0,c
  3264  0002DA  ECFE  F019         	call	_strcpy	;wreg free
  3265                           
  3266                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3267  0002DE  EF12  F001         	goto	l7470
  3268  0002E2                     l7486:
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3272  0002E2  0E74               	movlw	low _dbuf
  3273  0002E4  25C3               	addwf	efgtoa@n& (0+255),w,b
  3274  0002E6  6E1A               	movwf	strcpy@dest^0,c
  3275  0002E8  0E01               	movlw	high _dbuf
  3276  0002EA  21C4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3277  0002EC  6E1B               	movwf	(strcpy@dest+1)^0,c
  3278  0002EE  0EF8               	movlw	low STR_18
  3279  0002F0  6E1C               	movwf	strcpy@src^0,c
  3280  0002F2  0EFF               	movlw	high STR_18
  3281  0002F4  6E1D               	movwf	(strcpy@src+1)^0,c
  3282  0002F6  ECFE  F019         	call	_strcpy	;wreg free
  3283  0002FA  EF12  F001         	goto	l7470
  3284  0002FE                     l7494:
  3285                           
  3286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3287  0002FE  0E00               	movlw	0
  3288  000300  0100               	movlb	0	; () banked
  3289  000302  6FC5               	movwf	efgtoa@u& (0+255),b
  3290  000304  0E00               	movlw	0
  3291  000306  6FC6               	movwf	(efgtoa@u+1)& (0+255),b
  3292  000308  0E80               	movlw	128
  3293  00030A  6FC7               	movwf	(efgtoa@u+2)& (0+255),b
  3294  00030C  0E3F               	movlw	63
  3295  00030E  6FC8               	movwf	(efgtoa@u+3)& (0+255),b
  3296                           
  3297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3298  000310  0E00               	movlw	0
  3299  000312  6FC2               	movwf	(efgtoa@e+1)& (0+255),b
  3300  000314  0E00               	movlw	0
  3301  000316  6FC1               	movwf	efgtoa@e& (0+255),b
  3302  000318                     
  3303                           ; BSR set to: 0
  3304                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3305  000318  C0BD  F01A         	movff	efgtoa@g,___fleq@ff1
  3306  00031C  C0BE  F01B         	movff	efgtoa@g+1,___fleq@ff1+1
  3307  000320  C0BF  F01C         	movff	efgtoa@g+2,___fleq@ff1+2
  3308  000324  C0C0  F01D         	movff	efgtoa@g+3,___fleq@ff1+3
  3309  000328  0E00               	movlw	0
  3310  00032A  6E1E               	movwf	___fleq@ff2^0,c
  3311  00032C  0E00               	movlw	0
  3312  00032E  6E1F               	movwf	(___fleq@ff2+1)^0,c
  3313  000330  0E00               	movlw	0
  3314  000332  6E20               	movwf	(___fleq@ff2+2)^0,c
  3315  000334  0E00               	movlw	0
  3316  000336  6E21               	movwf	(___fleq@ff2+3)^0,c
  3317  000338  ECBC  F017         	call	___fleq	;wreg free
  3318  00033C  B0D8               	btfsc	status,0,c
  3319  00033E  EFA3  F001         	goto	u7821
  3320  000342  EFA5  F001         	goto	u7820
  3321  000346                     u7821:
  3322  000346  EF2B  F002         	goto	l7512
  3323  00034A                     u7820:
  3324  00034A  EFC4  F001         	goto	l7504
  3325  00034E                     l7500:
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3329  00034E  C0C5  F060         	movff	efgtoa@u,___flmul@b
  3330  000352  C0C6  F061         	movff	efgtoa@u+1,___flmul@b+1
  3331  000356  C0C7  F062         	movff	efgtoa@u+2,___flmul@b+2
  3332  00035A  C0C8  F063         	movff	efgtoa@u+3,___flmul@b+3
  3333  00035E  0E00               	movlw	0
  3334  000360  6F64               	movwf	___flmul@a& (0+255),b
  3335  000362  0E00               	movlw	0
  3336  000364  6F65               	movwf	(___flmul@a+1)& (0+255),b
  3337  000366  0E20               	movlw	32
  3338  000368  6F66               	movwf	(___flmul@a+2)& (0+255),b
  3339  00036A  0E41               	movlw	65
  3340  00036C  6F67               	movwf	(___flmul@a+3)& (0+255),b
  3341  00036E  EC38  F00B         	call	___flmul	;wreg free
  3342  000372  C060  F0C5         	movff	?___flmul,efgtoa@u
  3343  000376  C061  F0C6         	movff	?___flmul+1,efgtoa@u+1
  3344  00037A  C062  F0C7         	movff	?___flmul+2,efgtoa@u+2
  3345  00037E  C063  F0C8         	movff	?___flmul+3,efgtoa@u+3
  3346  000382                     
  3347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3348  000382  0100               	movlb	0	; () banked
  3349  000384  4BC1               	infsnz	efgtoa@e& (0+255),f,b
  3350  000386  2BC2               	incf	(efgtoa@e+1)& (0+255),f,b
  3351  000388                     l7504:
  3352                           
  3353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3354  000388  C0BD  F079         	movff	efgtoa@g,___flge@ff1
  3355  00038C  C0BE  F07A         	movff	efgtoa@g+1,___flge@ff1+1
  3356  000390  C0BF  F07B         	movff	efgtoa@g+2,___flge@ff1+2
  3357  000394  C0C0  F07C         	movff	efgtoa@g+3,___flge@ff1+3
  3358  000398  0E00               	movlw	0
  3359  00039A  0100               	movlb	0	; () banked
  3360  00039C  6F64               	movwf	___flmul@a& (0+255),b
  3361  00039E  0E00               	movlw	0
  3362  0003A0  6F65               	movwf	(___flmul@a+1)& (0+255),b
  3363  0003A2  0E20               	movlw	32
  3364  0003A4  6F66               	movwf	(___flmul@a+2)& (0+255),b
  3365  0003A6  0E41               	movlw	65
  3366  0003A8  6F67               	movwf	(___flmul@a+3)& (0+255),b
  3367  0003AA  C0C5  F060         	movff	efgtoa@u,___flmul@b
  3368  0003AE  C0C6  F061         	movff	efgtoa@u+1,___flmul@b+1
  3369  0003B2  C0C7  F062         	movff	efgtoa@u+2,___flmul@b+2
  3370  0003B6  C0C8  F063         	movff	efgtoa@u+3,___flmul@b+3
  3371  0003BA  EC38  F00B         	call	___flmul	;wreg free
  3372  0003BE  C060  F07D         	movff	?___flmul,___flge@ff2
  3373  0003C2  C061  F07E         	movff	?___flmul+1,___flge@ff2+1
  3374  0003C6  C062  F07F         	movff	?___flmul+2,___flge@ff2+2
  3375  0003CA  C063  F080         	movff	?___flmul+3,___flge@ff2+3
  3376  0003CE  EC00  F014         	call	___flge	;wreg free
  3377  0003D2  0100               	movlb	0	; () banked
  3378  0003D4  B0D8               	btfsc	status,0,c
  3379  0003D6  EFEF  F001         	goto	u7831
  3380  0003DA  EFF1  F001         	goto	u7830
  3381  0003DE                     u7831:
  3382  0003DE  EFA7  F001         	goto	l7500
  3383  0003E2                     u7830:
  3384  0003E2  EF11  F002         	goto	l7510
  3385  0003E6                     l7506:
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3389  0003E6  C0C5  F01A         	movff	efgtoa@u,___fldiv@b
  3390  0003EA  C0C6  F01B         	movff	efgtoa@u+1,___fldiv@b+1
  3391  0003EE  C0C7  F01C         	movff	efgtoa@u+2,___fldiv@b+2
  3392  0003F2  C0C8  F01D         	movff	efgtoa@u+3,___fldiv@b+3
  3393  0003F6  0E00               	movlw	0
  3394  0003F8  6E1E               	movwf	___fldiv@a^0,c
  3395  0003FA  0E00               	movlw	0
  3396  0003FC  6E1F               	movwf	(___fldiv@a+1)^0,c
  3397  0003FE  0E20               	movlw	32
  3398  000400  6E20               	movwf	(___fldiv@a+2)^0,c
  3399  000402  0E41               	movlw	65
  3400  000404  6E21               	movwf	(___fldiv@a+3)^0,c
  3401  000406  EC4E  F00D         	call	___fldiv	;wreg free
  3402  00040A  C01A  F0C5         	movff	?___fldiv,efgtoa@u
  3403  00040E  C01B  F0C6         	movff	?___fldiv+1,efgtoa@u+1
  3404  000412  C01C  F0C7         	movff	?___fldiv+2,efgtoa@u+2
  3405  000416  C01D  F0C8         	movff	?___fldiv+3,efgtoa@u+3
  3406  00041A                     
  3407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3408  00041A  0100               	movlb	0	; () banked
  3409  00041C  07C1               	decf	efgtoa@e& (0+255),f,b
  3410  00041E  A0D8               	btfss	status,0,c
  3411  000420  07C2               	decf	(efgtoa@e+1)& (0+255),f,b
  3412  000422                     l7510:
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3416  000422  C0BD  F079         	movff	efgtoa@g,___flge@ff1
  3417  000426  C0BE  F07A         	movff	efgtoa@g+1,___flge@ff1+1
  3418  00042A  C0BF  F07B         	movff	efgtoa@g+2,___flge@ff1+2
  3419  00042E  C0C0  F07C         	movff	efgtoa@g+3,___flge@ff1+3
  3420  000432  C0C5  F07D         	movff	efgtoa@u,___flge@ff2
  3421  000436  C0C6  F07E         	movff	efgtoa@u+1,___flge@ff2+1
  3422  00043A  C0C7  F07F         	movff	efgtoa@u+2,___flge@ff2+2
  3423  00043E  C0C8  F080         	movff	efgtoa@u+3,___flge@ff2+3
  3424  000442  EC00  F014         	call	___flge	;wreg free
  3425  000446  0100               	movlb	0	; () banked
  3426  000448  A0D8               	btfss	status,0,c
  3427  00044A  EF29  F002         	goto	u7841
  3428  00044E  EF2B  F002         	goto	u7840
  3429  000452                     u7841:
  3430  000452  EFF3  F001         	goto	l7506
  3431  000456                     u7840:
  3432  000456                     l7512:
  3433                           
  3434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3435  000456  C08B  F020         	movff	efgtoa@c,tolower@c
  3436  00045A  6A21               	clrf	(tolower@c+1)^0,c
  3437  00045C  ECCE  F019         	call	_tolower	;wreg free
  3438  000460  5020               	movf	?_tolower^0,w,c
  3439  000462  0100               	movlb	0	; () banked
  3440  000464  6FB2               	movwf	efgtoa@mode& (0+255),b
  3441  000466                     
  3442                           ; BSR set to: 0
  3443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3444  000466  C0B2  F0B1         	movff	efgtoa@mode,efgtoa@nmode
  3445  00046A                     
  3446                           ; BSR set to: 0
  3447                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3448  00046A  0E67               	movlw	103
  3449  00046C  19B2               	xorwf	efgtoa@mode& (0+255),w,b
  3450  00046E  A4D8               	btfss	status,2,c
  3451  000470  EF3C  F002         	goto	u7851
  3452  000474  EF3E  F002         	goto	u7850
  3453  000478                     u7851:
  3454  000478  EF64  F002         	goto	l7526
  3455  00047C                     u7850:
  3456  00047C                     
  3457                           ; BSR set to: 0
  3458                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3459  00047C  51E5               	movf	_prec& (0+255),w,b
  3460  00047E  11E6               	iorwf	(_prec+1)& (0+255),w,b
  3461  000480  A4D8               	btfss	status,2,c
  3462  000482  EF45  F002         	goto	u7861
  3463  000486  EF47  F002         	goto	u7860
  3464  00048A                     u7861:
  3465  00048A  EF4B  F002         	goto	l7522
  3466  00048E                     u7860:
  3467  00048E                     
  3468                           ; BSR set to: 0
  3469                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3470  00048E  0E00               	movlw	0
  3471  000490  6FE6               	movwf	(_prec+1)& (0+255),b
  3472  000492  0E01               	movlw	1
  3473  000494  6FE5               	movwf	_prec& (0+255),b
  3474  000496                     l7522:
  3475                           
  3476                           ; BSR set to: 0
  3477                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3478  000496  BFE6               	btfsc	(_prec+1)& (0+255),7,b
  3479  000498  EF58  F002         	goto	u7870
  3480  00049C  51E6               	movf	(_prec+1)& (0+255),w,b
  3481  00049E  E106               	bnz	u7871
  3482  0004A0  05E5               	decf	_prec& (0+255),w,b
  3483  0004A2  B0D8               	btfsc	status,0,c
  3484  0004A4  EF56  F002         	goto	u7871
  3485  0004A8  EF58  F002         	goto	u7870
  3486  0004AC                     u7871:
  3487  0004AC  EF5E  F002         	goto	l1569
  3488  0004B0                     u7870:
  3489  0004B0                     l7524:
  3490                           
  3491                           ; BSR set to: 0
  3492  0004B0  0E00               	movlw	0
  3493  0004B2  6FAE               	movwf	(efgtoa@p+1)& (0+255),b
  3494  0004B4  0E06               	movlw	6
  3495  0004B6  6FAD               	movwf	efgtoa@p& (0+255),b
  3496  0004B8  EF6D  F002         	goto	l7532
  3497  0004BC                     l1569:
  3498                           
  3499                           ; BSR set to: 0
  3500  0004BC  C0E5  F0AD         	movff	_prec,efgtoa@p
  3501  0004C0  C0E6  F0AE         	movff	_prec+1,efgtoa@p+1
  3502  0004C4  EF6D  F002         	goto	l7532
  3503  0004C8                     l7526:
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3507  0004C8  BFE6               	btfsc	(_prec+1)& (0+255),7,b
  3508  0004CA  EF69  F002         	goto	u7881
  3509  0004CE  EF6B  F002         	goto	u7880
  3510  0004D2                     u7881:
  3511  0004D2  EF58  F002         	goto	l7524
  3512  0004D6                     u7880:
  3513  0004D6  EF5E  F002         	goto	l1569
  3514  0004DA                     l7532:
  3515                           
  3516                           ; BSR set to: 0
  3517                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3518  0004DA  0E67               	movlw	103
  3519  0004DC  19B2               	xorwf	efgtoa@mode& (0+255),w,b
  3520  0004DE  A4D8               	btfss	status,2,c
  3521  0004E0  EF74  F002         	goto	u7891
  3522  0004E4  EF76  F002         	goto	u7890
  3523  0004E8                     u7891:
  3524  0004E8  EFA5  F002         	goto	l7542
  3525  0004EC                     u7890:
  3526  0004EC                     
  3527                           ; BSR set to: 0
  3528                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3529  0004EC  AFC2               	btfss	(efgtoa@e+1)& (0+255),7,b
  3530  0004EE  EF84  F002         	goto	u7900
  3531  0004F2  0EFC               	movlw	252
  3532  0004F4  5DC1               	subwf	efgtoa@e& (0+255),w,b
  3533  0004F6  0EFF               	movlw	255
  3534  0004F8  59C2               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3535  0004FA  A0D8               	btfss	status,0,c
  3536  0004FC  EF82  F002         	goto	u7901
  3537  000500  EF84  F002         	goto	u7900
  3538  000504                     u7901:
  3539  000504  EFA3  F002         	goto	l7540
  3540  000508                     u7900:
  3541  000508                     
  3542                           ; BSR set to: 0
  3543  000508  0EFF               	movlw	255
  3544  00050A  6F8C               	movwf	??_efgtoa& (0+255),b
  3545  00050C  0EFF               	movlw	255
  3546  00050E  6F8D               	movwf	(??_efgtoa+1)& (0+255),b
  3547  000510  C0AD  F08E         	movff	efgtoa@p,??_efgtoa+2
  3548  000514  C0AE  F08F         	movff	efgtoa@p+1,??_efgtoa+3
  3549  000518  518C               	movf	??_efgtoa& (0+255),w,b
  3550  00051A  278E               	addwf	(??_efgtoa+2)& (0+255),f,b
  3551  00051C  518D               	movf	(??_efgtoa+1)& (0+255),w,b
  3552  00051E  238F               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3553  000520  51C1               	movf	efgtoa@e& (0+255),w,b
  3554  000522  5D8E               	subwf	(??_efgtoa+2)& (0+255),w,b
  3555  000524  518F               	movf	(??_efgtoa+3)& (0+255),w,b
  3556  000526  0A80               	xorlw	128
  3557  000528  6F90               	movwf	(??_efgtoa+4)& (0+255),b
  3558  00052A  51C2               	movf	(efgtoa@e+1)& (0+255),w,b
  3559  00052C  0A80               	xorlw	128
  3560  00052E  5990               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3561  000530  A0D8               	btfss	status,0,c
  3562  000532  EF9D  F002         	goto	u7911
  3563  000536  EF9F  F002         	goto	u7910
  3564  00053A                     u7911:
  3565  00053A  EFA3  F002         	goto	l7540
  3566  00053E                     u7910:
  3567  00053E                     
  3568                           ; BSR set to: 0
  3569                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3570  00053E  0E66               	movlw	102
  3571  000540  6FB1               	movwf	efgtoa@nmode& (0+255),b
  3572                           
  3573                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3574  000542  EFA5  F002         	goto	l7542
  3575  000546                     l7540:
  3576                           
  3577                           ; BSR set to: 0
  3578                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3579  000546  0E65               	movlw	101
  3580  000548  6FB1               	movwf	efgtoa@nmode& (0+255),b
  3581  00054A                     l7542:
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3585  00054A  C0AD  F0A3         	movff	efgtoa@p,efgtoa@m
  3586  00054E  C0AE  F0A4         	movff	efgtoa@p+1,efgtoa@m+1
  3587  000552                     
  3588                           ; BSR set to: 0
  3589                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3590  000552  0E67               	movlw	103
  3591  000554  19B2               	xorwf	efgtoa@mode& (0+255),w,b
  3592  000556  A4D8               	btfss	status,2,c
  3593  000558  EFB0  F002         	goto	u7921
  3594  00055C  EFB2  F002         	goto	u7920
  3595  000560                     u7921:
  3596  000560  EFC2  F002         	goto	l7550
  3597  000564                     u7920:
  3598  000564                     
  3599                           ; BSR set to: 0
  3600  000564  0E66               	movlw	102
  3601  000566  19B1               	xorwf	efgtoa@nmode& (0+255),w,b
  3602  000568  A4D8               	btfss	status,2,c
  3603  00056A  EFB9  F002         	goto	u7931
  3604  00056E  EFBB  F002         	goto	u7930
  3605  000572                     u7931:
  3606  000572  EFC4  F002         	goto	l7552
  3607  000576                     u7930:
  3608  000576                     
  3609                           ; BSR set to: 0
  3610  000576  BFC2               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3611  000578  EFC2  F002         	goto	u7940
  3612  00057C  EFC0  F002         	goto	u7941
  3613  000580                     u7941:
  3614  000580  EFC4  F002         	goto	l7552
  3615  000584                     u7940:
  3616  000584                     l7550:
  3617                           
  3618                           ; BSR set to: 0
  3619                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3620  000584  4BA3               	infsnz	efgtoa@m& (0+255),f,b
  3621  000586  2BA4               	incf	(efgtoa@m+1)& (0+255),f,b
  3622  000588                     l7552:
  3623                           
  3624                           ; BSR set to: 0
  3625                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3626  000588  0E66               	movlw	102
  3627  00058A  19B1               	xorwf	efgtoa@nmode& (0+255),w,b
  3628  00058C  A4D8               	btfss	status,2,c
  3629  00058E  EFCB  F002         	goto	u7951
  3630  000592  EFCD  F002         	goto	u7950
  3631  000596                     u7951:
  3632  000596  EFED  F002         	goto	l7562
  3633  00059A                     u7950:
  3634  00059A                     
  3635                           ; BSR set to: 0
  3636                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3637  00059A  BFC2               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3638  00059C  EFD4  F002         	goto	u7960
  3639  0005A0  EFD2  F002         	goto	u7961
  3640  0005A4                     u7961:
  3641  0005A4  EFE0  F002         	goto	l7558
  3642  0005A8                     u7960:
  3643  0005A8                     
  3644                           ; BSR set to: 0
  3645                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3646  0005A8  0E00               	movlw	0
  3647  0005AA  6FC5               	movwf	efgtoa@u& (0+255),b
  3648  0005AC  0E00               	movlw	0
  3649  0005AE  6FC6               	movwf	(efgtoa@u+1)& (0+255),b
  3650  0005B0  0E80               	movlw	128
  3651  0005B2  6FC7               	movwf	(efgtoa@u+2)& (0+255),b
  3652  0005B4  0E3F               	movlw	63
  3653  0005B6  6FC8               	movwf	(efgtoa@u+3)& (0+255),b
  3654                           
  3655                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3656  0005B8  0E00               	movlw	0
  3657  0005BA  6FC2               	movwf	(efgtoa@e+1)& (0+255),b
  3658  0005BC  0E00               	movlw	0
  3659  0005BE  6FC1               	movwf	efgtoa@e& (0+255),b
  3660  0005C0                     l7558:
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3664  0005C0  0E67               	movlw	103
  3665  0005C2  19B2               	xorwf	efgtoa@mode& (0+255),w,b
  3666  0005C4  B4D8               	btfsc	status,2,c
  3667  0005C6  EFE7  F002         	goto	u7971
  3668  0005CA  EFE9  F002         	goto	u7970
  3669  0005CE                     u7971:
  3670  0005CE  EFED  F002         	goto	l7562
  3671  0005D2                     u7970:
  3672  0005D2                     
  3673                           ; BSR set to: 0
  3674                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3675  0005D2  51C1               	movf	efgtoa@e& (0+255),w,b
  3676  0005D4  27A3               	addwf	efgtoa@m& (0+255),f,b
  3677  0005D6  51C2               	movf	(efgtoa@e+1)& (0+255),w,b
  3678  0005D8  23A4               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3679  0005DA                     l7562:
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3683  0005DA  0E00               	movlw	0
  3684  0005DC  6FBC               	movwf	(efgtoa@i+1)& (0+255),b
  3685  0005DE  0E00               	movlw	0
  3686  0005E0  6FBB               	movwf	efgtoa@i& (0+255),b
  3687  0005E2                     
  3688                           ; BSR set to: 0
  3689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3690  0005E2  C0BD  F0B3         	movff	efgtoa@g,efgtoa@h
  3691  0005E6  C0BE  F0B4         	movff	efgtoa@g+1,efgtoa@h+1
  3692  0005EA  C0BF  F0B5         	movff	efgtoa@g+2,efgtoa@h+2
  3693  0005EE  C0C0  F0B6         	movff	efgtoa@g+3,efgtoa@h+3
  3694  0005F2                     
  3695                           ; BSR set to: 0
  3696                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3697  0005F2  C0C5  F0A5         	movff	efgtoa@u,efgtoa@ou
  3698  0005F6  C0C6  F0A6         	movff	efgtoa@u+1,efgtoa@ou+1
  3699  0005FA  C0C7  F0A7         	movff	efgtoa@u+2,efgtoa@ou+2
  3700  0005FE  C0C8  F0A8         	movff	efgtoa@u+3,efgtoa@ou+3
  3701                           
  3702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3703  000602  EF7E  F003         	goto	l7576
  3704  000606                     l7568:
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3708  000606  C0B3  F01A         	movff	efgtoa@h,___fldiv@b
  3709  00060A  C0B4  F01B         	movff	efgtoa@h+1,___fldiv@b+1
  3710  00060E  C0B5  F01C         	movff	efgtoa@h+2,___fldiv@b+2
  3711  000612  C0B6  F01D         	movff	efgtoa@h+3,___fldiv@b+3
  3712  000616  C0C5  F01E         	movff	efgtoa@u,___fldiv@a
  3713  00061A  C0C6  F01F         	movff	efgtoa@u+1,___fldiv@a+1
  3714  00061E  C0C7  F020         	movff	efgtoa@u+2,___fldiv@a+2
  3715  000622  C0C8  F021         	movff	efgtoa@u+3,___fldiv@a+3
  3716  000626  EC4E  F00D         	call	___fldiv	;wreg free
  3717  00062A  C01A  F026         	movff	?___fldiv,floorf@x
  3718  00062E  C01B  F027         	movff	?___fldiv+1,floorf@x+1
  3719  000632  C01C  F028         	movff	?___fldiv+2,floorf@x+2
  3720  000636  C01D  F029         	movff	?___fldiv+3,floorf@x+3
  3721  00063A  EC1C  F00F         	call	_floorf	;wreg free
  3722  00063E  C026  F0B7         	movff	?_floorf,efgtoa@l
  3723  000642  C027  F0B8         	movff	?_floorf+1,efgtoa@l+1
  3724  000646  C028  F0B9         	movff	?_floorf+2,efgtoa@l+2
  3725  00064A  C029  F0BA         	movff	?_floorf+3,efgtoa@l+3
  3726                           
  3727                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3728  00064E  C0B7  F01A         	movff	efgtoa@l,___fltol@f1
  3729  000652  C0B8  F01B         	movff	efgtoa@l+1,___fltol@f1+1
  3730  000656  C0B9  F01C         	movff	efgtoa@l+2,___fltol@f1+2
  3731  00065A  C0BA  F01D         	movff	efgtoa@l+3,___fltol@f1+3
  3732  00065E  EC7D  F013         	call	___fltol	;wreg free
  3733  000662  C01A  F0A9         	movff	?___fltol,efgtoa@d
  3734  000666  C01B  F0AA         	movff	?___fltol+1,efgtoa@d+1
  3735  00066A                     
  3736                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3737  00066A  C0B3  F079         	movff	efgtoa@h,___flsub@b
  3738  00066E  C0B4  F07A         	movff	efgtoa@h+1,___flsub@b+1
  3739  000672  C0B5  F07B         	movff	efgtoa@h+2,___flsub@b+2
  3740  000676  C0B6  F07C         	movff	efgtoa@h+3,___flsub@b+3
  3741  00067A  C0C5  F064         	movff	efgtoa@u,___flmul@a
  3742  00067E  C0C6  F065         	movff	efgtoa@u+1,___flmul@a+1
  3743  000682  C0C7  F066         	movff	efgtoa@u+2,___flmul@a+2
  3744  000686  C0C8  F067         	movff	efgtoa@u+3,___flmul@a+3
  3745  00068A  C0B7  F060         	movff	efgtoa@l,___flmul@b
  3746  00068E  C0B8  F061         	movff	efgtoa@l+1,___flmul@b+1
  3747  000692  C0B9  F062         	movff	efgtoa@l+2,___flmul@b+2
  3748  000696  C0BA  F063         	movff	efgtoa@l+3,___flmul@b+3
  3749  00069A  EC38  F00B         	call	___flmul	;wreg free
  3750  00069E  C060  F07D         	movff	?___flmul,___flsub@a
  3751  0006A2  C061  F07E         	movff	?___flmul+1,___flsub@a+1
  3752  0006A6  C062  F07F         	movff	?___flmul+2,___flsub@a+2
  3753  0006AA  C063  F080         	movff	?___flmul+3,___flsub@a+3
  3754  0006AE  ECD5  F01A         	call	___flsub	;wreg free
  3755  0006B2  C079  F0B3         	movff	?___flsub,efgtoa@h
  3756  0006B6  C07A  F0B4         	movff	?___flsub+1,efgtoa@h+1
  3757  0006BA  C07B  F0B5         	movff	?___flsub+2,efgtoa@h+2
  3758  0006BE  C07C  F0B6         	movff	?___flsub+3,efgtoa@h+3
  3759  0006C2                     
  3760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3761  0006C2  C0C5  F01A         	movff	efgtoa@u,___fldiv@b
  3762  0006C6  C0C6  F01B         	movff	efgtoa@u+1,___fldiv@b+1
  3763  0006CA  C0C7  F01C         	movff	efgtoa@u+2,___fldiv@b+2
  3764  0006CE  C0C8  F01D         	movff	efgtoa@u+3,___fldiv@b+3
  3765  0006D2  0E00               	movlw	0
  3766  0006D4  6E1E               	movwf	___fldiv@a^0,c
  3767  0006D6  0E00               	movlw	0
  3768  0006D8  6E1F               	movwf	(___fldiv@a+1)^0,c
  3769  0006DA  0E20               	movlw	32
  3770  0006DC  6E20               	movwf	(___fldiv@a+2)^0,c
  3771  0006DE  0E41               	movlw	65
  3772  0006E0  6E21               	movwf	(___fldiv@a+3)^0,c
  3773  0006E2  EC4E  F00D         	call	___fldiv	;wreg free
  3774  0006E6  C01A  F0C5         	movff	?___fldiv,efgtoa@u
  3775  0006EA  C01B  F0C6         	movff	?___fldiv+1,efgtoa@u+1
  3776  0006EE  C01C  F0C7         	movff	?___fldiv+2,efgtoa@u+2
  3777  0006F2  C01D  F0C8         	movff	?___fldiv+3,efgtoa@u+3
  3778  0006F6                     
  3779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3780  0006F6  0100               	movlb	0	; () banked
  3781  0006F8  4BBB               	infsnz	efgtoa@i& (0+255),f,b
  3782  0006FA  2BBC               	incf	(efgtoa@i+1)& (0+255),f,b
  3783  0006FC                     l7576:
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3787  0006FC  51A3               	movf	efgtoa@m& (0+255),w,b
  3788  0006FE  5DBB               	subwf	efgtoa@i& (0+255),w,b
  3789  000700  51BC               	movf	(efgtoa@i+1)& (0+255),w,b
  3790  000702  0A80               	xorlw	128
  3791  000704  6F8C               	movwf	??_efgtoa& (0+255),b
  3792  000706  51A4               	movf	(efgtoa@m+1)& (0+255),w,b
  3793  000708  0A80               	xorlw	128
  3794  00070A  598C               	subwfb	??_efgtoa& (0+255),w,b
  3795  00070C  A0D8               	btfss	status,0,c
  3796  00070E  EF8B  F003         	goto	u7981
  3797  000712  EF8D  F003         	goto	u7980
  3798  000716                     u7981:
  3799  000716  EF03  F003         	goto	l7568
  3800  00071A                     u7980:
  3801  00071A                     
  3802                           ; BSR set to: 0
  3803                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3804  00071A  C0C5  F060         	movff	efgtoa@u,___flmul@b
  3805  00071E  C0C6  F061         	movff	efgtoa@u+1,___flmul@b+1
  3806  000722  C0C7  F062         	movff	efgtoa@u+2,___flmul@b+2
  3807  000726  C0C8  F063         	movff	efgtoa@u+3,___flmul@b+3
  3808  00072A  0E00               	movlw	0
  3809  00072C  6F64               	movwf	___flmul@a& (0+255),b
  3810  00072E  0E00               	movlw	0
  3811  000730  6F65               	movwf	(___flmul@a+1)& (0+255),b
  3812  000732  0EA0               	movlw	160
  3813  000734  6F66               	movwf	(___flmul@a+2)& (0+255),b
  3814  000736  0E40               	movlw	64
  3815  000738  6F67               	movwf	(___flmul@a+3)& (0+255),b
  3816  00073A  EC38  F00B         	call	___flmul	;wreg free
  3817  00073E  C060  F0B7         	movff	?___flmul,efgtoa@l
  3818  000742  C061  F0B8         	movff	?___flmul+1,efgtoa@l+1
  3819  000746  C062  F0B9         	movff	?___flmul+2,efgtoa@l+2
  3820  00074A  C063  F0BA         	movff	?___flmul+3,efgtoa@l+3
  3821  00074E                     
  3822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3823  00074E  C0B3  F079         	movff	efgtoa@h,___flge@ff1
  3824  000752  C0B4  F07A         	movff	efgtoa@h+1,___flge@ff1+1
  3825  000756  C0B5  F07B         	movff	efgtoa@h+2,___flge@ff1+2
  3826  00075A  C0B6  F07C         	movff	efgtoa@h+3,___flge@ff1+3
  3827  00075E  C0B7  F07D         	movff	efgtoa@l,___flge@ff2
  3828  000762  C0B8  F07E         	movff	efgtoa@l+1,___flge@ff2+1
  3829  000766  C0B9  F07F         	movff	efgtoa@l+2,___flge@ff2+2
  3830  00076A  C0BA  F080         	movff	efgtoa@l+3,___flge@ff2+3
  3831  00076E  EC00  F014         	call	___flge	;wreg free
  3832  000772  0100               	movlb	0	; () banked
  3833  000774  B0D8               	btfsc	status,0,c
  3834  000776  EFBF  F003         	goto	u7991
  3835  00077A  EFC1  F003         	goto	u7990
  3836  00077E                     u7991:
  3837  00077E  EFCB  F003         	goto	l7584
  3838  000782                     u7990:
  3839  000782                     
  3840                           ; BSR set to: 0
  3841                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3842  000782  0E00               	movlw	0
  3843  000784  6FB7               	movwf	efgtoa@l& (0+255),b
  3844  000786  0E00               	movlw	0
  3845  000788  6FB8               	movwf	(efgtoa@l+1)& (0+255),b
  3846  00078A  0E00               	movlw	0
  3847  00078C  6FB9               	movwf	(efgtoa@l+2)& (0+255),b
  3848  00078E  0E00               	movlw	0
  3849  000790  6FBA               	movwf	(efgtoa@l+3)& (0+255),b
  3850                           
  3851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 443:     } else {
  3852  000792  EFF4  F003         	goto	l7590
  3853  000796                     l7584:
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3857  000796  C0B3  F01A         	movff	efgtoa@h,___fleq@ff1
  3858  00079A  C0B4  F01B         	movff	efgtoa@h+1,___fleq@ff1+1
  3859  00079E  C0B5  F01C         	movff	efgtoa@h+2,___fleq@ff1+2
  3860  0007A2  C0B6  F01D         	movff	efgtoa@h+3,___fleq@ff1+3
  3861  0007A6  C0B7  F01E         	movff	efgtoa@l,___fleq@ff2
  3862  0007AA  C0B8  F01F         	movff	efgtoa@l+1,___fleq@ff2+1
  3863  0007AE  C0B9  F020         	movff	efgtoa@l+2,___fleq@ff2+2
  3864  0007B2  C0BA  F021         	movff	efgtoa@l+3,___fleq@ff2+3
  3865  0007B6  ECBC  F017         	call	___fleq	;wreg free
  3866  0007BA  A0D8               	btfss	status,0,c
  3867  0007BC  EFE2  F003         	goto	u8001
  3868  0007C0  EFE4  F003         	goto	u8000
  3869  0007C4                     u8001:
  3870  0007C4  EFF4  F003         	goto	l7590
  3871  0007C8                     u8000:
  3872  0007C8  0100               	movlb	0	; () banked
  3873  0007CA  B1A9               	btfsc	efgtoa@d& (0+255),0,b
  3874  0007CC  EFEA  F003         	goto	u8011
  3875  0007D0  EFEC  F003         	goto	u8010
  3876  0007D4                     u8011:
  3877  0007D4  EFF4  F003         	goto	l7590
  3878  0007D8                     u8010:
  3879  0007D8                     
  3880                           ; BSR set to: 0
  3881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3882  0007D8  0E00               	movlw	0
  3883  0007DA  6FB7               	movwf	efgtoa@l& (0+255),b
  3884  0007DC  0E00               	movlw	0
  3885  0007DE  6FB8               	movwf	(efgtoa@l+1)& (0+255),b
  3886  0007E0  0E00               	movlw	0
  3887  0007E2  6FB9               	movwf	(efgtoa@l+2)& (0+255),b
  3888  0007E4  0E00               	movlw	0
  3889  0007E6  6FBA               	movwf	(efgtoa@l+3)& (0+255),b
  3890  0007E8                     l7590:
  3891                           
  3892                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3893  0007E8  C0BD  F01A         	movff	efgtoa@g,___fladd@b
  3894  0007EC  C0BE  F01B         	movff	efgtoa@g+1,___fladd@b+1
  3895  0007F0  C0BF  F01C         	movff	efgtoa@g+2,___fladd@b+2
  3896  0007F4  C0C0  F01D         	movff	efgtoa@g+3,___fladd@b+3
  3897  0007F8  C0B7  F01E         	movff	efgtoa@l,___fladd@a
  3898  0007FC  C0B8  F01F         	movff	efgtoa@l+1,___fladd@a+1
  3899  000800  C0B9  F020         	movff	efgtoa@l+2,___fladd@a+2
  3900  000804  C0BA  F021         	movff	efgtoa@l+3,___fladd@a+3
  3901  000808  EC95  F006         	call	___fladd	;wreg free
  3902  00080C  C01A  F0B3         	movff	?___fladd,efgtoa@h
  3903  000810  C01B  F0B4         	movff	?___fladd+1,efgtoa@h+1
  3904  000814  C01C  F0B5         	movff	?___fladd+2,efgtoa@h+2
  3905  000818  C01D  F0B6         	movff	?___fladd+3,efgtoa@h+3
  3906  00081C                     
  3907                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3908  00081C  C0B3  F079         	movff	efgtoa@h,___flge@ff1
  3909  000820  C0B4  F07A         	movff	efgtoa@h+1,___flge@ff1+1
  3910  000824  C0B5  F07B         	movff	efgtoa@h+2,___flge@ff1+2
  3911  000828  C0B6  F07C         	movff	efgtoa@h+3,___flge@ff1+3
  3912  00082C  0E00               	movlw	0
  3913  00082E  0100               	movlb	0	; () banked
  3914  000830  6F64               	movwf	___flmul@a& (0+255),b
  3915  000832  0E00               	movlw	0
  3916  000834  6F65               	movwf	(___flmul@a+1)& (0+255),b
  3917  000836  0E20               	movlw	32
  3918  000838  6F66               	movwf	(___flmul@a+2)& (0+255),b
  3919  00083A  0E41               	movlw	65
  3920  00083C  6F67               	movwf	(___flmul@a+3)& (0+255),b
  3921  00083E  C0A5  F060         	movff	efgtoa@ou,___flmul@b
  3922  000842  C0A6  F061         	movff	efgtoa@ou+1,___flmul@b+1
  3923  000846  C0A7  F062         	movff	efgtoa@ou+2,___flmul@b+2
  3924  00084A  C0A8  F063         	movff	efgtoa@ou+3,___flmul@b+3
  3925  00084E  EC38  F00B         	call	___flmul	;wreg free
  3926  000852  C060  F07D         	movff	?___flmul,___flge@ff2
  3927  000856  C061  F07E         	movff	?___flmul+1,___flge@ff2+1
  3928  00085A  C062  F07F         	movff	?___flmul+2,___flge@ff2+2
  3929  00085E  C063  F080         	movff	?___flmul+3,___flge@ff2+3
  3930  000862  EC00  F014         	call	___flge	;wreg free
  3931  000866  0100               	movlb	0	; () banked
  3932  000868  A0D8               	btfss	status,0,c
  3933  00086A  EF39  F004         	goto	u8021
  3934  00086E  EF3B  F004         	goto	u8020
  3935  000872                     u8021:
  3936  000872  EF63  F004         	goto	l7602
  3937  000876                     u8020:
  3938  000876                     
  3939                           ; BSR set to: 0
  3940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 454:   e++;
  3941  000876  4BC1               	infsnz	efgtoa@e& (0+255),f,b
  3942  000878  2BC2               	incf	(efgtoa@e+1)& (0+255),f,b
  3943  00087A                     
  3944                           ; BSR set to: 0
  3945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3946  00087A  C0A5  F060         	movff	efgtoa@ou,___flmul@b
  3947  00087E  C0A6  F061         	movff	efgtoa@ou+1,___flmul@b+1
  3948  000882  C0A7  F062         	movff	efgtoa@ou+2,___flmul@b+2
  3949  000886  C0A8  F063         	movff	efgtoa@ou+3,___flmul@b+3
  3950  00088A  0E00               	movlw	0
  3951  00088C  6F64               	movwf	___flmul@a& (0+255),b
  3952  00088E  0E00               	movlw	0
  3953  000890  6F65               	movwf	(___flmul@a+1)& (0+255),b
  3954  000892  0E20               	movlw	32
  3955  000894  6F66               	movwf	(___flmul@a+2)& (0+255),b
  3956  000896  0E41               	movlw	65
  3957  000898  6F67               	movwf	(___flmul@a+3)& (0+255),b
  3958  00089A  EC38  F00B         	call	___flmul	;wreg free
  3959  00089E  C060  F0A5         	movff	?___flmul,efgtoa@ou
  3960  0008A2  C061  F0A6         	movff	?___flmul+1,efgtoa@ou+1
  3961  0008A6  C062  F0A7         	movff	?___flmul+2,efgtoa@ou+2
  3962  0008AA  C063  F0A8         	movff	?___flmul+3,efgtoa@ou+3
  3963  0008AE                     
  3964                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3965  0008AE  0E66               	movlw	102
  3966  0008B0  0100               	movlb	0	; () banked
  3967  0008B2  19B1               	xorwf	efgtoa@nmode& (0+255),w,b
  3968  0008B4  A4D8               	btfss	status,2,c
  3969  0008B6  EF5F  F004         	goto	u8031
  3970  0008BA  EF61  F004         	goto	u8030
  3971  0008BE                     u8031:
  3972  0008BE  EF63  F004         	goto	l7602
  3973  0008C2                     u8030:
  3974  0008C2                     
  3975                           ; BSR set to: 0
  3976                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 458:    m++;
  3977  0008C2  4BA3               	infsnz	efgtoa@m& (0+255),f,b
  3978  0008C4  2BA4               	incf	(efgtoa@m+1)& (0+255),f,b
  3979  0008C6                     l7602:
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3983  0008C6  C0A5  F0C5         	movff	efgtoa@ou,efgtoa@u
  3984  0008CA  C0A6  F0C6         	movff	efgtoa@ou+1,efgtoa@u+1
  3985  0008CE  C0A7  F0C7         	movff	efgtoa@ou+2,efgtoa@u+2
  3986  0008D2  C0A8  F0C8         	movff	efgtoa@ou+3,efgtoa@u+3
  3987  0008D6                     
  3988                           ; BSR set to: 0
  3989                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3990  0008D6  0E65               	movlw	101
  3991  0008D8  19B1               	xorwf	efgtoa@nmode& (0+255),w,b
  3992  0008DA  B4D8               	btfsc	status,2,c
  3993  0008DC  EF72  F004         	goto	u8041
  3994  0008E0  EF74  F004         	goto	u8040
  3995  0008E4                     u8041:
  3996  0008E4  EF7A  F004         	goto	l7608
  3997  0008E8                     u8040:
  3998  0008E8                     
  3999                           ; BSR set to: 0
  4000  0008E8  C0C1  F0A1         	movff	efgtoa@e,efgtoa@ne
  4001  0008EC  C0C2  F0A2         	movff	efgtoa@e+1,efgtoa@ne+1
  4002  0008F0  EF7E  F004         	goto	l1597
  4003  0008F4                     l7608:
  4004                           
  4005                           ; BSR set to: 0
  4006  0008F4  0E00               	movlw	0
  4007  0008F6  6FA2               	movwf	(efgtoa@ne+1)& (0+255),b
  4008  0008F8  0E00               	movlw	0
  4009  0008FA  6FA1               	movwf	efgtoa@ne& (0+255),b
  4010  0008FC                     l1597:
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  4014  0008FC  0E00               	movlw	0
  4015  0008FE  6FA0               	movwf	(efgtoa@pp+1)& (0+255),b
  4016  000900  0E00               	movlw	0
  4017  000902  6F9F               	movwf	efgtoa@pp& (0+255),b
  4018                           
  4019                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  4020  000904  0E00               	movlw	0
  4021  000906  6F9E               	movwf	(efgtoa@t+1)& (0+255),b
  4022  000908  0E00               	movlw	0
  4023  00090A  6F9D               	movwf	efgtoa@t& (0+255),b
  4024                           
  4025                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4026  00090C  0E00               	movlw	0
  4027  00090E  6FBC               	movwf	(efgtoa@i+1)& (0+255),b
  4028  000910  0E00               	movlw	0
  4029  000912  6FBB               	movwf	efgtoa@i& (0+255),b
  4030                           
  4031                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4032  000914  EF7A  F005         	goto	l7658
  4033  000918                     l7610:
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4037  000918  C0B3  F01A         	movff	efgtoa@h,___fldiv@b
  4038  00091C  C0B4  F01B         	movff	efgtoa@h+1,___fldiv@b+1
  4039  000920  C0B5  F01C         	movff	efgtoa@h+2,___fldiv@b+2
  4040  000924  C0B6  F01D         	movff	efgtoa@h+3,___fldiv@b+3
  4041  000928  C0C5  F01E         	movff	efgtoa@u,___fldiv@a
  4042  00092C  C0C6  F01F         	movff	efgtoa@u+1,___fldiv@a+1
  4043  000930  C0C7  F020         	movff	efgtoa@u+2,___fldiv@a+2
  4044  000934  C0C8  F021         	movff	efgtoa@u+3,___fldiv@a+3
  4045  000938  EC4E  F00D         	call	___fldiv	;wreg free
  4046  00093C  C01A  F026         	movff	?___fldiv,floorf@x
  4047  000940  C01B  F027         	movff	?___fldiv+1,floorf@x+1
  4048  000944  C01C  F028         	movff	?___fldiv+2,floorf@x+2
  4049  000948  C01D  F029         	movff	?___fldiv+3,floorf@x+3
  4050  00094C  EC1C  F00F         	call	_floorf	;wreg free
  4051  000950  C026  F0B7         	movff	?_floorf,efgtoa@l
  4052  000954  C027  F0B8         	movff	?_floorf+1,efgtoa@l+1
  4053  000958  C028  F0B9         	movff	?_floorf+2,efgtoa@l+2
  4054  00095C  C029  F0BA         	movff	?_floorf+3,efgtoa@l+3
  4055                           
  4056                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  4057  000960  C0B7  F01A         	movff	efgtoa@l,___fltol@f1
  4058  000964  C0B8  F01B         	movff	efgtoa@l+1,___fltol@f1+1
  4059  000968  C0B9  F01C         	movff	efgtoa@l+2,___fltol@f1+2
  4060  00096C  C0BA  F01D         	movff	efgtoa@l+3,___fltol@f1+3
  4061  000970  EC7D  F013         	call	___fltol	;wreg free
  4062  000974  C01A  F0A9         	movff	?___fltol,efgtoa@d
  4063  000978  C01B  F0AA         	movff	?___fltol+1,efgtoa@d+1
  4064  00097C                     
  4065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4066  00097C  B842               	btfsc	_flags^0,4,c
  4067  00097E  EFC3  F004         	goto	u8051
  4068  000982  EFC5  F004         	goto	u8050
  4069  000986                     u8051:
  4070  000986  EFE3  F004         	goto	l7622
  4071  00098A                     u8050:
  4072  00098A  0100               	movlb	0	; () banked
  4073  00098C  51A9               	movf	efgtoa@d& (0+255),w,b
  4074  00098E  11AA               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4075  000990  A4D8               	btfss	status,2,c
  4076  000992  EFCD  F004         	goto	u8061
  4077  000996  EFCF  F004         	goto	u8060
  4078  00099A                     u8061:
  4079  00099A  EFE3  F004         	goto	l7622
  4080  00099E                     u8060:
  4081  00099E                     
  4082                           ; BSR set to: 0
  4083  00099E  0E67               	movlw	103
  4084  0009A0  19B2               	xorwf	efgtoa@mode& (0+255),w,b
  4085  0009A2  A4D8               	btfss	status,2,c
  4086  0009A4  EFD6  F004         	goto	u8071
  4087  0009A8  EFD8  F004         	goto	u8070
  4088  0009AC                     u8071:
  4089  0009AC  EFE3  F004         	goto	l7622
  4090  0009B0                     u8070:
  4091  0009B0                     
  4092                           ; BSR set to: 0
  4093  0009B0  BFA2               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4094  0009B2  EFDF  F004         	goto	u8080
  4095  0009B6  EFDD  F004         	goto	u8081
  4096  0009BA                     u8081:
  4097  0009BA  EFE3  F004         	goto	l7622
  4098  0009BE                     u8080:
  4099  0009BE                     
  4100                           ; BSR set to: 0
  4101                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  4102  0009BE  4B9D               	infsnz	efgtoa@t& (0+255),f,b
  4103  0009C0  2B9E               	incf	(efgtoa@t+1)& (0+255),f,b
  4104                           
  4105                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  4106  0009C2  EF2E  F005         	goto	l7650
  4107  0009C6                     l7622:
  4108                           
  4109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  4110  0009C6  0100               	movlb	0	; () banked
  4111  0009C8  519F               	movf	efgtoa@pp& (0+255),w,b
  4112  0009CA  11A0               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4113  0009CC  A4D8               	btfss	status,2,c
  4114  0009CE  EFEB  F004         	goto	u8091
  4115  0009D2  EFED  F004         	goto	u8090
  4116  0009D6                     u8091:
  4117  0009D6  EF17  F005         	goto	l7642
  4118  0009DA                     u8090:
  4119  0009DA                     
  4120                           ; BSR set to: 0
  4121  0009DA  BFA2               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4122  0009DC  EFF4  F004         	goto	u8100
  4123  0009E0  EFF2  F004         	goto	u8101
  4124  0009E4                     u8101:
  4125  0009E4  EF17  F005         	goto	l7642
  4126  0009E8                     u8100:
  4127  0009E8                     
  4128                           ; BSR set to: 0
  4129                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  4130  0009E8  0E74               	movlw	low _dbuf
  4131  0009EA  25C3               	addwf	efgtoa@n& (0+255),w,b
  4132  0009EC  6ED9               	movwf	fsr2l,c
  4133  0009EE  0E01               	movlw	high _dbuf
  4134  0009F0  21C4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4135  0009F2  6EDA               	movwf	fsr2h,c
  4136  0009F4  0E2E               	movlw	46
  4137  0009F6  6EDF               	movwf	indf2,c
  4138  0009F8                     
  4139                           ; BSR set to: 0
  4140  0009F8  4BC3               	infsnz	efgtoa@n& (0+255),f,b
  4141  0009FA  2BC4               	incf	(efgtoa@n+1)& (0+255),f,b
  4142  0009FC                     
  4143                           ; BSR set to: 0
  4144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  4145  0009FC  07AF               	decf	efgtoa@w& (0+255),f,b
  4146  0009FE  A0D8               	btfss	status,0,c
  4147  000A00  07B0               	decf	(efgtoa@w+1)& (0+255),f,b
  4148  000A02                     
  4149                           ; BSR set to: 0
  4150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  4151  000A02  0E00               	movlw	0
  4152  000A04  6FA0               	movwf	(efgtoa@pp+1)& (0+255),b
  4153  000A06  0E01               	movlw	1
  4154  000A08  6F9F               	movwf	efgtoa@pp& (0+255),b
  4155  000A0A  EF17  F005         	goto	l7642
  4156  000A0E                     l7634:
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  4160  000A0E  0E74               	movlw	low _dbuf
  4161  000A10  25C3               	addwf	efgtoa@n& (0+255),w,b
  4162  000A12  6ED9               	movwf	fsr2l,c
  4163  000A14  0E01               	movlw	high _dbuf
  4164  000A16  21C4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4165  000A18  6EDA               	movwf	fsr2h,c
  4166  000A1A  0E30               	movlw	48
  4167  000A1C  6EDF               	movwf	indf2,c
  4168  000A1E                     
  4169                           ; BSR set to: 0
  4170  000A1E  4BC3               	infsnz	efgtoa@n& (0+255),f,b
  4171  000A20  2BC4               	incf	(efgtoa@n+1)& (0+255),f,b
  4172  000A22                     
  4173                           ; BSR set to: 0
  4174                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  4175  000A22  07AF               	decf	efgtoa@w& (0+255),f,b
  4176  000A24  A0D8               	btfss	status,0,c
  4177  000A26  07B0               	decf	(efgtoa@w+1)& (0+255),f,b
  4178  000A28                     
  4179                           ; BSR set to: 0
  4180                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  4181  000A28  079D               	decf	efgtoa@t& (0+255),f,b
  4182  000A2A  A0D8               	btfss	status,0,c
  4183  000A2C  079E               	decf	(efgtoa@t+1)& (0+255),f,b
  4184  000A2E                     l7642:
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  4188  000A2E  519D               	movf	efgtoa@t& (0+255),w,b
  4189  000A30  119E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4190  000A32  A4D8               	btfss	status,2,c
  4191  000A34  EF1E  F005         	goto	u8111
  4192  000A38  EF20  F005         	goto	u8110
  4193  000A3C                     u8111:
  4194  000A3C  EF07  F005         	goto	l7634
  4195  000A40                     u8110:
  4196  000A40                     
  4197                           ; BSR set to: 0
  4198                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4199  000A40  0E74               	movlw	low _dbuf
  4200  000A42  25C3               	addwf	efgtoa@n& (0+255),w,b
  4201  000A44  6ED9               	movwf	fsr2l,c
  4202  000A46  0E01               	movlw	high _dbuf
  4203  000A48  21C4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4204  000A4A  6EDA               	movwf	fsr2h,c
  4205  000A4C  51A9               	movf	efgtoa@d& (0+255),w,b
  4206  000A4E  0F30               	addlw	48
  4207  000A50  6EDF               	movwf	indf2,c
  4208  000A52                     
  4209                           ; BSR set to: 0
  4210  000A52  4BC3               	infsnz	efgtoa@n& (0+255),f,b
  4211  000A54  2BC4               	incf	(efgtoa@n+1)& (0+255),f,b
  4212  000A56                     
  4213                           ; BSR set to: 0
  4214                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4215  000A56  07AF               	decf	efgtoa@w& (0+255),f,b
  4216  000A58  A0D8               	btfss	status,0,c
  4217  000A5A  07B0               	decf	(efgtoa@w+1)& (0+255),f,b
  4218  000A5C                     l7650:
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4222  000A5C  C0B3  F079         	movff	efgtoa@h,___flsub@b
  4223  000A60  C0B4  F07A         	movff	efgtoa@h+1,___flsub@b+1
  4224  000A64  C0B5  F07B         	movff	efgtoa@h+2,___flsub@b+2
  4225  000A68  C0B6  F07C         	movff	efgtoa@h+3,___flsub@b+3
  4226  000A6C  C0C5  F064         	movff	efgtoa@u,___flmul@a
  4227  000A70  C0C6  F065         	movff	efgtoa@u+1,___flmul@a+1
  4228  000A74  C0C7  F066         	movff	efgtoa@u+2,___flmul@a+2
  4229  000A78  C0C8  F067         	movff	efgtoa@u+3,___flmul@a+3
  4230  000A7C  C0B7  F060         	movff	efgtoa@l,___flmul@b
  4231  000A80  C0B8  F061         	movff	efgtoa@l+1,___flmul@b+1
  4232  000A84  C0B9  F062         	movff	efgtoa@l+2,___flmul@b+2
  4233  000A88  C0BA  F063         	movff	efgtoa@l+3,___flmul@b+3
  4234  000A8C  EC38  F00B         	call	___flmul	;wreg free
  4235  000A90  C060  F07D         	movff	?___flmul,___flsub@a
  4236  000A94  C061  F07E         	movff	?___flmul+1,___flsub@a+1
  4237  000A98  C062  F07F         	movff	?___flmul+2,___flsub@a+2
  4238  000A9C  C063  F080         	movff	?___flmul+3,___flsub@a+3
  4239  000AA0  ECD5  F01A         	call	___flsub	;wreg free
  4240  000AA4  C079  F0B3         	movff	?___flsub,efgtoa@h
  4241  000AA8  C07A  F0B4         	movff	?___flsub+1,efgtoa@h+1
  4242  000AAC  C07B  F0B5         	movff	?___flsub+2,efgtoa@h+2
  4243  000AB0  C07C  F0B6         	movff	?___flsub+3,efgtoa@h+3
  4244  000AB4                     
  4245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4246  000AB4  C0C5  F01A         	movff	efgtoa@u,___fldiv@b
  4247  000AB8  C0C6  F01B         	movff	efgtoa@u+1,___fldiv@b+1
  4248  000ABC  C0C7  F01C         	movff	efgtoa@u+2,___fldiv@b+2
  4249  000AC0  C0C8  F01D         	movff	efgtoa@u+3,___fldiv@b+3
  4250  000AC4  0E00               	movlw	0
  4251  000AC6  6E1E               	movwf	___fldiv@a^0,c
  4252  000AC8  0E00               	movlw	0
  4253  000ACA  6E1F               	movwf	(___fldiv@a+1)^0,c
  4254  000ACC  0E20               	movlw	32
  4255  000ACE  6E20               	movwf	(___fldiv@a+2)^0,c
  4256  000AD0  0E41               	movlw	65
  4257  000AD2  6E21               	movwf	(___fldiv@a+3)^0,c
  4258  000AD4  EC4E  F00D         	call	___fldiv	;wreg free
  4259  000AD8  C01A  F0C5         	movff	?___fldiv,efgtoa@u
  4260  000ADC  C01B  F0C6         	movff	?___fldiv+1,efgtoa@u+1
  4261  000AE0  C01C  F0C7         	movff	?___fldiv+2,efgtoa@u+2
  4262  000AE4  C01D  F0C8         	movff	?___fldiv+3,efgtoa@u+3
  4263  000AE8                     
  4264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4265  000AE8  0100               	movlb	0	; () banked
  4266  000AEA  07A1               	decf	efgtoa@ne& (0+255),f,b
  4267  000AEC  A0D8               	btfss	status,0,c
  4268  000AEE  07A2               	decf	(efgtoa@ne+1)& (0+255),f,b
  4269  000AF0                     
  4270                           ; BSR set to: 0
  4271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4272  000AF0  4BBB               	infsnz	efgtoa@i& (0+255),f,b
  4273  000AF2  2BBC               	incf	(efgtoa@i+1)& (0+255),f,b
  4274  000AF4                     l7658:
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4278  000AF4  51A3               	movf	efgtoa@m& (0+255),w,b
  4279  000AF6  5DBB               	subwf	efgtoa@i& (0+255),w,b
  4280  000AF8  51BC               	movf	(efgtoa@i+1)& (0+255),w,b
  4281  000AFA  0A80               	xorlw	128
  4282  000AFC  6F8C               	movwf	??_efgtoa& (0+255),b
  4283  000AFE  51A4               	movf	(efgtoa@m+1)& (0+255),w,b
  4284  000B00  0A80               	xorlw	128
  4285  000B02  598C               	subwfb	??_efgtoa& (0+255),w,b
  4286  000B04  B0D8               	btfsc	status,0,c
  4287  000B06  EF87  F005         	goto	u8121
  4288  000B0A  EF89  F005         	goto	u8120
  4289  000B0E                     u8121:
  4290  000B0E  EF97  F005         	goto	l7662
  4291  000B12                     u8120:
  4292  000B12                     
  4293                           ; BSR set to: 0
  4294  000B12  BFC4               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4295  000B14  EF95  F005         	goto	u8131
  4296  000B18  51C4               	movf	(efgtoa@n+1)& (0+255),w,b
  4297  000B1A  E109               	bnz	u8130
  4298  000B1C  0E4B               	movlw	75
  4299  000B1E  5DC3               	subwf	efgtoa@n& (0+255),w,b
  4300  000B20  A0D8               	btfss	status,0,c
  4301  000B22  EF95  F005         	goto	u8131
  4302  000B26  EF97  F005         	goto	u8130
  4303  000B2A                     u8131:
  4304  000B2A  EF8C  F004         	goto	l7610
  4305  000B2E                     u8130:
  4306  000B2E                     l7662:
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4310  000B2E  519F               	movf	efgtoa@pp& (0+255),w,b
  4311  000B30  11A0               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4312  000B32  A4D8               	btfss	status,2,c
  4313  000B34  EF9E  F005         	goto	u8141
  4314  000B38  EFA0  F005         	goto	u8140
  4315  000B3C                     u8141:
  4316  000B3C  EFB1  F005         	goto	l7670
  4317  000B40                     u8140:
  4318  000B40                     
  4319                           ; BSR set to: 0
  4320  000B40  A842               	btfss	_flags^0,4,c
  4321  000B42  EFA5  F005         	goto	u8151
  4322  000B46  EFA7  F005         	goto	u8150
  4323  000B4A                     u8151:
  4324  000B4A  EFB1  F005         	goto	l7670
  4325  000B4E                     u8150:
  4326  000B4E                     
  4327                           ; BSR set to: 0
  4328                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4329  000B4E  0E74               	movlw	low _dbuf
  4330  000B50  25C3               	addwf	efgtoa@n& (0+255),w,b
  4331  000B52  6ED9               	movwf	fsr2l,c
  4332  000B54  0E01               	movlw	high _dbuf
  4333  000B56  21C4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4334  000B58  6EDA               	movwf	fsr2h,c
  4335  000B5A  0E2E               	movlw	46
  4336  000B5C  6EDF               	movwf	indf2,c
  4337  000B5E                     
  4338                           ; BSR set to: 0
  4339  000B5E  4BC3               	infsnz	efgtoa@n& (0+255),f,b
  4340  000B60  2BC4               	incf	(efgtoa@n+1)& (0+255),f,b
  4341  000B62                     l7670:
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4345  000B62  0E74               	movlw	low _dbuf
  4346  000B64  25C3               	addwf	efgtoa@n& (0+255),w,b
  4347  000B66  6ED9               	movwf	fsr2l,c
  4348  000B68  0E01               	movlw	high _dbuf
  4349  000B6A  21C4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4350  000B6C  6EDA               	movwf	fsr2h,c
  4351  000B6E  0E00               	movlw	0
  4352  000B70  6EDF               	movwf	indf2,c
  4353  000B72                     
  4354                           ; BSR set to: 0
  4355                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4356  000B72  0E65               	movlw	101
  4357  000B74  19B1               	xorwf	efgtoa@nmode& (0+255),w,b
  4358  000B76  A4D8               	btfss	status,2,c
  4359  000B78  EFC0  F005         	goto	u8161
  4360  000B7C  EFC2  F005         	goto	u8160
  4361  000B80                     u8161:
  4362  000B80  EF17  F001         	goto	l7472
  4363  000B84                     u8160:
  4364  000B84                     
  4365                           ; BSR set to: 0
  4366                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4367  000B84  0E00               	movlw	0
  4368  000B86  6FBC               	movwf	(efgtoa@i+1)& (0+255),b
  4369  000B88  0E4F               	movlw	79
  4370  000B8A  6FBB               	movwf	efgtoa@i& (0+255),b
  4371  000B8C                     
  4372                           ; BSR set to: 0
  4373                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4374  000B8C  0E74               	movlw	low _dbuf
  4375  000B8E  25BB               	addwf	efgtoa@i& (0+255),w,b
  4376  000B90  6ED9               	movwf	fsr2l,c
  4377  000B92  0E01               	movlw	high _dbuf
  4378  000B94  21BC               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4379  000B96  6EDA               	movwf	fsr2h,c
  4380  000B98  0E00               	movlw	0
  4381  000B9A  6EDF               	movwf	indf2,c
  4382  000B9C                     
  4383                           ; BSR set to: 0
  4384                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4385  000B9C  0E00               	movlw	0
  4386  000B9E  6FAC               	movwf	(efgtoa@sign+1)& (0+255),b
  4387  000BA0  0E00               	movlw	0
  4388  000BA2  6FAB               	movwf	efgtoa@sign& (0+255),b
  4389  000BA4                     
  4390                           ; BSR set to: 0
  4391                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4392  000BA4  BFC2               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4393  000BA6  EFD9  F005         	goto	u8170
  4394  000BAA  EFD7  F005         	goto	u8171
  4395  000BAE                     u8171:
  4396  000BAE  EFE1  F005         	goto	l7686
  4397  000BB2                     u8170:
  4398  000BB2                     
  4399                           ; BSR set to: 0
  4400                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4401  000BB2  0E00               	movlw	0
  4402  000BB4  6FAC               	movwf	(efgtoa@sign+1)& (0+255),b
  4403  000BB6  0E01               	movlw	1
  4404  000BB8  6FAB               	movwf	efgtoa@sign& (0+255),b
  4405  000BBA                     
  4406                           ; BSR set to: 0
  4407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4408  000BBA  6DC1               	negf	efgtoa@e& (0+255),b
  4409  000BBC  1FC2               	comf	(efgtoa@e+1)& (0+255),f,b
  4410  000BBE  B0D8               	btfsc	status,0,c
  4411  000BC0  2BC2               	incf	(efgtoa@e+1)& (0+255),f,b
  4412  000BC2                     l7686:
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4416  000BC2  0E00               	movlw	0
  4417  000BC4  6FAE               	movwf	(efgtoa@p+1)& (0+255),b
  4418  000BC6  0E02               	movlw	2
  4419  000BC8  6FAD               	movwf	efgtoa@p& (0+255),b
  4420                           
  4421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4422  000BCA  EF12  F006         	goto	l7698
  4423  000BCE                     l7688:
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4427  000BCE  07BB               	decf	efgtoa@i& (0+255),f,b
  4428  000BD0  A0D8               	btfss	status,0,c
  4429  000BD2  07BC               	decf	(efgtoa@i+1)& (0+255),f,b
  4430  000BD4                     
  4431                           ; BSR set to: 0
  4432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4433  000BD4  0E74               	movlw	low _dbuf
  4434  000BD6  25BB               	addwf	efgtoa@i& (0+255),w,b
  4435  000BD8  6ED9               	movwf	fsr2l,c
  4436  000BDA  0E01               	movlw	high _dbuf
  4437  000BDC  21BC               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4438  000BDE  6EDA               	movwf	fsr2h,c
  4439  000BE0  C0C1  F01A         	movff	efgtoa@e,___awmod@dividend
  4440  000BE4  C0C2  F01B         	movff	efgtoa@e+1,___awmod@dividend+1
  4441  000BE8  0E00               	movlw	0
  4442  000BEA  6E1D               	movwf	(___awmod@divisor+1)^0,c
  4443  000BEC  0E0A               	movlw	10
  4444  000BEE  6E1C               	movwf	___awmod@divisor^0,c
  4445  000BF0  EC64  F017         	call	___awmod	;wreg free
  4446  000BF4  501A               	movf	?___awmod^0,w,c
  4447  000BF6  0F30               	addlw	48
  4448  000BF8  6EDF               	movwf	indf2,c
  4449  000BFA                     
  4450                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4451  000BFA  C0C1  F01A         	movff	efgtoa@e,___awdiv@dividend
  4452  000BFE  C0C2  F01B         	movff	efgtoa@e+1,___awdiv@dividend+1
  4453  000C02  0E00               	movlw	0
  4454  000C04  6E1D               	movwf	(___awdiv@divisor+1)^0,c
  4455  000C06  0E0A               	movlw	10
  4456  000C08  6E1C               	movwf	___awdiv@divisor^0,c
  4457  000C0A  ECA0  F016         	call	___awdiv	;wreg free
  4458  000C0E  C01A  F0C1         	movff	?___awdiv,efgtoa@e
  4459  000C12  C01B  F0C2         	movff	?___awdiv+1,efgtoa@e+1
  4460  000C16                     
  4461                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4462  000C16  0100               	movlb	0	; () banked
  4463  000C18  07AD               	decf	efgtoa@p& (0+255),f,b
  4464  000C1A  A0D8               	btfss	status,0,c
  4465  000C1C  07AE               	decf	(efgtoa@p+1)& (0+255),f,b
  4466  000C1E                     
  4467                           ; BSR set to: 0
  4468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4469  000C1E  07AF               	decf	efgtoa@w& (0+255),f,b
  4470  000C20  A0D8               	btfss	status,0,c
  4471  000C22  07B0               	decf	(efgtoa@w+1)& (0+255),f,b
  4472  000C24                     l7698:
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4476  000C24  51C1               	movf	efgtoa@e& (0+255),w,b
  4477  000C26  11C2               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4478  000C28  A4D8               	btfss	status,2,c
  4479  000C2A  EF19  F006         	goto	u8181
  4480  000C2E  EF1B  F006         	goto	u8180
  4481  000C32                     u8181:
  4482  000C32  EFE7  F005         	goto	l7688
  4483  000C36                     u8180:
  4484  000C36                     
  4485                           ; BSR set to: 0
  4486  000C36  BFAE               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4487  000C38  EF28  F006         	goto	u8190
  4488  000C3C  51AE               	movf	(efgtoa@p+1)& (0+255),w,b
  4489  000C3E  E106               	bnz	u8191
  4490  000C40  05AD               	decf	efgtoa@p& (0+255),w,b
  4491  000C42  B0D8               	btfsc	status,0,c
  4492  000C44  EF26  F006         	goto	u8191
  4493  000C48  EF28  F006         	goto	u8190
  4494  000C4C                     u8191:
  4495  000C4C  EFE7  F005         	goto	l7688
  4496  000C50                     u8190:
  4497  000C50                     
  4498                           ; BSR set to: 0
  4499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 514:         --i;
  4500  000C50  07BB               	decf	efgtoa@i& (0+255),f,b
  4501  000C52  A0D8               	btfss	status,0,c
  4502  000C54  07BC               	decf	(efgtoa@i+1)& (0+255),f,b
  4503  000C56                     
  4504                           ; BSR set to: 0
  4505                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4506  000C56  51AB               	movf	efgtoa@sign& (0+255),w,b
  4507  000C58  11AC               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4508  000C5A  A4D8               	btfss	status,2,c
  4509  000C5C  EF32  F006         	goto	u8201
  4510  000C60  EF34  F006         	goto	u8200
  4511  000C64                     u8201:
  4512  000C64  EF3A  F006         	goto	l7708
  4513  000C68                     u8200:
  4514  000C68                     
  4515                           ; BSR set to: 0
  4516  000C68  0E00               	movlw	0
  4517  000C6A  6F98               	movwf	(_efgtoa$2056+1)& (0+255),b
  4518  000C6C  0E2B               	movlw	43
  4519  000C6E  6F97               	movwf	_efgtoa$2056& (0+255),b
  4520  000C70  EF3E  F006         	goto	l7710
  4521  000C74                     l7708:
  4522                           
  4523                           ; BSR set to: 0
  4524  000C74  0E00               	movlw	0
  4525  000C76  6F98               	movwf	(_efgtoa$2056+1)& (0+255),b
  4526  000C78  0E2D               	movlw	45
  4527  000C7A  6F97               	movwf	_efgtoa$2056& (0+255),b
  4528  000C7C                     l7710:
  4529                           
  4530                           ; BSR set to: 0
  4531  000C7C  0E74               	movlw	low _dbuf
  4532  000C7E  25BB               	addwf	efgtoa@i& (0+255),w,b
  4533  000C80  6ED9               	movwf	fsr2l,c
  4534  000C82  0E01               	movlw	high _dbuf
  4535  000C84  21BC               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4536  000C86  6EDA               	movwf	fsr2h,c
  4537  000C88  C097  FFDF         	movff	_efgtoa$2056,indf2
  4538  000C8C                     
  4539                           ; BSR set to: 0
  4540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 516:         --w;
  4541  000C8C  07AF               	decf	efgtoa@w& (0+255),f,b
  4542  000C8E  A0D8               	btfss	status,0,c
  4543  000C90  07B0               	decf	(efgtoa@w+1)& (0+255),f,b
  4544  000C92                     
  4545                           ; BSR set to: 0
  4546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4547  000C92  07BB               	decf	efgtoa@i& (0+255),f,b
  4548  000C94  A0D8               	btfss	status,0,c
  4549  000C96  07BC               	decf	(efgtoa@i+1)& (0+255),f,b
  4550  000C98                     
  4551                           ; BSR set to: 0
  4552  000C98  0EBF               	movlw	191
  4553  000C9A  6F8C               	movwf	??_efgtoa& (0+255),b
  4554  000C9C  0EFF               	movlw	255
  4555  000C9E  6F8D               	movwf	(??_efgtoa+1)& (0+255),b
  4556  000CA0  518B               	movf	efgtoa@c& (0+255),w,b
  4557  000CA2  6F8E               	movwf	(??_efgtoa+2)& (0+255),b
  4558  000CA4  6B8F               	clrf	(??_efgtoa+3)& (0+255),b
  4559  000CA6  518C               	movf	??_efgtoa& (0+255),w,b
  4560  000CA8  278E               	addwf	(??_efgtoa+2)& (0+255),f,b
  4561  000CAA  518D               	movf	(??_efgtoa+1)& (0+255),w,b
  4562  000CAC  238F               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4563  000CAE  518F               	movf	(??_efgtoa+3)& (0+255),w,b
  4564  000CB0  E10A               	bnz	u8210
  4565  000CB2  0E1A               	movlw	26
  4566  000CB4  5D8E               	subwf	(??_efgtoa+2)& (0+255),w,b
  4567  000CB6  A0D8               	btfss	status,0,c
  4568  000CB8  EF60  F006         	goto	u8211
  4569  000CBC  EF63  F006         	goto	u8210
  4570  000CC0                     u8211:
  4571  000CC0  0E01               	movlw	1
  4572  000CC2  EF64  F006         	goto	u8220
  4573  000CC6                     u8210:
  4574  000CC6  0E00               	movlw	0
  4575  000CC8                     u8220:
  4576  000CC8  6F9B               	movwf	_efgtoa$2058& (0+255),b
  4577  000CCA  6B9C               	clrf	(_efgtoa$2058+1)& (0+255),b
  4578  000CCC                     
  4579                           ; BSR set to: 0
  4580  000CCC  519B               	movf	_efgtoa$2058& (0+255),w,b
  4581  000CCE  119C               	iorwf	(_efgtoa$2058+1)& (0+255),w,b
  4582  000CD0  A4D8               	btfss	status,2,c
  4583  000CD2  EF6D  F006         	goto	u8231
  4584  000CD6  EF6F  F006         	goto	u8230
  4585  000CDA                     u8231:
  4586  000CDA  EF75  F006         	goto	l7724
  4587  000CDE                     u8230:
  4588  000CDE                     
  4589                           ; BSR set to: 0
  4590  000CDE  0E00               	movlw	0
  4591  000CE0  6F9A               	movwf	(_efgtoa$2057+1)& (0+255),b
  4592  000CE2  0E65               	movlw	101
  4593  000CE4  6F99               	movwf	_efgtoa$2057& (0+255),b
  4594  000CE6  EF79  F006         	goto	l7726
  4595  000CEA                     l7724:
  4596                           
  4597                           ; BSR set to: 0
  4598  000CEA  0E00               	movlw	0
  4599  000CEC  6F9A               	movwf	(_efgtoa$2057+1)& (0+255),b
  4600  000CEE  0E45               	movlw	69
  4601  000CF0  6F99               	movwf	_efgtoa$2057& (0+255),b
  4602  000CF2                     l7726:
  4603                           
  4604                           ; BSR set to: 0
  4605  000CF2  0E74               	movlw	low _dbuf
  4606  000CF4  25BB               	addwf	efgtoa@i& (0+255),w,b
  4607  000CF6  6ED9               	movwf	fsr2l,c
  4608  000CF8  0E01               	movlw	high _dbuf
  4609  000CFA  21BC               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4610  000CFC  6EDA               	movwf	fsr2h,c
  4611  000CFE  C099  FFDF         	movff	_efgtoa$2057,indf2
  4612  000D02                     
  4613                           ; BSR set to: 0
  4614                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 519:         --w;
  4615  000D02  07AF               	decf	efgtoa@w& (0+255),f,b
  4616  000D04  A0D8               	btfss	status,0,c
  4617  000D06  07B0               	decf	(efgtoa@w+1)& (0+255),f,b
  4618  000D08                     
  4619                           ; BSR set to: 0
  4620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4621  000D08  0E74               	movlw	low _dbuf
  4622  000D0A  25C3               	addwf	efgtoa@n& (0+255),w,b
  4623  000D0C  6E1A               	movwf	strcpy@dest^0,c
  4624  000D0E  0E01               	movlw	high _dbuf
  4625  000D10  21C4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4626  000D12  6E1B               	movwf	(strcpy@dest+1)^0,c
  4627  000D14  0E74               	movlw	low _dbuf
  4628  000D16  25BB               	addwf	efgtoa@i& (0+255),w,b
  4629  000D18  6E1C               	movwf	strcpy@src^0,c
  4630  000D1A  0E01               	movlw	high _dbuf
  4631  000D1C  21BC               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4632  000D1E  6E1D               	movwf	(strcpy@src+1)^0,c
  4633  000D20  ECFE  F019         	call	_strcpy	;wreg free
  4634  000D24  EF17  F001         	goto	l7472
  4635  000D28                     l1551:
  4636  000D28  0012               	return		;funcret
  4637  000D2A                     __end_of_efgtoa:
  4638                           	callstack 0
  4639                           
  4640 ;; *************** function _tolower *****************
  4641 ;; Defined at:
  4642 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\tolower.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;  c               2   31[COMRAM] int 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;		None
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  2   31[COMRAM] int 
  4649 ;; Registers used:
  4650 ;;		wreg, status,2, status,0
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4657 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4658 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4659 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4660 ;;Total ram usage:        8 bytes
  4661 ;; Hardware stack levels used:    1
  4662 ;; Hardware stack levels required when called:    8
  4663 ;; This function calls:
  4664 ;;		_isupper
  4665 ;; This function is called by:
  4666 ;;		_efgtoa
  4667 ;;		_vfpfcnvrt
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671                           	psect	text6
  4672  00339C                     __ptext6:
  4673                           	callstack 0
  4674  00339C                     _tolower:
  4675                           	callstack 19
  4676  00339C  0EBF               	movlw	191
  4677  00339E  6E22               	movwf	??_tolower^0,c
  4678  0033A0  0EFF               	movlw	255
  4679  0033A2  6E23               	movwf	(??_tolower+1)^0,c
  4680  0033A4  C020  F024         	movff	tolower@c,??_tolower+2
  4681  0033A8  C021  F025         	movff	tolower@c+1,??_tolower+3
  4682  0033AC  5022               	movf	??_tolower^0,w,c
  4683  0033AE  2624               	addwf	(??_tolower+2)^0,f,c
  4684  0033B0  5023               	movf	(??_tolower+1)^0,w,c
  4685  0033B2  2225               	addwfc	(??_tolower+3)^0,f,c
  4686  0033B4  5025               	movf	(??_tolower+3)^0,w,c
  4687  0033B6  E10A               	bnz	u7530
  4688  0033B8  0E1A               	movlw	26
  4689  0033BA  5C24               	subwf	(??_tolower+2)^0,w,c
  4690  0033BC  A0D8               	btfss	status,0,c
  4691  0033BE  EFE3  F019         	goto	u7531
  4692  0033C2  EFE6  F019         	goto	u7530
  4693  0033C6                     u7531:
  4694  0033C6  0E01               	movlw	1
  4695  0033C8  EFE7  F019         	goto	u7540
  4696  0033CC                     u7530:
  4697  0033CC  0E00               	movlw	0
  4698  0033CE                     u7540:
  4699  0033CE  6E26               	movwf	_tolower$2215^0,c
  4700  0033D0  6A27               	clrf	(_tolower$2215+1)^0,c
  4701  0033D2  5026               	movf	_tolower$2215^0,w,c
  4702  0033D4  1027               	iorwf	(_tolower$2215+1)^0,w,c
  4703  0033D6  B4D8               	btfsc	status,2,c
  4704  0033D8  EFF0  F019         	goto	u7551
  4705  0033DC  EFF2  F019         	goto	u7550
  4706  0033E0                     u7551:
  4707  0033E0  EFF9  F019         	goto	l1788
  4708  0033E4                     u7550:
  4709  0033E4  0E20               	movlw	32
  4710  0033E6  1020               	iorwf	tolower@c^0,w,c
  4711  0033E8  6E20               	movwf	?_tolower^0,c
  4712  0033EA  5021               	movf	(tolower@c+1)^0,w,c
  4713  0033EC  6E21               	movwf	(?_tolower+1)^0,c
  4714  0033EE  EFFD  F019         	goto	l1793
  4715  0033F2                     l1788:
  4716  0033F2  C020  F020         	movff	tolower@c,?_tolower
  4717  0033F6  C021  F021         	movff	tolower@c+1,?_tolower+1
  4718  0033FA                     l1793:
  4719  0033FA  0012               	return		;funcret
  4720  0033FC                     __end_of_tolower:
  4721                           	callstack 0
  4722                           
  4723 ;; *************** function _isupper *****************
  4724 ;; Defined at:
  4725 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;  c               2   25[COMRAM] int 
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;		None
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  2   25[COMRAM] int 
  4732 ;; Registers used:
  4733 ;;		wreg, status,2, status,0
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4741 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4742 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4743 ;;Total ram usage:        6 bytes
  4744 ;; Hardware stack levels used:    1
  4745 ;; Hardware stack levels required when called:    7
  4746 ;; This function calls:
  4747 ;;		Nothing
  4748 ;; This function is called by:
  4749 ;;		_efgtoa
  4750 ;;		_vfpfcnvrt
  4751 ;;		_tolower
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           	psect	text7
  4756  0036B6                     __ptext7:
  4757                           	callstack 0
  4758  0036B6                     _isupper:
  4759                           	callstack 19
  4760  0036B6  0EBF               	movlw	191
  4761  0036B8  6E1C               	movwf	??_isupper^0,c
  4762  0036BA  0EFF               	movlw	255
  4763  0036BC  6E1D               	movwf	(??_isupper+1)^0,c
  4764  0036BE  C01A  F01E         	movff	isupper@c,??_isupper+2
  4765  0036C2  C01B  F01F         	movff	isupper@c+1,??_isupper+3
  4766  0036C6  501C               	movf	??_isupper^0,w,c
  4767  0036C8  261E               	addwf	(??_isupper+2)^0,f,c
  4768  0036CA  501D               	movf	(??_isupper+1)^0,w,c
  4769  0036CC  221F               	addwfc	(??_isupper+3)^0,f,c
  4770  0036CE  501F               	movf	(??_isupper+3)^0,w,c
  4771  0036D0  E10A               	bnz	u6680
  4772  0036D2  0E1A               	movlw	26
  4773  0036D4  5C1E               	subwf	(??_isupper+2)^0,w,c
  4774  0036D6  A0D8               	btfss	status,0,c
  4775  0036D8  EF70  F01B         	goto	u6681
  4776  0036DC  EF73  F01B         	goto	u6680
  4777  0036E0                     u6681:
  4778  0036E0  0E01               	movlw	1
  4779  0036E2  EF74  F01B         	goto	u6690
  4780  0036E6                     u6680:
  4781  0036E6  0E00               	movlw	0
  4782  0036E8                     u6690:
  4783  0036E8  6E1A               	movwf	?_isupper^0,c
  4784  0036EA  6A1B               	clrf	(?_isupper+1)^0,c
  4785  0036EC  0012               	return		;funcret
  4786  0036EE                     __end_of_isupper:
  4787                           	callstack 0
  4788                           
  4789 ;; *************** function _strcpy *****************
  4790 ;; Defined at:
  4791 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strcpy.c"
  4792 ;; Parameters:    Size  Location     Type
  4793 ;;  dest            2   25[COMRAM] PTR unsigned char 
  4794 ;;		 -> dbuf(80), 
  4795 ;;  src             2   27[COMRAM] PTR const unsigned char 
  4796 ;;		 -> STR_18(4), STR_17(4), STR_14(4), STR_13(4), 
  4797 ;;		 -> dbuf(80), 
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;  d               2   33[COMRAM] PTR unsigned char 
  4800 ;;		 -> dbuf(80), 
  4801 ;;  s               2   31[COMRAM] PTR const unsigned char 
  4802 ;;		 -> STR_18(4), STR_17(4), STR_14(4), STR_13(4), 
  4803 ;;		 -> dbuf(80), 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  2   25[COMRAM] PTR unsigned char 
  4806 ;; Registers used:
  4807 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4813 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4814 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4815 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4816 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4817 ;;Total ram usage:       10 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; Hardware stack levels required when called:    7
  4820 ;; This function calls:
  4821 ;;		Nothing
  4822 ;; This function is called by:
  4823 ;;		_efgtoa
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text8
  4828  0033FC                     __ptext8:
  4829                           	callstack 0
  4830  0033FC                     _strcpy:
  4831                           	callstack 19
  4832  0033FC  C01C  F020         	movff	strcpy@src,strcpy@s
  4833  003400  C01D  F021         	movff	strcpy@src+1,strcpy@s+1
  4834  003404  C01A  F022         	movff	strcpy@dest,strcpy@d
  4835  003408  C01B  F023         	movff	strcpy@dest+1,strcpy@d+1
  4836  00340C                     l7372:
  4837  00340C  5020               	movf	strcpy@s^0,w,c
  4838  00340E  6E1E               	movwf	??_strcpy^0,c
  4839  003410  5021               	movf	(strcpy@s+1)^0,w,c
  4840  003412  6E1F               	movwf	(??_strcpy+1)^0,c
  4841  003414  4A20               	infsnz	strcpy@s^0,f,c
  4842  003416  2A21               	incf	(strcpy@s+1)^0,f,c
  4843  003418  C01E  FFF6         	movff	??_strcpy,tblptrl
  4844  00341C  C01F  FFF7         	movff	??_strcpy+1,tblptrh
  4845  003420  0E00               	movlw	low (__mediumconst shr (0+16))
  4846  003422  6EF8               	movwf	tblptru,c
  4847  003424  C022  FFD9         	movff	strcpy@d,fsr2l
  4848  003428  C023  FFDA         	movff	strcpy@d+1,fsr2h
  4849  00342C  4A22               	infsnz	strcpy@d^0,f,c
  4850  00342E  2A23               	incf	(strcpy@d+1)^0,f,c
  4851  003430  0E0E               	movlw	(high __ramtop+-1)
  4852  003432  64F7               	cpfsgt	tblptrh,c
  4853  003434  D003               	bra	u7517
  4854  003436  0008               	tblrd		*
  4855  003438  50F5               	movf	tablat,w,c
  4856  00343A  D005               	bra	u7510
  4857  00343C                     u7517:
  4858  00343C  CFF6 FFE9          	movff	tblptrl,fsr0l
  4859  003440  CFF7 FFEA          	movff	tblptrh,fsr0h
  4860  003444  50EF               	movf	indf0,w,c
  4861  003446                     u7510:
  4862  003446  6EDF               	movwf	indf2,c
  4863  003448  50DF               	movf	indf2,w,c
  4864  00344A  A4D8               	btfss	status,2,c
  4865  00344C  EF2A  F01A         	goto	u7521
  4866  003450  EF2C  F01A         	goto	u7520
  4867  003454                     u7521:
  4868  003454  EF06  F01A         	goto	l7372
  4869  003458                     u7520:
  4870  003458  0012               	return		;funcret
  4871  00345A                     __end_of_strcpy:
  4872                           	callstack 0
  4873                           
  4874 ;; *************** function _pad *****************
  4875 ;; Defined at:
  4876 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  4879 ;;		 -> sprintf@f(6), NULL(0), 
  4880 ;;  buf             2    2[BANK0 ] PTR unsigned char 
  4881 ;;		 -> dbuf(80), 
  4882 ;;  p               2    4[BANK0 ] int 
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;  w               2    8[BANK0 ] int 
  4885 ;;  i               2    6[BANK0 ] int 
  4886 ;; Return value:  Size  Location     Type
  4887 ;;                  2    0[BANK0 ] int 
  4888 ;; Registers used:
  4889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4890 ;; Tracked objects:
  4891 ;;		On entry : 0/0
  4892 ;;		On exit  : 0/0
  4893 ;;		Unchanged: 0/0
  4894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4895 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4896 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4897 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4898 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4899 ;;Total ram usage:       11 bytes
  4900 ;; Hardware stack levels used:    1
  4901 ;; Hardware stack levels required when called:   10
  4902 ;; This function calls:
  4903 ;;		_fputc
  4904 ;;		_fputs
  4905 ;;		_strlen
  4906 ;; This function is called by:
  4907 ;;		_efgtoa
  4908 ;; This function uses a non-reentrant model
  4909 ;;
  4910                           
  4911                           	psect	text9
  4912  002C78                     __ptext9:
  4913                           	callstack 0
  4914  002C78                     _pad:
  4915                           	callstack 16
  4916  002C78                     
  4917                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4918  002C78  A042               	btfss	_flags^0,0,c
  4919  002C7A  EF41  F016         	goto	u7401
  4920  002C7E  EF43  F016         	goto	u7400
  4921  002C82                     u7401:
  4922  002C82  EF4D  F016         	goto	l7330
  4923  002C86                     u7400:
  4924  002C86                     
  4925                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4926  002C86  C062  F023         	movff	pad@buf,fputs@s
  4927  002C8A  C063  F024         	movff	pad@buf+1,fputs@s+1
  4928  002C8E  C060  F025         	movff	pad@fp,fputs@fp
  4929  002C92  C061  F026         	movff	pad@fp+1,fputs@fp+1
  4930  002C96  ECF9  F01A         	call	_fputs	;wreg free
  4931  002C9A                     l7330:
  4932                           
  4933                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4934  002C9A  0100               	movlb	0	; () banked
  4935  002C9C  BF65               	btfsc	(pad@p+1)& (0+255),7,b
  4936  002C9E  EF53  F016         	goto	u7411
  4937  002CA2  EF55  F016         	goto	u7410
  4938  002CA6                     u7411:
  4939  002CA6  EF5B  F016         	goto	l7334
  4940  002CAA                     u7410:
  4941  002CAA                     
  4942                           ; BSR set to: 0
  4943  002CAA  C064  F068         	movff	pad@p,pad@w
  4944  002CAE  C065  F069         	movff	pad@p+1,pad@w+1
  4945  002CB2  EF5F  F016         	goto	l1528
  4946  002CB6                     l7334:
  4947                           
  4948                           ; BSR set to: 0
  4949  002CB6  0E00               	movlw	0
  4950  002CB8  6F69               	movwf	(pad@w+1)& (0+255),b
  4951  002CBA  0E00               	movlw	0
  4952  002CBC  6F68               	movwf	pad@w& (0+255),b
  4953  002CBE                     l1528:
  4954                           
  4955                           ; BSR set to: 0
  4956                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4957  002CBE  0E00               	movlw	0
  4958  002CC0  6F67               	movwf	(pad@i+1)& (0+255),b
  4959  002CC2  0E00               	movlw	0
  4960  002CC4  6F66               	movwf	pad@i& (0+255),b
  4961                           
  4962                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4963  002CC6  EF72  F016         	goto	l7340
  4964  002CCA                     l7336:
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4968  002CCA  0E00               	movlw	0
  4969  002CCC  6E1B               	movwf	(fputc@c+1)^0,c
  4970  002CCE  0E20               	movlw	32
  4971  002CD0  6E1A               	movwf	fputc@c^0,c
  4972  002CD2  C060  F01C         	movff	pad@fp,fputc@fp
  4973  002CD6  C061  F01D         	movff	pad@fp+1,fputc@fp+1
  4974  002CDA  ECD7  F015         	call	_fputc	;wreg free
  4975  002CDE                     
  4976                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4977  002CDE  0100               	movlb	0	; () banked
  4978  002CE0  4B66               	infsnz	pad@i& (0+255),f,b
  4979  002CE2  2B67               	incf	(pad@i+1)& (0+255),f,b
  4980  002CE4                     l7340:
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4984  002CE4  5168               	movf	pad@w& (0+255),w,b
  4985  002CE6  5D66               	subwf	pad@i& (0+255),w,b
  4986  002CE8  5167               	movf	(pad@i+1)& (0+255),w,b
  4987  002CEA  0A80               	xorlw	128
  4988  002CEC  6E2A               	movwf	??_pad^0,c
  4989  002CEE  5169               	movf	(pad@w+1)& (0+255),w,b
  4990  002CF0  0A80               	xorlw	128
  4991  002CF2  582A               	subwfb	??_pad^0,w,c
  4992  002CF4  A0D8               	btfss	status,0,c
  4993  002CF6  EF7F  F016         	goto	u7421
  4994  002CFA  EF81  F016         	goto	u7420
  4995  002CFE                     u7421:
  4996  002CFE  EF65  F016         	goto	l7336
  4997  002D02                     u7420:
  4998  002D02                     
  4999                           ; BSR set to: 0
  5000                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5001  002D02  B042               	btfsc	_flags^0,0,c
  5002  002D04  EF86  F016         	goto	u7431
  5003  002D08  EF88  F016         	goto	u7430
  5004  002D0C                     u7431:
  5005  002D0C  EF92  F016         	goto	l7344
  5006  002D10                     u7430:
  5007  002D10                     
  5008                           ; BSR set to: 0
  5009                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5010  002D10  C062  F023         	movff	pad@buf,fputs@s
  5011  002D14  C063  F024         	movff	pad@buf+1,fputs@s+1
  5012  002D18  C060  F025         	movff	pad@fp,fputs@fp
  5013  002D1C  C061  F026         	movff	pad@fp+1,fputs@fp+1
  5014  002D20  ECF9  F01A         	call	_fputs	;wreg free
  5015  002D24                     l7344:
  5016                           
  5017                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5018  002D24  C062  F01A         	movff	pad@buf,strlen@s
  5019  002D28  C063  F01B         	movff	pad@buf+1,strlen@s+1
  5020  002D2C  ECAF  F01B         	call	_strlen	;wreg free
  5021  002D30  0100               	movlb	0	; () banked
  5022  002D32  5168               	movf	pad@w& (0+255),w,b
  5023  002D34  241A               	addwf	?_strlen^0,w,c
  5024  002D36  6F60               	movwf	?_pad& (0+255),b
  5025  002D38  5169               	movf	(pad@w+1)& (0+255),w,b
  5026  002D3A  201B               	addwfc	(?_strlen+1)^0,w,c
  5027  002D3C  6F61               	movwf	(?_pad+1)& (0+255),b
  5028  002D3E                     
  5029                           ; BSR set to: 0
  5030  002D3E  0012               	return		;funcret
  5031  002D40                     __end_of_pad:
  5032                           	callstack 0
  5033                           
  5034 ;; *************** function _strlen *****************
  5035 ;; Defined at:
  5036 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;  s               2   25[COMRAM] PTR const unsigned char 
  5039 ;;		 -> dbuf(80), 
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;  a               2   27[COMRAM] PTR const unsigned char 
  5042 ;;		 -> dbuf(80), 
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  2   25[COMRAM] unsigned int 
  5045 ;; Registers used:
  5046 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5052 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5053 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5055 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5056 ;;Total ram usage:        4 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; Hardware stack levels required when called:    7
  5059 ;; This function calls:
  5060 ;;		Nothing
  5061 ;; This function is called by:
  5062 ;;		_pad
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066                           	psect	text10
  5067  00375E                     __ptext10:
  5068                           	callstack 0
  5069  00375E                     _strlen:
  5070                           	callstack 18
  5071  00375E  C01A  F01C         	movff	strlen@s,strlen@a
  5072  003762  C01B  F01D         	movff	strlen@s+1,strlen@a+1
  5073  003766  EFB7  F01B         	goto	l6866
  5074  00376A                     l6864:
  5075  00376A  4A1A               	infsnz	strlen@s^0,f,c
  5076  00376C  2A1B               	incf	(strlen@s+1)^0,f,c
  5077  00376E                     l6866:
  5078  00376E  C01A  FFD9         	movff	strlen@s,fsr2l
  5079  003772  C01B  FFDA         	movff	strlen@s+1,fsr2h
  5080  003776  50DF               	movf	indf2,w,c
  5081  003778  A4D8               	btfss	status,2,c
  5082  00377A  EFC1  F01B         	goto	u6671
  5083  00377E  EFC3  F01B         	goto	u6670
  5084  003782                     u6671:
  5085  003782  EFB5  F01B         	goto	l6864
  5086  003786                     u6670:
  5087  003786  501C               	movf	strlen@a^0,w,c
  5088  003788  5C1A               	subwf	strlen@s^0,w,c
  5089  00378A  6E1A               	movwf	?_strlen^0,c
  5090  00378C  501D               	movf	(strlen@a+1)^0,w,c
  5091  00378E  581B               	subwfb	(strlen@s+1)^0,w,c
  5092  003790  6E1B               	movwf	(?_strlen+1)^0,c
  5093  003792  0012               	return		;funcret
  5094  003794                     __end_of_strlen:
  5095                           	callstack 0
  5096                           
  5097 ;; *************** function _fputs *****************
  5098 ;; Defined at:
  5099 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;  s               2   34[COMRAM] PTR const unsigned char 
  5102 ;;		 -> dbuf(80), 
  5103 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  5104 ;;		 -> sprintf@f(6), NULL(0), 
  5105 ;; Auto vars:     Size  Location     Type
  5106 ;;  i               2   39[COMRAM] int 
  5107 ;;  c               1   38[COMRAM] unsigned char 
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  2   34[COMRAM] int 
  5110 ;; Registers used:
  5111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5117 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5118 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5120 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5121 ;;Total ram usage:        7 bytes
  5122 ;; Hardware stack levels used:    1
  5123 ;; Hardware stack levels required when called:    9
  5124 ;; This function calls:
  5125 ;;		_fputc
  5126 ;; This function is called by:
  5127 ;;		_pad
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131                           	psect	text11
  5132  0035F2                     __ptext11:
  5133                           	callstack 0
  5134  0035F2                     _fputs:
  5135                           	callstack 16
  5136  0035F2  0E00               	movlw	0
  5137  0035F4  6E29               	movwf	(fputs@i+1)^0,c
  5138  0035F6  0E00               	movlw	0
  5139  0035F8  6E28               	movwf	fputs@i^0,c
  5140  0035FA  EF0A  F01B         	goto	l6860
  5141  0035FE                     l6856:
  5142  0035FE  C027  F01A         	movff	fputs@c,fputc@c
  5143  003602  6A1B               	clrf	(fputc@c+1)^0,c
  5144  003604  C025  F01C         	movff	fputs@fp,fputc@fp
  5145  003608  C026  F01D         	movff	fputs@fp+1,fputc@fp+1
  5146  00360C  ECD7  F015         	call	_fputc	;wreg free
  5147  003610  4A28               	infsnz	fputs@i^0,f,c
  5148  003612  2A29               	incf	(fputs@i+1)^0,f,c
  5149  003614                     l6860:
  5150  003614  5028               	movf	fputs@i^0,w,c
  5151  003616  2423               	addwf	fputs@s^0,w,c
  5152  003618  6ED9               	movwf	fsr2l,c
  5153  00361A  5029               	movf	(fputs@i+1)^0,w,c
  5154  00361C  2024               	addwfc	(fputs@s+1)^0,w,c
  5155  00361E  6EDA               	movwf	fsr2h,c
  5156  003620  50DF               	movf	indf2,w,c
  5157  003622  6E27               	movwf	fputs@c^0,c
  5158  003624  5027               	movf	fputs@c^0,w,c
  5159  003626  A4D8               	btfss	status,2,c
  5160  003628  EF18  F01B         	goto	u6661
  5161  00362C  EF1A  F01B         	goto	u6660
  5162  003630                     u6661:
  5163  003630  EFFF  F01A         	goto	l6856
  5164  003634                     u6660:
  5165  003634  0012               	return		;funcret
  5166  003636                     __end_of_fputs:
  5167                           	callstack 0
  5168                           
  5169 ;; *************** function _fputc *****************
  5170 ;; Defined at:
  5171 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;  c               2   25[COMRAM] int 
  5174 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5175 ;;		 -> sprintf@f(6), NULL(0), 
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;		None
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  2   25[COMRAM] int 
  5180 ;; Registers used:
  5181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5187 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5189 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5190 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5191 ;;Total ram usage:        9 bytes
  5192 ;; Hardware stack levels used:    1
  5193 ;; Hardware stack levels required when called:    8
  5194 ;; This function calls:
  5195 ;;		_putch
  5196 ;; This function is called by:
  5197 ;;		_pad
  5198 ;;		_vfpfcnvrt
  5199 ;;		_fputs
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           	psect	text12
  5204  002BAE                     __ptext12:
  5205                           	callstack 0
  5206  002BAE                     _fputc:
  5207                           	callstack 19
  5208  002BAE  501C               	movf	fputc@fp^0,w,c
  5209  002BB0  101D               	iorwf	(fputc@fp+1)^0,w,c
  5210  002BB2  B4D8               	btfsc	status,2,c
  5211  002BB4  EFDE  F015         	goto	u6231
  5212  002BB8  EFE0  F015         	goto	u6230
  5213  002BBC                     u6231:
  5214  002BBC  EFE9  F015         	goto	l6642
  5215  002BC0                     u6230:
  5216  002BC0  501C               	movf	fputc@fp^0,w,c
  5217  002BC2  101D               	iorwf	(fputc@fp+1)^0,w,c
  5218  002BC4  A4D8               	btfss	status,2,c
  5219  002BC6  EFE7  F015         	goto	u6241
  5220  002BCA  EFE9  F015         	goto	u6240
  5221  002BCE                     u6241:
  5222  002BCE  EFEE  F015         	goto	l6644
  5223  002BD2                     u6240:
  5224  002BD2                     l6642:
  5225  002BD2  501A               	movf	fputc@c^0,w,c
  5226  002BD4  EC7D  F01D         	call	_putch
  5227  002BD8  EF3B  F016         	goto	l1744
  5228  002BDC                     l6644:
  5229  002BDC  EE20 F004          	lfsr	2,4
  5230  002BE0  501C               	movf	fputc@fp^0,w,c
  5231  002BE2  26D9               	addwf	fsr2l,f,c
  5232  002BE4  501D               	movf	(fputc@fp+1)^0,w,c
  5233  002BE6  22DA               	addwfc	fsr2h,f,c
  5234  002BE8  50DE               	movf	postinc2,w,c
  5235  002BEA  10DE               	iorwf	postinc2,w,c
  5236  002BEC  B4D8               	btfsc	status,2,c
  5237  002BEE  EFFB  F015         	goto	u6251
  5238  002BF2  EFFD  F015         	goto	u6250
  5239  002BF6                     u6251:
  5240  002BF6  EF18  F016         	goto	l6648
  5241  002BFA                     u6250:
  5242  002BFA  EE20 F004          	lfsr	2,4
  5243  002BFE  501C               	movf	fputc@fp^0,w,c
  5244  002C00  26D9               	addwf	fsr2l,f,c
  5245  002C02  501D               	movf	(fputc@fp+1)^0,w,c
  5246  002C04  22DA               	addwfc	fsr2h,f,c
  5247  002C06  EE10 F002          	lfsr	1,2
  5248  002C0A  501C               	movf	fputc@fp^0,w,c
  5249  002C0C  26E1               	addwf	fsr1l,f,c
  5250  002C0E  501D               	movf	(fputc@fp+1)^0,w,c
  5251  002C10  22E2               	addwfc	fsr1h,f,c
  5252  002C12  50DE               	movf	postinc2,w,c
  5253  002C14  5CE6               	subwf	postinc1,w,c
  5254  002C16  50E6               	movf	postinc1,w,c
  5255  002C18  0A80               	xorlw	128
  5256  002C1A  6E22               	movwf	(??_fputc+4)^0,c
  5257  002C1C  50DE               	movf	postinc2,w,c
  5258  002C1E  0A80               	xorlw	128
  5259  002C20  5822               	subwfb	(??_fputc+4)^0,w,c
  5260  002C22  B0D8               	btfsc	status,0,c
  5261  002C24  EF16  F016         	goto	u6261
  5262  002C28  EF18  F016         	goto	u6260
  5263  002C2C                     u6261:
  5264  002C2C  EF3B  F016         	goto	l1744
  5265  002C30                     u6260:
  5266  002C30                     l6648:
  5267  002C30  EE20 F002          	lfsr	2,2
  5268  002C34  501C               	movf	fputc@fp^0,w,c
  5269  002C36  26D9               	addwf	fsr2l,f,c
  5270  002C38  501D               	movf	(fputc@fp+1)^0,w,c
  5271  002C3A  22DA               	addwfc	fsr2h,f,c
  5272  002C3C  CFDE F01E          	movff	postinc2,??_fputc
  5273  002C40  CFDD F01F          	movff	postdec2,??_fputc+1
  5274  002C44  C01C  FFD9         	movff	fputc@fp,fsr2l
  5275  002C48  C01D  FFDA         	movff	fputc@fp+1,fsr2h
  5276  002C4C  CFDE F020          	movff	postinc2,??_fputc+2
  5277  002C50  CFDD F021          	movff	postdec2,??_fputc+3
  5278  002C54  501E               	movf	??_fputc^0,w,c
  5279  002C56  2420               	addwf	(??_fputc+2)^0,w,c
  5280  002C58  6ED9               	movwf	fsr2l,c
  5281  002C5A  501F               	movf	(??_fputc+1)^0,w,c
  5282  002C5C  2021               	addwfc	(??_fputc+3)^0,w,c
  5283  002C5E  6EDA               	movwf	fsr2h,c
  5284  002C60  C01A  FFDF         	movff	fputc@c,indf2
  5285  002C64  EE20 F002          	lfsr	2,2
  5286  002C68  501C               	movf	fputc@fp^0,w,c
  5287  002C6A  26D9               	addwf	fsr2l,f,c
  5288  002C6C  501D               	movf	(fputc@fp+1)^0,w,c
  5289  002C6E  22DA               	addwfc	fsr2h,f,c
  5290  002C70  2ADE               	incf	postinc2,f,c
  5291  002C72  0E00               	movlw	0
  5292  002C74  22DD               	addwfc	postdec2,f,c
  5293  002C76                     l1744:
  5294  002C76  0012               	return		;funcret
  5295  002C78                     __end_of_fputc:
  5296                           	callstack 0
  5297                           
  5298 ;; *************** function _putch *****************
  5299 ;; Defined at:
  5300 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;  c               1    wreg     unsigned char 
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;  c               1    0[COMRAM] unsigned char 
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  1    wreg      void 
  5307 ;; Registers used:
  5308 ;;		wreg
  5309 ;; Tracked objects:
  5310 ;;		On entry : 0/0
  5311 ;;		On exit  : 0/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5318 ;;Total ram usage:        0 bytes
  5319 ;; Hardware stack levels used:    1
  5320 ;; Hardware stack levels required when called:    7
  5321 ;; This function calls:
  5322 ;;		Nothing
  5323 ;; This function is called by:
  5324 ;;		_fputc
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328                           	psect	text13
  5329  003AFA                     __ptext13:
  5330                           	callstack 0
  5331  003AFA                     _putch:
  5332                           	callstack 19
  5333  003AFA  0012               	return		;funcret
  5334  003AFC                     __end_of_putch:
  5335                           	callstack 0
  5336                           
  5337 ;; *************** function _floorf *****************
  5338 ;; Defined at:
  5339 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\floorf.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  x               4   37[COMRAM] float 
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;  u               4   25[BANK0 ] struct .
  5344 ;;  m               4   19[BANK0 ] unsigned long 
  5345 ;;  e               2   23[BANK0 ] int 
  5346 ;; Return value:  Size  Location     Type
  5347 ;;                  4   37[COMRAM] float 
  5348 ;; Registers used:
  5349 ;;		wreg, status,2, status,0
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5355 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5356 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5357 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5358 ;;      Totals:         4      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5359 ;;Total ram usage:       20 bytes
  5360 ;; Hardware stack levels used:    1
  5361 ;; Hardware stack levels required when called:    7
  5362 ;; This function calls:
  5363 ;;		Nothing
  5364 ;; This function is called by:
  5365 ;;		_efgtoa
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369                           	psect	text14
  5370  001E38                     __ptext14:
  5371                           	callstack 0
  5372  001E38                     _floorf:
  5373                           	callstack 19
  5374  001E38  C02E  F079         	movff	floorf@F527,floorf@u
  5375  001E3C  C02F  F07A         	movff	floorf@F527+1,floorf@u+1
  5376  001E40  C030  F07B         	movff	floorf@F527+2,floorf@u+2
  5377  001E44  C031  F07C         	movff	floorf@F527+3,floorf@u+3
  5378  001E48  C026  F079         	movff	floorf@x,floorf@u
  5379  001E4C  C027  F07A         	movff	floorf@x+1,floorf@u+1
  5380  001E50  C028  F07B         	movff	floorf@x+2,floorf@u+2
  5381  001E54  C029  F07C         	movff	floorf@x+3,floorf@u+3
  5382  001E58  0E81               	movlw	129
  5383  001E5A  0100               	movlb	0	; () banked
  5384  001E5C  6F6D               	movwf	??_floorf& (0+255),b
  5385  001E5E  0EFF               	movlw	255
  5386  001E60  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5387  001E62  C079  F06F         	movff	floorf@u,??_floorf+2
  5388  001E66  C07A  F070         	movff	floorf@u+1,??_floorf+3
  5389  001E6A  C07B  F071         	movff	floorf@u+2,??_floorf+4
  5390  001E6E  C07C  F072         	movff	floorf@u+3,??_floorf+5
  5391  001E72  0E18               	movlw	24
  5392  001E74  EF41  F00F         	goto	u7560
  5393  001E78                     u7565:
  5394  001E78  90D8               	bcf	status,0,c
  5395  001E7A  3372               	rrcf	(??_floorf+5)& (0+255),f,b
  5396  001E7C  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  5397  001E7E  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5398  001E80  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5399  001E82                     u7560:
  5400  001E82  2EE8               	decfsz	wreg,f,c
  5401  001E84  EF3C  F00F         	goto	u7565
  5402  001E88  516F               	movf	(??_floorf+2)& (0+255),w,b
  5403  001E8A  256D               	addwf	??_floorf& (0+255),w,b
  5404  001E8C  6F77               	movwf	floorf@e& (0+255),b
  5405  001E8E  0E00               	movlw	0
  5406  001E90  216E               	addwfc	(??_floorf+1)& (0+255),w,b
  5407  001E92  6F78               	movwf	(floorf@e+1)& (0+255),b
  5408  001E94  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  5409  001E96  EF56  F00F         	goto	u7571
  5410  001E9A  5178               	movf	(floorf@e+1)& (0+255),w,b
  5411  001E9C  E109               	bnz	u7570
  5412  001E9E  0E17               	movlw	23
  5413  001EA0  5D77               	subwf	floorf@e& (0+255),w,b
  5414  001EA2  A0D8               	btfss	status,0,c
  5415  001EA4  EF56  F00F         	goto	u7571
  5416  001EA8  EF58  F00F         	goto	u7570
  5417  001EAC                     u7571:
  5418  001EAC  EF62  F00F         	goto	l7390
  5419  001EB0                     u7570:
  5420  001EB0                     l7388:
  5421                           
  5422                           ; BSR set to: 0
  5423  001EB0  C026  F026         	movff	floorf@x,?_floorf
  5424  001EB4  C027  F027         	movff	floorf@x+1,?_floorf+1
  5425  001EB8  C028  F028         	movff	floorf@x+2,?_floorf+2
  5426  001EBC  C029  F029         	movff	floorf@x+3,?_floorf+3
  5427  001EC0  EF26  F010         	goto	l1705
  5428  001EC4                     l7390:
  5429                           
  5430                           ; BSR set to: 0
  5431  001EC4  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  5432  001EC6  EF67  F00F         	goto	u7581
  5433  001ECA  EF69  F00F         	goto	u7580
  5434  001ECE                     u7581:
  5435  001ECE  EFDA  F00F         	goto	l7400
  5436  001ED2                     u7580:
  5437  001ED2                     
  5438                           ; BSR set to: 0
  5439  001ED2  C077  F06D         	movff	floorf@e,??_floorf
  5440  001ED6  0EFF               	movlw	255
  5441  001ED8  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5442  001EDA  0EFF               	movlw	255
  5443  001EDC  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5444  001EDE  0E7F               	movlw	127
  5445  001EE0  6F70               	movwf	(??_floorf+3)& (0+255),b
  5446  001EE2  0E00               	movlw	0
  5447  001EE4  6F71               	movwf	(??_floorf+4)& (0+255),b
  5448  001EE6                     u7595:
  5449  001EE6  676D               	tstfsz	??_floorf& (0+255),b
  5450  001EE8  EF78  F00F         	goto	u7596
  5451  001EEC  EF80  F00F         	goto	u7597
  5452  001EF0                     u7596:
  5453  001EF0  3571               	rlcf	(??_floorf+4)& (0+255),w,b
  5454  001EF2  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  5455  001EF4  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5456  001EF6  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5457  001EF8  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5458  001EFA  2F6D               	decfsz	??_floorf& (0+255),f,b
  5459  001EFC  EF73  F00F         	goto	u7595
  5460  001F00                     u7597:
  5461  001F00  C06E  F073         	movff	??_floorf+1,floorf@m
  5462  001F04  C06F  F074         	movff	??_floorf+2,floorf@m+1
  5463  001F08  C070  F075         	movff	??_floorf+3,floorf@m+2
  5464  001F0C  C071  F076         	movff	??_floorf+4,floorf@m+3
  5465  001F10  0100               	movlb	0	; () banked
  5466  001F12  5173               	movf	floorf@m& (0+255),w,b
  5467  001F14  1579               	andwf	floorf@u& (0+255),w,b
  5468  001F16  6F6D               	movwf	??_floorf& (0+255),b
  5469  001F18  5174               	movf	(floorf@m+1)& (0+255),w,b
  5470  001F1A  157A               	andwf	(floorf@u+1)& (0+255),w,b
  5471  001F1C  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5472  001F1E  5175               	movf	(floorf@m+2)& (0+255),w,b
  5473  001F20  157B               	andwf	(floorf@u+2)& (0+255),w,b
  5474  001F22  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5475  001F24  5176               	movf	(floorf@m+3)& (0+255),w,b
  5476  001F26  157C               	andwf	(floorf@u+3)& (0+255),w,b
  5477  001F28  6F70               	movwf	(??_floorf+3)& (0+255),b
  5478  001F2A  516D               	movf	??_floorf& (0+255),w,b
  5479  001F2C  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5480  001F2E  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5481  001F30  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5482  001F32  A4D8               	btfss	status,2,c
  5483  001F34  EF9E  F00F         	goto	u7601
  5484  001F38  EFA0  F00F         	goto	u7600
  5485  001F3C                     u7601:
  5486  001F3C  EFA2  F00F         	goto	l7396
  5487  001F40                     u7600:
  5488  001F40  EF58  F00F         	goto	l7388
  5489  001F44                     l7396:
  5490                           
  5491                           ; BSR set to: 0
  5492  001F44  C079  F06D         	movff	floorf@u,??_floorf
  5493  001F48  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  5494  001F4C  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  5495  001F50  C07C  F070         	movff	floorf@u+3,??_floorf+3
  5496  001F54  0E20               	movlw	32
  5497  001F56  EFB2  F00F         	goto	u7610
  5498  001F5A                     u7615:
  5499  001F5A  90D8               	bcf	status,0,c
  5500  001F5C  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5501  001F5E  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5502  001F60  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5503  001F62  336D               	rrcf	??_floorf& (0+255),f,b
  5504  001F64                     u7610:
  5505  001F64  2EE8               	decfsz	wreg,f,c
  5506  001F66  EFAD  F00F         	goto	u7615
  5507  001F6A  516D               	movf	??_floorf& (0+255),w,b
  5508  001F6C  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5509  001F6E  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5510  001F70  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5511  001F72  B4D8               	btfsc	status,2,c
  5512  001F74  EFBE  F00F         	goto	u7621
  5513  001F78  EFC0  F00F         	goto	u7620
  5514  001F7C                     u7621:
  5515  001F7C  EFC8  F00F         	goto	l1708
  5516  001F80                     u7620:
  5517  001F80                     
  5518                           ; BSR set to: 0
  5519  001F80  5173               	movf	floorf@m& (0+255),w,b
  5520  001F82  2779               	addwf	floorf@u& (0+255),f,b
  5521  001F84  5174               	movf	(floorf@m+1)& (0+255),w,b
  5522  001F86  237A               	addwfc	(floorf@u+1)& (0+255),f,b
  5523  001F88  5175               	movf	(floorf@m+2)& (0+255),w,b
  5524  001F8A  237B               	addwfc	(floorf@u+2)& (0+255),f,b
  5525  001F8C  5176               	movf	(floorf@m+3)& (0+255),w,b
  5526  001F8E  237C               	addwfc	(floorf@u+3)& (0+255),f,b
  5527  001F90                     l1708:
  5528                           
  5529                           ; BSR set to: 0
  5530  001F90  1D73               	comf	floorf@m& (0+255),w,b
  5531  001F92  6F6D               	movwf	??_floorf& (0+255),b
  5532  001F94  1D74               	comf	(floorf@m+1)& (0+255),w,b
  5533  001F96  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5534  001F98  1D75               	comf	(floorf@m+2)& (0+255),w,b
  5535  001F9A  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5536  001F9C  1D76               	comf	(floorf@m+3)& (0+255),w,b
  5537  001F9E  6F70               	movwf	(??_floorf+3)& (0+255),b
  5538  001FA0  516D               	movf	??_floorf& (0+255),w,b
  5539  001FA2  1779               	andwf	floorf@u& (0+255),f,b
  5540  001FA4  516E               	movf	(??_floorf+1)& (0+255),w,b
  5541  001FA6  177A               	andwf	(floorf@u+1)& (0+255),f,b
  5542  001FA8  516F               	movf	(??_floorf+2)& (0+255),w,b
  5543  001FAA  177B               	andwf	(floorf@u+2)& (0+255),f,b
  5544  001FAC  5170               	movf	(??_floorf+3)& (0+255),w,b
  5545  001FAE  177C               	andwf	(floorf@u+3)& (0+255),f,b
  5546  001FB0  EF1E  F010         	goto	l7408
  5547  001FB4                     l7400:
  5548                           
  5549                           ; BSR set to: 0
  5550  001FB4  C079  F06D         	movff	floorf@u,??_floorf
  5551  001FB8  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  5552  001FBC  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  5553  001FC0  C07C  F070         	movff	floorf@u+3,??_floorf+3
  5554  001FC4  0E20               	movlw	32
  5555  001FC6  EFEA  F00F         	goto	u7630
  5556  001FCA                     u7635:
  5557  001FCA  90D8               	bcf	status,0,c
  5558  001FCC  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5559  001FCE  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5560  001FD0  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5561  001FD2  336D               	rrcf	??_floorf& (0+255),f,b
  5562  001FD4                     u7630:
  5563  001FD4  2EE8               	decfsz	wreg,f,c
  5564  001FD6  EFE5  F00F         	goto	u7635
  5565  001FDA  516D               	movf	??_floorf& (0+255),w,b
  5566  001FDC  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5567  001FDE  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5568  001FE0  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5569  001FE2  A4D8               	btfss	status,2,c
  5570  001FE4  EFF6  F00F         	goto	u7641
  5571  001FE8  EFF8  F00F         	goto	u7640
  5572  001FEC                     u7641:
  5573  001FEC  EF02  F010         	goto	l7404
  5574  001FF0                     u7640:
  5575  001FF0                     
  5576                           ; BSR set to: 0
  5577  001FF0  0E00               	movlw	0
  5578  001FF2  6F79               	movwf	floorf@u& (0+255),b
  5579  001FF4  0E00               	movlw	0
  5580  001FF6  6F7A               	movwf	(floorf@u+1)& (0+255),b
  5581  001FF8  0E00               	movlw	0
  5582  001FFA  6F7B               	movwf	(floorf@u+2)& (0+255),b
  5583  001FFC  0E00               	movlw	0
  5584  001FFE  6F7C               	movwf	(floorf@u+3)& (0+255),b
  5585  002000  EF1E  F010         	goto	l7408
  5586  002004                     l7404:
  5587                           
  5588                           ; BSR set to: 0
  5589  002004  90D8               	bcf	status,0,c
  5590  002006  3579               	rlcf	floorf@u& (0+255),w,b
  5591  002008  6F6D               	movwf	??_floorf& (0+255),b
  5592  00200A  357A               	rlcf	(floorf@u+1)& (0+255),w,b
  5593  00200C  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5594  00200E  357B               	rlcf	(floorf@u+2)& (0+255),w,b
  5595  002010  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5596  002012  357C               	rlcf	(floorf@u+3)& (0+255),w,b
  5597  002014  6F70               	movwf	(??_floorf+3)& (0+255),b
  5598  002016  516D               	movf	??_floorf& (0+255),w,b
  5599  002018  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5600  00201A  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5601  00201C  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5602  00201E  B4D8               	btfsc	status,2,c
  5603  002020  EF14  F010         	goto	u7651
  5604  002024  EF16  F010         	goto	u7650
  5605  002028                     u7651:
  5606  002028  EF1E  F010         	goto	l7408
  5607  00202C                     u7650:
  5608  00202C                     
  5609                           ; BSR set to: 0
  5610  00202C  0E00               	movlw	0
  5611  00202E  6F79               	movwf	floorf@u& (0+255),b
  5612  002030  0E00               	movlw	0
  5613  002032  6F7A               	movwf	(floorf@u+1)& (0+255),b
  5614  002034  0E80               	movlw	128
  5615  002036  6F7B               	movwf	(floorf@u+2)& (0+255),b
  5616  002038  0EBF               	movlw	191
  5617  00203A  6F7C               	movwf	(floorf@u+3)& (0+255),b
  5618  00203C                     l7408:
  5619                           
  5620                           ; BSR set to: 0
  5621  00203C  C079  F026         	movff	floorf@u,?_floorf
  5622  002040  C07A  F027         	movff	floorf@u+1,?_floorf+1
  5623  002044  C07B  F028         	movff	floorf@u+2,?_floorf+2
  5624  002048  C07C  F029         	movff	floorf@u+3,?_floorf+3
  5625  00204C                     l1705:
  5626                           
  5627                           ; BSR set to: 0
  5628  00204C  0012               	return		;funcret
  5629  00204E                     __end_of_floorf:
  5630                           	callstack 0
  5631                           
  5632 ;; *************** function ___fpclassifyf *****************
  5633 ;; Defined at:
  5634 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__fpclassifyf.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;  x               4   25[COMRAM] float 
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;  u               4   35[COMRAM] struct .
  5639 ;;  e               2   33[COMRAM] int 
  5640 ;; Return value:  Size  Location     Type
  5641 ;;                  2   25[COMRAM] int 
  5642 ;; Registers used:
  5643 ;;		wreg, status,2, status,0
  5644 ;; Tracked objects:
  5645 ;;		On entry : 0/0
  5646 ;;		On exit  : 0/0
  5647 ;;		Unchanged: 0/0
  5648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5650 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5651 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5652 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5653 ;;Total ram usage:       14 bytes
  5654 ;; Hardware stack levels used:    1
  5655 ;; Hardware stack levels required when called:    7
  5656 ;; This function calls:
  5657 ;;		Nothing
  5658 ;; This function is called by:
  5659 ;;		_efgtoa
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           	psect	text15
  5664  002906                     __ptext15:
  5665                           	callstack 0
  5666  002906                     ___fpclassifyf:
  5667                           	callstack 19
  5668  002906  C032  F024         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5669  00290A  C033  F025         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5670  00290E  C034  F026         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5671  002912  C035  F027         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5672  002916  C01A  F024         	movff	___fpclassifyf@x,___fpclassifyf@u
  5673  00291A  C01B  F025         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5674  00291E  C01C  F026         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5675  002922  C01D  F027         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5676  002926  C024  F01E         	movff	___fpclassifyf@u,??___fpclassifyf
  5677  00292A  C025  F01F         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5678  00292E  C026  F020         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5679  002932  C027  F021         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5680  002936  0E18               	movlw	24
  5681  002938  EFA3  F014         	goto	u7440
  5682  00293C                     u7445:
  5683  00293C  90D8               	bcf	status,0,c
  5684  00293E  3221               	rrcf	(??___fpclassifyf+3)^0,f,c
  5685  002940  3220               	rrcf	(??___fpclassifyf+2)^0,f,c
  5686  002942  321F               	rrcf	(??___fpclassifyf+1)^0,f,c
  5687  002944  321E               	rrcf	??___fpclassifyf^0,f,c
  5688  002946                     u7440:
  5689  002946  2EE8               	decfsz	wreg,f,c
  5690  002948  EF9E  F014         	goto	u7445
  5691  00294C  501E               	movf	??___fpclassifyf^0,w,c
  5692  00294E  6E22               	movwf	___fpclassifyf@e^0,c
  5693  002950  6A23               	clrf	(___fpclassifyf@e+1)^0,c
  5694  002952  5022               	movf	___fpclassifyf@e^0,w,c
  5695  002954  1023               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5696  002956  A4D8               	btfss	status,2,c
  5697  002958  EFB0  F014         	goto	u7451
  5698  00295C  EFB2  F014         	goto	u7450
  5699  002960                     u7451:
  5700  002960  EFD2  F014         	goto	l7360
  5701  002964                     u7450:
  5702  002964  90D8               	bcf	status,0,c
  5703  002966  3424               	rlcf	___fpclassifyf@u^0,w,c
  5704  002968  6E1E               	movwf	??___fpclassifyf^0,c
  5705  00296A  3425               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5706  00296C  6E1F               	movwf	(??___fpclassifyf+1)^0,c
  5707  00296E  3426               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5708  002970  6E20               	movwf	(??___fpclassifyf+2)^0,c
  5709  002972  3427               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5710  002974  6E21               	movwf	(??___fpclassifyf+3)^0,c
  5711  002976  501E               	movf	??___fpclassifyf^0,w,c
  5712  002978  101F               	iorwf	(??___fpclassifyf+1)^0,w,c
  5713  00297A  1020               	iorwf	(??___fpclassifyf+2)^0,w,c
  5714  00297C  1021               	iorwf	(??___fpclassifyf+3)^0,w,c
  5715  00297E  A4D8               	btfss	status,2,c
  5716  002980  EFC4  F014         	goto	u7461
  5717  002984  EFC6  F014         	goto	u7460
  5718  002988                     u7461:
  5719  002988  EFCC  F014         	goto	l7356
  5720  00298C                     u7460:
  5721  00298C  0E00               	movlw	0
  5722  00298E  6E1B               	movwf	(?___fpclassifyf+1)^0,c
  5723  002990  0E02               	movlw	2
  5724  002992  6E1A               	movwf	?___fpclassifyf^0,c
  5725  002994  EF01  F015         	goto	l1667
  5726  002998                     l7356:
  5727  002998  0E00               	movlw	0
  5728  00299A  6E1B               	movwf	(?___fpclassifyf+1)^0,c
  5729  00299C  0E03               	movlw	3
  5730  00299E  6E1A               	movwf	?___fpclassifyf^0,c
  5731  0029A0  EF01  F015         	goto	l1667
  5732  0029A4                     l7360:
  5733  0029A4  2822               	incf	___fpclassifyf@e^0,w,c
  5734  0029A6  1023               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5735  0029A8  A4D8               	btfss	status,2,c
  5736  0029AA  EFD9  F014         	goto	u7471
  5737  0029AE  EFDB  F014         	goto	u7470
  5738  0029B2                     u7471:
  5739  0029B2  EFFD  F014         	goto	l7366
  5740  0029B6                     u7470:
  5741  0029B6  C024  F01E         	movff	___fpclassifyf@u,??___fpclassifyf
  5742  0029BA  C025  F01F         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5743  0029BE  C026  F020         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5744  0029C2  C027  F021         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5745  0029C6  0E09               	movlw	9
  5746  0029C8                     u7485:
  5747  0029C8  90D8               	bcf	status,0,c
  5748  0029CA  361E               	rlcf	??___fpclassifyf^0,f,c
  5749  0029CC  361F               	rlcf	(??___fpclassifyf+1)^0,f,c
  5750  0029CE  3620               	rlcf	(??___fpclassifyf+2)^0,f,c
  5751  0029D0  3621               	rlcf	(??___fpclassifyf+3)^0,f,c
  5752  0029D2  2EE8               	decfsz	wreg,f,c
  5753  0029D4  EFE4  F014         	goto	u7485
  5754  0029D8  501E               	movf	??___fpclassifyf^0,w,c
  5755  0029DA  101F               	iorwf	(??___fpclassifyf+1)^0,w,c
  5756  0029DC  1020               	iorwf	(??___fpclassifyf+2)^0,w,c
  5757  0029DE  1021               	iorwf	(??___fpclassifyf+3)^0,w,c
  5758  0029E0  B4D8               	btfsc	status,2,c
  5759  0029E2  EFF5  F014         	goto	u7491
  5760  0029E6  EFF8  F014         	goto	u7490
  5761  0029EA                     u7491:
  5762  0029EA  0E01               	movlw	1
  5763  0029EC  EFF9  F014         	goto	u7500
  5764  0029F0                     u7490:
  5765  0029F0  0E00               	movlw	0
  5766  0029F2                     u7500:
  5767  0029F2  6E1A               	movwf	?___fpclassifyf^0,c
  5768  0029F4  6A1B               	clrf	(?___fpclassifyf+1)^0,c
  5769  0029F6  EF01  F015         	goto	l1667
  5770  0029FA                     l7366:
  5771  0029FA  0E00               	movlw	0
  5772  0029FC  6E1B               	movwf	(?___fpclassifyf+1)^0,c
  5773  0029FE  0E04               	movlw	4
  5774  002A00  6E1A               	movwf	?___fpclassifyf^0,c
  5775  002A02                     l1667:
  5776  002A02  0012               	return		;funcret
  5777  002A04                     __end_of___fpclassifyf:
  5778                           	callstack 0
  5779                           
  5780 ;; *************** function ___fltol *****************
  5781 ;; Defined at:
  5782 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  5783 ;; Parameters:    Size  Location     Type
  5784 ;;  f1              4   25[COMRAM] int 
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;  exp1            1   34[COMRAM] unsigned char 
  5787 ;;  sign1           1   33[COMRAM] unsigned char 
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  4   25[COMRAM] long 
  5790 ;; Registers used:
  5791 ;;		wreg, status,2, status,0
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5797 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5798 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5799 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5800 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5801 ;;Total ram usage:       10 bytes
  5802 ;; Hardware stack levels used:    1
  5803 ;; Hardware stack levels required when called:    7
  5804 ;; This function calls:
  5805 ;;		Nothing
  5806 ;; This function is called by:
  5807 ;;		_efgtoa
  5808 ;; This function uses a non-reentrant model
  5809 ;;
  5810                           
  5811                           	psect	text16
  5812  0026FA                     __ptext16:
  5813                           	callstack 0
  5814  0026FA                     ___fltol:
  5815                           	callstack 19
  5816  0026FA  341C               	rlcf	(___fltol@f1+2)^0,w,c
  5817  0026FC  341D               	rlcf	(___fltol@f1+3)^0,w,c
  5818  0026FE  6E23               	movwf	___fltol@exp1^0,c
  5819  002700  5023               	movf	___fltol@exp1^0,w,c
  5820  002702  A4D8               	btfss	status,2,c
  5821  002704  EF86  F013         	goto	u7331
  5822  002708  EF88  F013         	goto	u7330
  5823  00270C                     u7331:
  5824  00270C  EF92  F013         	goto	l7288
  5825  002710                     u7330:
  5826  002710                     l7284:
  5827  002710  0E00               	movlw	0
  5828  002712  6E1A               	movwf	?___fltol^0,c
  5829  002714  0E00               	movlw	0
  5830  002716  6E1B               	movwf	(?___fltol+1)^0,c
  5831  002718  0E00               	movlw	0
  5832  00271A  6E1C               	movwf	(?___fltol+2)^0,c
  5833  00271C  0E00               	movlw	0
  5834  00271E  6E1D               	movwf	(?___fltol+3)^0,c
  5835  002720  EFFF  F013         	goto	l1106
  5836  002724                     l7288:
  5837  002724  C01A  F01E         	movff	___fltol@f1,??___fltol
  5838  002728  C01B  F01F         	movff	___fltol@f1+1,??___fltol+1
  5839  00272C  C01C  F020         	movff	___fltol@f1+2,??___fltol+2
  5840  002730  C01D  F021         	movff	___fltol@f1+3,??___fltol+3
  5841  002734  0E20               	movlw	32
  5842  002736  EFA2  F013         	goto	u7340
  5843  00273A                     u7345:
  5844  00273A  90D8               	bcf	status,0,c
  5845  00273C  3221               	rrcf	(??___fltol+3)^0,f,c
  5846  00273E  3220               	rrcf	(??___fltol+2)^0,f,c
  5847  002740  321F               	rrcf	(??___fltol+1)^0,f,c
  5848  002742  321E               	rrcf	??___fltol^0,f,c
  5849  002744                     u7340:
  5850  002744  2EE8               	decfsz	wreg,f,c
  5851  002746  EF9D  F013         	goto	u7345
  5852  00274A  501E               	movf	??___fltol^0,w,c
  5853  00274C  6E22               	movwf	___fltol@sign1^0,c
  5854  00274E  8E1C               	bsf	(___fltol@f1+2)^0,7,c
  5855  002750  0EFF               	movlw	255
  5856  002752  161A               	andwf	___fltol@f1^0,f,c
  5857  002754  0EFF               	movlw	255
  5858  002756  161B               	andwf	(___fltol@f1+1)^0,f,c
  5859  002758  0EFF               	movlw	255
  5860  00275A  161C               	andwf	(___fltol@f1+2)^0,f,c
  5861  00275C  0E00               	movlw	0
  5862  00275E  161D               	andwf	(___fltol@f1+3)^0,f,c
  5863  002760  0E96               	movlw	150
  5864  002762  5E23               	subwf	___fltol@exp1^0,f,c
  5865  002764  BE23               	btfsc	___fltol@exp1^0,7,c
  5866  002766  EFB9  F013         	goto	u7350
  5867  00276A  EFB7  F013         	goto	u7351
  5868  00276E                     u7351:
  5869  00276E  EFCF  F013         	goto	l7308
  5870  002772                     u7350:
  5871  002772  5023               	movf	___fltol@exp1^0,w,c
  5872  002774  0A80               	xorlw	128
  5873  002776  0F97               	addlw	151
  5874  002778  B0D8               	btfsc	status,0,c
  5875  00277A  EFC1  F013         	goto	u7361
  5876  00277E  EFC3  F013         	goto	u7360
  5877  002782                     u7361:
  5878  002782  EFC5  F013         	goto	l7304
  5879  002786                     u7360:
  5880  002786  EF88  F013         	goto	l7284
  5881  00278A                     l7304:
  5882  00278A  90D8               	bcf	status,0,c
  5883  00278C  321D               	rrcf	(___fltol@f1+3)^0,f,c
  5884  00278E  321C               	rrcf	(___fltol@f1+2)^0,f,c
  5885  002790  321B               	rrcf	(___fltol@f1+1)^0,f,c
  5886  002792  321A               	rrcf	___fltol@f1^0,f,c
  5887  002794  3E23               	incfsz	___fltol@exp1^0,f,c
  5888  002796  EFC5  F013         	goto	l7304
  5889  00279A  EFE7  F013         	goto	l7318
  5890  00279E                     l7308:
  5891  00279E  0E1F               	movlw	31
  5892  0027A0  6423               	cpfsgt	___fltol@exp1^0,c
  5893  0027A2  EFD5  F013         	goto	u7371
  5894  0027A6  EFD7  F013         	goto	u7370
  5895  0027AA                     u7371:
  5896  0027AA  EFDF  F013         	goto	l7316
  5897  0027AE                     u7370:
  5898  0027AE  EF88  F013         	goto	l7284
  5899  0027B2                     l7314:
  5900  0027B2  90D8               	bcf	status,0,c
  5901  0027B4  361A               	rlcf	___fltol@f1^0,f,c
  5902  0027B6  361B               	rlcf	(___fltol@f1+1)^0,f,c
  5903  0027B8  361C               	rlcf	(___fltol@f1+2)^0,f,c
  5904  0027BA  361D               	rlcf	(___fltol@f1+3)^0,f,c
  5905  0027BC  0623               	decf	___fltol@exp1^0,f,c
  5906  0027BE                     l7316:
  5907  0027BE  5023               	movf	___fltol@exp1^0,w,c
  5908  0027C0  A4D8               	btfss	status,2,c
  5909  0027C2  EFE5  F013         	goto	u7381
  5910  0027C6  EFE7  F013         	goto	u7380
  5911  0027CA                     u7381:
  5912  0027CA  EFD9  F013         	goto	l7314
  5913  0027CE                     u7380:
  5914  0027CE                     l7318:
  5915  0027CE  5022               	movf	___fltol@sign1^0,w,c
  5916  0027D0  B4D8               	btfsc	status,2,c
  5917  0027D2  EFED  F013         	goto	u7391
  5918  0027D6  EFEF  F013         	goto	u7390
  5919  0027DA                     u7391:
  5920  0027DA  EFF7  F013         	goto	l7322
  5921  0027DE                     u7390:
  5922  0027DE  1E1D               	comf	(___fltol@f1+3)^0,f,c
  5923  0027E0  1E1C               	comf	(___fltol@f1+2)^0,f,c
  5924  0027E2  1E1B               	comf	(___fltol@f1+1)^0,f,c
  5925  0027E4  6C1A               	negf	___fltol@f1^0,c
  5926  0027E6  0E00               	movlw	0
  5927  0027E8  221B               	addwfc	(___fltol@f1+1)^0,f,c
  5928  0027EA  221C               	addwfc	(___fltol@f1+2)^0,f,c
  5929  0027EC  221D               	addwfc	(___fltol@f1+3)^0,f,c
  5930  0027EE                     l7322:
  5931  0027EE  C01A  F01A         	movff	___fltol@f1,?___fltol
  5932  0027F2  C01B  F01B         	movff	___fltol@f1+1,?___fltol+1
  5933  0027F6  C01C  F01C         	movff	___fltol@f1+2,?___fltol+2
  5934  0027FA  C01D  F01D         	movff	___fltol@f1+3,?___fltol+3
  5935  0027FE                     l1106:
  5936  0027FE  0012               	return		;funcret
  5937  002800                     __end_of___fltol:
  5938                           	callstack 0
  5939                           
  5940 ;; *************** function ___flsub *****************
  5941 ;; Defined at:
  5942 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcadd.c"
  5943 ;; Parameters:    Size  Location     Type
  5944 ;;  b               4   25[BANK0 ] long 
  5945 ;;  a               4   29[BANK0 ] long 
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;		None
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  4   25[BANK0 ] long 
  5950 ;; Registers used:
  5951 ;;		wreg, status,2, status,0, cstack
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5957 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5960 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5961 ;;Total ram usage:        8 bytes
  5962 ;; Hardware stack levels used:    1
  5963 ;; Hardware stack levels required when called:    8
  5964 ;; This function calls:
  5965 ;;		___fladd
  5966 ;; This function is called by:
  5967 ;;		_efgtoa
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           	psect	text17
  5972  0035AA                     __ptext17:
  5973                           	callstack 0
  5974  0035AA                     ___flsub:
  5975                           	callstack 18
  5976  0035AA  0E00               	movlw	0
  5977  0035AC  0100               	movlb	0	; () banked
  5978  0035AE  1B7D               	xorwf	___flsub@a& (0+255),f,b
  5979  0035B0  0E00               	movlw	0
  5980  0035B2  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
  5981  0035B4  0E00               	movlw	0
  5982  0035B6  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
  5983  0035B8  0E80               	movlw	128
  5984  0035BA  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
  5985  0035BC                     
  5986                           ; BSR set to: 0
  5987  0035BC  C079  F01A         	movff	___flsub@b,___fladd@b
  5988  0035C0  C07A  F01B         	movff	___flsub@b+1,___fladd@b+1
  5989  0035C4  C07B  F01C         	movff	___flsub@b+2,___fladd@b+2
  5990  0035C8  C07C  F01D         	movff	___flsub@b+3,___fladd@b+3
  5991  0035CC  C07D  F01E         	movff	___flsub@a,___fladd@a
  5992  0035D0  C07E  F01F         	movff	___flsub@a+1,___fladd@a+1
  5993  0035D4  C07F  F020         	movff	___flsub@a+2,___fladd@a+2
  5994  0035D8  C080  F021         	movff	___flsub@a+3,___fladd@a+3
  5995  0035DC  EC95  F006         	call	___fladd	;wreg free
  5996  0035E0  C01A  F079         	movff	?___fladd,?___flsub
  5997  0035E4  C01B  F07A         	movff	?___fladd+1,?___flsub+1
  5998  0035E8  C01C  F07B         	movff	?___fladd+2,?___flsub+2
  5999  0035EC  C01D  F07C         	movff	?___fladd+3,?___flsub+3
  6000  0035F0  0012               	return		;funcret
  6001  0035F2                     __end_of___flsub:
  6002                           	callstack 0
  6003                           
  6004 ;; *************** function ___fladd *****************
  6005 ;; Defined at:
  6006 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcadd.c"
  6007 ;; Parameters:    Size  Location     Type
  6008 ;;  b               4   25[COMRAM] long 
  6009 ;;  a               4   29[COMRAM] long 
  6010 ;; Auto vars:     Size  Location     Type
  6011 ;;  grs             1   40[COMRAM] unsigned char 
  6012 ;;  bexp            1   39[COMRAM] unsigned char 
  6013 ;;  aexp            1   38[COMRAM] unsigned char 
  6014 ;;  signs           1   37[COMRAM] unsigned char 
  6015 ;; Return value:  Size  Location     Type
  6016 ;;                  4   25[COMRAM] unsigned char 
  6017 ;; Registers used:
  6018 ;;		wreg, status,2, status,0
  6019 ;; Tracked objects:
  6020 ;;		On entry : 0/0
  6021 ;;		On exit  : 0/0
  6022 ;;		Unchanged: 0/0
  6023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6024 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6025 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6026 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6027 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6028 ;;Total ram usage:       16 bytes
  6029 ;; Hardware stack levels used:    1
  6030 ;; Hardware stack levels required when called:    7
  6031 ;; This function calls:
  6032 ;;		Nothing
  6033 ;; This function is called by:
  6034 ;;		___flsub
  6035 ;;		_efgtoa
  6036 ;; This function uses a non-reentrant model
  6037 ;;
  6038                           
  6039                           	psect	text18
  6040  000D2A                     __ptext18:
  6041                           	callstack 0
  6042  000D2A                     ___fladd:
  6043                           	callstack 18
  6044  000D2A  501D               	movf	(___fladd@b+3)^0,w,c
  6045  000D2C  0B80               	andlw	128
  6046  000D2E  6E26               	movwf	___fladd@signs^0,c
  6047  000D30  501D               	movf	(___fladd@b+3)^0,w,c
  6048  000D32  241D               	addwf	(___fladd@b+3)^0,w,c
  6049  000D34  6E28               	movwf	___fladd@bexp^0,c
  6050  000D36  AE1C               	btfss	(___fladd@b+2)^0,7,c
  6051  000D38  EFA0  F006         	goto	u6271
  6052  000D3C  EFA2  F006         	goto	u6270
  6053  000D40                     u6271:
  6054  000D40  EFA3  F006         	goto	l6658
  6055  000D44                     u6270:
  6056  000D44  8028               	bsf	___fladd@bexp^0,0,c
  6057  000D46                     l6658:
  6058  000D46  5028               	movf	___fladd@bexp^0,w,c
  6059  000D48  B4D8               	btfsc	status,2,c
  6060  000D4A  EFA9  F006         	goto	u6281
  6061  000D4E  EFAB  F006         	goto	u6280
  6062  000D52                     u6281:
  6063  000D52  EFC0  F006         	goto	l6668
  6064  000D56                     u6280:
  6065  000D56  2828               	incf	___fladd@bexp^0,w,c
  6066  000D58  A4D8               	btfss	status,2,c
  6067  000D5A  EFB1  F006         	goto	u6291
  6068  000D5E  EFB3  F006         	goto	u6290
  6069  000D62                     u6291:
  6070  000D62  EFBB  F006         	goto	l6664
  6071  000D66                     u6290:
  6072  000D66  0E00               	movlw	0
  6073  000D68  6E1A               	movwf	___fladd@b^0,c
  6074  000D6A  0E00               	movlw	0
  6075  000D6C  6E1B               	movwf	(___fladd@b+1)^0,c
  6076  000D6E  0E00               	movlw	0
  6077  000D70  6E1C               	movwf	(___fladd@b+2)^0,c
  6078  000D72  0E00               	movlw	0
  6079  000D74  6E1D               	movwf	(___fladd@b+3)^0,c
  6080  000D76                     l6664:
  6081  000D76  8E1C               	bsf	(___fladd@b+2)^0,7,c
  6082  000D78  0E00               	movlw	0
  6083  000D7A  6E1D               	movwf	(___fladd@b+3)^0,c
  6084  000D7C  EFC8  F006         	goto	l6670
  6085  000D80                     l6668:
  6086  000D80  0E00               	movlw	0
  6087  000D82  6E1A               	movwf	___fladd@b^0,c
  6088  000D84  0E00               	movlw	0
  6089  000D86  6E1B               	movwf	(___fladd@b+1)^0,c
  6090  000D88  0E00               	movlw	0
  6091  000D8A  6E1C               	movwf	(___fladd@b+2)^0,c
  6092  000D8C  0E00               	movlw	0
  6093  000D8E  6E1D               	movwf	(___fladd@b+3)^0,c
  6094  000D90                     l6670:
  6095  000D90  5021               	movf	(___fladd@a+3)^0,w,c
  6096  000D92  0B80               	andlw	128
  6097  000D94  6E27               	movwf	___fladd@aexp^0,c
  6098  000D96  5026               	movf	___fladd@signs^0,w,c
  6099  000D98  1827               	xorwf	___fladd@aexp^0,w,c
  6100  000D9A  B4D8               	btfsc	status,2,c
  6101  000D9C  EFD2  F006         	goto	u6301
  6102  000DA0  EFD4  F006         	goto	u6300
  6103  000DA4                     u6301:
  6104  000DA4  EFD5  F006         	goto	l6676
  6105  000DA8                     u6300:
  6106  000DA8  8C26               	bsf	___fladd@signs^0,6,c
  6107  000DAA                     l6676:
  6108  000DAA  5021               	movf	(___fladd@a+3)^0,w,c
  6109  000DAC  2421               	addwf	(___fladd@a+3)^0,w,c
  6110  000DAE  6E27               	movwf	___fladd@aexp^0,c
  6111  000DB0  AE20               	btfss	(___fladd@a+2)^0,7,c
  6112  000DB2  EFDD  F006         	goto	u6311
  6113  000DB6  EFDF  F006         	goto	u6310
  6114  000DBA                     u6311:
  6115  000DBA  EFE0  F006         	goto	l6682
  6116  000DBE                     u6310:
  6117  000DBE  8027               	bsf	___fladd@aexp^0,0,c
  6118  000DC0                     l6682:
  6119  000DC0  5027               	movf	___fladd@aexp^0,w,c
  6120  000DC2  B4D8               	btfsc	status,2,c
  6121  000DC4  EFE6  F006         	goto	u6321
  6122  000DC8  EFE8  F006         	goto	u6320
  6123  000DCC                     u6321:
  6124  000DCC  EFFD  F006         	goto	l6692
  6125  000DD0                     u6320:
  6126  000DD0  2827               	incf	___fladd@aexp^0,w,c
  6127  000DD2  A4D8               	btfss	status,2,c
  6128  000DD4  EFEE  F006         	goto	u6331
  6129  000DD8  EFF0  F006         	goto	u6330
  6130  000DDC                     u6331:
  6131  000DDC  EFF8  F006         	goto	l6688
  6132  000DE0                     u6330:
  6133  000DE0  0E00               	movlw	0
  6134  000DE2  6E1E               	movwf	___fladd@a^0,c
  6135  000DE4  0E00               	movlw	0
  6136  000DE6  6E1F               	movwf	(___fladd@a+1)^0,c
  6137  000DE8  0E00               	movlw	0
  6138  000DEA  6E20               	movwf	(___fladd@a+2)^0,c
  6139  000DEC  0E00               	movlw	0
  6140  000DEE  6E21               	movwf	(___fladd@a+3)^0,c
  6141  000DF0                     l6688:
  6142  000DF0  8E20               	bsf	(___fladd@a+2)^0,7,c
  6143  000DF2  0E00               	movlw	0
  6144  000DF4  6E21               	movwf	(___fladd@a+3)^0,c
  6145  000DF6  EF05  F007         	goto	l6694
  6146  000DFA                     l6692:
  6147  000DFA  0E00               	movlw	0
  6148  000DFC  6E1E               	movwf	___fladd@a^0,c
  6149  000DFE  0E00               	movlw	0
  6150  000E00  6E1F               	movwf	(___fladd@a+1)^0,c
  6151  000E02  0E00               	movlw	0
  6152  000E04  6E20               	movwf	(___fladd@a+2)^0,c
  6153  000E06  0E00               	movlw	0
  6154  000E08  6E21               	movwf	(___fladd@a+3)^0,c
  6155  000E0A                     l6694:
  6156  000E0A  5028               	movf	___fladd@bexp^0,w,c
  6157  000E0C  5C27               	subwf	___fladd@aexp^0,w,c
  6158  000E0E  B0D8               	btfsc	status,0,c
  6159  000E10  EF0C  F007         	goto	u6341
  6160  000E14  EF0E  F007         	goto	u6340
  6161  000E18                     u6341:
  6162  000E18  EF35  F007         	goto	l6730
  6163  000E1C                     u6340:
  6164  000E1C  AC26               	btfss	___fladd@signs^0,6,c
  6165  000E1E  EF13  F007         	goto	u6351
  6166  000E22  EF15  F007         	goto	u6350
  6167  000E26                     u6351:
  6168  000E26  EF17  F007         	goto	l6700
  6169  000E2A                     u6350:
  6170  000E2A  0E80               	movlw	128
  6171  000E2C  1A26               	xorwf	___fladd@signs^0,f,c
  6172  000E2E                     l6700:
  6173  000E2E  C028  F029         	movff	___fladd@bexp,___fladd@grs
  6174  000E32  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  6175  000E36  C029  F027         	movff	___fladd@grs,___fladd@aexp
  6176  000E3A  C01A  F029         	movff	___fladd@b,___fladd@grs
  6177  000E3E  C01E  F01A         	movff	___fladd@a,___fladd@b
  6178  000E42  C029  F01E         	movff	___fladd@grs,___fladd@a
  6179  000E46  C01B  F029         	movff	___fladd@b+1,___fladd@grs
  6180  000E4A  C01F  F01B         	movff	___fladd@a+1,___fladd@b+1
  6181  000E4E  C029  F01F         	movff	___fladd@grs,___fladd@a+1
  6182  000E52  C01C  F029         	movff	___fladd@b+2,___fladd@grs
  6183  000E56  C020  F01C         	movff	___fladd@a+2,___fladd@b+2
  6184  000E5A  C029  F020         	movff	___fladd@grs,___fladd@a+2
  6185  000E5E  C01D  F029         	movff	___fladd@b+3,___fladd@grs
  6186  000E62  C021  F01D         	movff	___fladd@a+3,___fladd@b+3
  6187  000E66  C029  F021         	movff	___fladd@grs,___fladd@a+3
  6188  000E6A                     l6730:
  6189  000E6A  0E00               	movlw	0
  6190  000E6C  6E29               	movwf	___fladd@grs^0,c
  6191  000E6E  5028               	movf	___fladd@bexp^0,w,c
  6192  000E70  C027  F022         	movff	___fladd@aexp,??___fladd
  6193  000E74  6A23               	clrf	(??___fladd+1)^0,c
  6194  000E76  5E22               	subwf	??___fladd^0,f,c
  6195  000E78  0E00               	movlw	0
  6196  000E7A  5A23               	subwfb	(??___fladd+1)^0,f,c
  6197  000E7C  BE23               	btfsc	(??___fladd+1)^0,7,c
  6198  000E7E  EF4A  F007         	goto	u6361
  6199  000E82  5023               	movf	(??___fladd+1)^0,w,c
  6200  000E84  E109               	bnz	u6360
  6201  000E86  0E1A               	movlw	26
  6202  000E88  5C22               	subwf	??___fladd^0,w,c
  6203  000E8A  A0D8               	btfss	status,0,c
  6204  000E8C  EF4A  F007         	goto	u6361
  6205  000E90  EF4C  F007         	goto	u6360
  6206  000E94                     u6361:
  6207  000E94  EF83  F007         	goto	l1338
  6208  000E98                     u6360:
  6209  000E98  501A               	movf	___fladd@b^0,w,c
  6210  000E9A  101B               	iorwf	(___fladd@b+1)^0,w,c
  6211  000E9C  101C               	iorwf	(___fladd@b+2)^0,w,c
  6212  000E9E  101D               	iorwf	(___fladd@b+3)^0,w,c
  6213  000EA0  A4D8               	btfss	status,2,c
  6214  000EA2  EF55  F007         	goto	u6371
  6215  000EA6  EF58  F007         	goto	u6370
  6216  000EAA                     u6371:
  6217  000EAA  0E01               	movlw	1
  6218  000EAC  EF59  F007         	goto	u6380
  6219  000EB0                     u6370:
  6220  000EB0  0E00               	movlw	0
  6221  000EB2                     u6380:
  6222  000EB2  6E29               	movwf	___fladd@grs^0,c
  6223  000EB4  0E00               	movlw	0
  6224  000EB6  6E1A               	movwf	___fladd@b^0,c
  6225  000EB8  0E00               	movlw	0
  6226  000EBA  6E1B               	movwf	(___fladd@b+1)^0,c
  6227  000EBC  0E00               	movlw	0
  6228  000EBE  6E1C               	movwf	(___fladd@b+2)^0,c
  6229  000EC0  0E00               	movlw	0
  6230  000EC2  6E1D               	movwf	(___fladd@b+3)^0,c
  6231  000EC4  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  6232  000EC8  EF8C  F007         	goto	l1337
  6233  000ECC                     l1339:
  6234  000ECC  A029               	btfss	___fladd@grs^0,0,c
  6235  000ECE  EF6B  F007         	goto	u6391
  6236  000ED2  EF6D  F007         	goto	u6390
  6237  000ED6                     u6391:
  6238  000ED6  EF73  F007         	goto	l6742
  6239  000EDA                     u6390:
  6240  000EDA  90D8               	bcf	status,0,c
  6241  000EDC  3029               	rrcf	___fladd@grs^0,w,c
  6242  000EDE  0901               	iorlw	1
  6243  000EE0  6E29               	movwf	___fladd@grs^0,c
  6244  000EE2  EF75  F007         	goto	l6744
  6245  000EE6                     l6742:
  6246  000EE6  90D8               	bcf	status,0,c
  6247  000EE8  3229               	rrcf	___fladd@grs^0,f,c
  6248  000EEA                     l6744:
  6249  000EEA  A01A               	btfss	___fladd@b^0,0,c
  6250  000EEC  EF7A  F007         	goto	u6401
  6251  000EF0  EF7C  F007         	goto	u6400
  6252  000EF4                     u6401:
  6253  000EF4  EF7D  F007         	goto	l6748
  6254  000EF8                     u6400:
  6255  000EF8  8E29               	bsf	___fladd@grs^0,7,c
  6256  000EFA                     l6748:
  6257  000EFA  341D               	rlcf	(___fladd@b+3)^0,w,c
  6258  000EFC  321D               	rrcf	(___fladd@b+3)^0,f,c
  6259  000EFE  321C               	rrcf	(___fladd@b+2)^0,f,c
  6260  000F00  321B               	rrcf	(___fladd@b+1)^0,f,c
  6261  000F02  321A               	rrcf	___fladd@b^0,f,c
  6262  000F04  2A28               	incf	___fladd@bexp^0,f,c
  6263  000F06                     l1338:
  6264  000F06  5027               	movf	___fladd@aexp^0,w,c
  6265  000F08  5C28               	subwf	___fladd@bexp^0,w,c
  6266  000F0A  A0D8               	btfss	status,0,c
  6267  000F0C  EF8A  F007         	goto	u6411
  6268  000F10  EF8C  F007         	goto	u6410
  6269  000F14                     u6411:
  6270  000F14  EF66  F007         	goto	l1339
  6271  000F18                     u6410:
  6272  000F18                     l1337:
  6273  000F18  BC26               	btfsc	___fladd@signs^0,6,c
  6274  000F1A  EF91  F007         	goto	u6421
  6275  000F1E  EF93  F007         	goto	u6420
  6276  000F22                     u6421:
  6277  000F22  EFD3  F007         	goto	l6776
  6278  000F26                     u6420:
  6279  000F26  5028               	movf	___fladd@bexp^0,w,c
  6280  000F28  A4D8               	btfss	status,2,c
  6281  000F2A  EF99  F007         	goto	u6431
  6282  000F2E  EF9B  F007         	goto	u6430
  6283  000F32                     u6431:
  6284  000F32  EFA5  F007         	goto	l6758
  6285  000F36                     u6430:
  6286  000F36  0E00               	movlw	0
  6287  000F38  6E1A               	movwf	?___fladd^0,c
  6288  000F3A  0E00               	movlw	0
  6289  000F3C  6E1B               	movwf	(?___fladd+1)^0,c
  6290  000F3E  0E00               	movlw	0
  6291  000F40  6E1C               	movwf	(?___fladd+2)^0,c
  6292  000F42  0E00               	movlw	0
  6293  000F44  6E1D               	movwf	(?___fladd+3)^0,c
  6294  000F46  EFF4  F008         	goto	l1346
  6295  000F4A                     l6758:
  6296  000F4A  501E               	movf	___fladd@a^0,w,c
  6297  000F4C  261A               	addwf	___fladd@b^0,f,c
  6298  000F4E  501F               	movf	(___fladd@a+1)^0,w,c
  6299  000F50  221B               	addwfc	(___fladd@b+1)^0,f,c
  6300  000F52  5020               	movf	(___fladd@a+2)^0,w,c
  6301  000F54  221C               	addwfc	(___fladd@b+2)^0,f,c
  6302  000F56  5021               	movf	(___fladd@a+3)^0,w,c
  6303  000F58  221D               	addwfc	(___fladd@b+3)^0,f,c
  6304  000F5A  A01D               	btfss	(___fladd@b+3)^0,0,c
  6305  000F5C  EFB2  F007         	goto	u6441
  6306  000F60  EFB4  F007         	goto	u6440
  6307  000F64                     u6441:
  6308  000F64  EF60  F008         	goto	l6812
  6309  000F68                     u6440:
  6310  000F68  A029               	btfss	___fladd@grs^0,0,c
  6311  000F6A  EFB9  F007         	goto	u6451
  6312  000F6E  EFBB  F007         	goto	u6450
  6313  000F72                     u6451:
  6314  000F72  EFC1  F007         	goto	l6766
  6315  000F76                     u6450:
  6316  000F76  90D8               	bcf	status,0,c
  6317  000F78  3029               	rrcf	___fladd@grs^0,w,c
  6318  000F7A  0901               	iorlw	1
  6319  000F7C  6E29               	movwf	___fladd@grs^0,c
  6320  000F7E  EFC3  F007         	goto	l6768
  6321  000F82                     l6766:
  6322  000F82  90D8               	bcf	status,0,c
  6323  000F84  3229               	rrcf	___fladd@grs^0,f,c
  6324  000F86                     l6768:
  6325  000F86  A01A               	btfss	___fladd@b^0,0,c
  6326  000F88  EFC8  F007         	goto	u6461
  6327  000F8C  EFCA  F007         	goto	u6460
  6328  000F90                     u6461:
  6329  000F90  EFCB  F007         	goto	l6772
  6330  000F94                     u6460:
  6331  000F94  8E29               	bsf	___fladd@grs^0,7,c
  6332  000F96                     l6772:
  6333  000F96  341D               	rlcf	(___fladd@b+3)^0,w,c
  6334  000F98  321D               	rrcf	(___fladd@b+3)^0,f,c
  6335  000F9A  321C               	rrcf	(___fladd@b+2)^0,f,c
  6336  000F9C  321B               	rrcf	(___fladd@b+1)^0,f,c
  6337  000F9E  321A               	rrcf	___fladd@b^0,f,c
  6338  000FA0  2A28               	incf	___fladd@bexp^0,f,c
  6339  000FA2  EF60  F008         	goto	l6812
  6340  000FA6                     l6776:
  6341  000FA6  501E               	movf	___fladd@a^0,w,c
  6342  000FA8  5C1A               	subwf	___fladd@b^0,w,c
  6343  000FAA  501F               	movf	(___fladd@a+1)^0,w,c
  6344  000FAC  581B               	subwfb	(___fladd@b+1)^0,w,c
  6345  000FAE  5020               	movf	(___fladd@a+2)^0,w,c
  6346  000FB0  581C               	subwfb	(___fladd@b+2)^0,w,c
  6347  000FB2  501D               	movf	(___fladd@b+3)^0,w,c
  6348  000FB4  0A80               	xorlw	128
  6349  000FB6  6E22               	movwf	??___fladd^0,c
  6350  000FB8  5021               	movf	(___fladd@a+3)^0,w,c
  6351  000FBA  0A80               	xorlw	128
  6352  000FBC  5822               	subwfb	??___fladd^0,w,c
  6353  000FBE  B0D8               	btfsc	status,0,c
  6354  000FC0  EFE4  F007         	goto	u6471
  6355  000FC4  EFE6  F007         	goto	u6470
  6356  000FC8                     u6471:
  6357  000FC8  EF11  F008         	goto	l6786
  6358  000FCC                     u6470:
  6359  000FCC  501A               	movf	___fladd@b^0,w,c
  6360  000FCE  5C1E               	subwf	___fladd@a^0,w,c
  6361  000FD0  6E22               	movwf	??___fladd^0,c
  6362  000FD2  501B               	movf	(___fladd@b+1)^0,w,c
  6363  000FD4  581F               	subwfb	(___fladd@a+1)^0,w,c
  6364  000FD6  6E23               	movwf	(??___fladd+1)^0,c
  6365  000FD8  501C               	movf	(___fladd@b+2)^0,w,c
  6366  000FDA  5820               	subwfb	(___fladd@a+2)^0,w,c
  6367  000FDC  6E24               	movwf	(??___fladd+2)^0,c
  6368  000FDE  501D               	movf	(___fladd@b+3)^0,w,c
  6369  000FE0  5821               	subwfb	(___fladd@a+3)^0,w,c
  6370  000FE2  6E25               	movwf	(??___fladd+3)^0,c
  6371  000FE4  0EFF               	movlw	255
  6372  000FE6  2422               	addwf	??___fladd^0,w,c
  6373  000FE8  6E1A               	movwf	___fladd@b^0,c
  6374  000FEA  0EFF               	movlw	255
  6375  000FEC  2023               	addwfc	(??___fladd+1)^0,w,c
  6376  000FEE  6E1B               	movwf	(___fladd@b+1)^0,c
  6377  000FF0  0EFF               	movlw	255
  6378  000FF2  2024               	addwfc	(??___fladd+2)^0,w,c
  6379  000FF4  6E1C               	movwf	(___fladd@b+2)^0,c
  6380  000FF6  0EFF               	movlw	255
  6381  000FF8  2025               	addwfc	(??___fladd+3)^0,w,c
  6382  000FFA  6E1D               	movwf	(___fladd@b+3)^0,c
  6383  000FFC  0E80               	movlw	128
  6384  000FFE  1A26               	xorwf	___fladd@signs^0,f,c
  6385  001000  6C29               	negf	___fladd@grs^0,c
  6386  001002  5029               	movf	___fladd@grs^0,w,c
  6387  001004  A4D8               	btfss	status,2,c
  6388  001006  EF07  F008         	goto	u6481
  6389  00100A  EF09  F008         	goto	u6480
  6390  00100E                     u6481:
  6391  00100E  EF19  F008         	goto	l1354
  6392  001012                     u6480:
  6393  001012  0E01               	movlw	1
  6394  001014  261A               	addwf	___fladd@b^0,f,c
  6395  001016  0E00               	movlw	0
  6396  001018  221B               	addwfc	(___fladd@b+1)^0,f,c
  6397  00101A  221C               	addwfc	(___fladd@b+2)^0,f,c
  6398  00101C  221D               	addwfc	(___fladd@b+3)^0,f,c
  6399  00101E  EF19  F008         	goto	l1354
  6400  001022                     l6786:
  6401  001022  501E               	movf	___fladd@a^0,w,c
  6402  001024  5E1A               	subwf	___fladd@b^0,f,c
  6403  001026  501F               	movf	(___fladd@a+1)^0,w,c
  6404  001028  5A1B               	subwfb	(___fladd@b+1)^0,f,c
  6405  00102A  5020               	movf	(___fladd@a+2)^0,w,c
  6406  00102C  5A1C               	subwfb	(___fladd@b+2)^0,f,c
  6407  00102E  5021               	movf	(___fladd@a+3)^0,w,c
  6408  001030  5A1D               	subwfb	(___fladd@b+3)^0,f,c
  6409  001032                     l1354:
  6410  001032  501A               	movf	___fladd@b^0,w,c
  6411  001034  101B               	iorwf	(___fladd@b+1)^0,w,c
  6412  001036  101C               	iorwf	(___fladd@b+2)^0,w,c
  6413  001038  101D               	iorwf	(___fladd@b+3)^0,w,c
  6414  00103A  A4D8               	btfss	status,2,c
  6415  00103C  EF22  F008         	goto	u6491
  6416  001040  EF24  F008         	goto	u6490
  6417  001044                     u6491:
  6418  001044  EF59  F008         	goto	l6810
  6419  001048                     u6490:
  6420  001048  5029               	movf	___fladd@grs^0,w,c
  6421  00104A  A4D8               	btfss	status,2,c
  6422  00104C  EF2A  F008         	goto	u6501
  6423  001050  EF2C  F008         	goto	u6500
  6424  001054                     u6501:
  6425  001054  EF59  F008         	goto	l6810
  6426  001058                     u6500:
  6427  001058  0E00               	movlw	0
  6428  00105A  6E1A               	movwf	?___fladd^0,c
  6429  00105C  0E00               	movlw	0
  6430  00105E  6E1B               	movwf	(?___fladd+1)^0,c
  6431  001060  0E00               	movlw	0
  6432  001062  6E1C               	movwf	(?___fladd+2)^0,c
  6433  001064  0E00               	movlw	0
  6434  001066  6E1D               	movwf	(?___fladd+3)^0,c
  6435  001068  EFF4  F008         	goto	l1346
  6436  00106C                     l6794:
  6437  00106C  90D8               	bcf	status,0,c
  6438  00106E  361A               	rlcf	___fladd@b^0,f,c
  6439  001070  361B               	rlcf	(___fladd@b+1)^0,f,c
  6440  001072  361C               	rlcf	(___fladd@b+2)^0,f,c
  6441  001074  361D               	rlcf	(___fladd@b+3)^0,f,c
  6442  001076  AE29               	btfss	___fladd@grs^0,7,c
  6443  001078  EF40  F008         	goto	u6511
  6444  00107C  EF42  F008         	goto	u6510
  6445  001080                     u6511:
  6446  001080  EF43  F008         	goto	l6800
  6447  001084                     u6510:
  6448  001084  801A               	bsf	___fladd@b^0,0,c
  6449  001086                     l6800:
  6450  001086  A029               	btfss	___fladd@grs^0,0,c
  6451  001088  EF48  F008         	goto	u6521
  6452  00108C  EF4A  F008         	goto	u6520
  6453  001090                     u6521:
  6454  001090  EF4E  F008         	goto	l6804
  6455  001094                     u6520:
  6456  001094  80D8               	bsf	status,0,c
  6457  001096  3629               	rlcf	___fladd@grs^0,f,c
  6458  001098  EF50  F008         	goto	l6806
  6459  00109C                     l6804:
  6460  00109C  90D8               	bcf	status,0,c
  6461  00109E  3629               	rlcf	___fladd@grs^0,f,c
  6462  0010A0                     l6806:
  6463  0010A0  5028               	movf	___fladd@bexp^0,w,c
  6464  0010A2  B4D8               	btfsc	status,2,c
  6465  0010A4  EF56  F008         	goto	u6531
  6466  0010A8  EF58  F008         	goto	u6530
  6467  0010AC                     u6531:
  6468  0010AC  EF59  F008         	goto	l6810
  6469  0010B0                     u6530:
  6470  0010B0  0628               	decf	___fladd@bexp^0,f,c
  6471  0010B2                     l6810:
  6472  0010B2  AE1C               	btfss	(___fladd@b+2)^0,7,c
  6473  0010B4  EF5E  F008         	goto	u6541
  6474  0010B8  EF60  F008         	goto	u6540
  6475  0010BC                     u6541:
  6476  0010BC  EF36  F008         	goto	l6794
  6477  0010C0                     u6540:
  6478  0010C0                     l6812:
  6479  0010C0  0E00               	movlw	0
  6480  0010C2  6E27               	movwf	___fladd@aexp^0,c
  6481  0010C4  AE29               	btfss	___fladd@grs^0,7,c
  6482  0010C6  EF67  F008         	goto	u6551
  6483  0010CA  EF69  F008         	goto	u6550
  6484  0010CE                     u6551:
  6485  0010CE  EF81  F008         	goto	l1363
  6486  0010D2                     u6550:
  6487  0010D2  C029  F022         	movff	___fladd@grs,??___fladd
  6488  0010D6  0E7F               	movlw	127
  6489  0010D8  1622               	andwf	??___fladd^0,f,c
  6490  0010DA  B4D8               	btfsc	status,2,c
  6491  0010DC  EF72  F008         	goto	u6561
  6492  0010E0  EF74  F008         	goto	u6560
  6493  0010E4                     u6561:
  6494  0010E4  EF78  F008         	goto	l1364
  6495  0010E8                     u6560:
  6496  0010E8                     l6818:
  6497  0010E8  0E01               	movlw	1
  6498  0010EA  6E27               	movwf	___fladd@aexp^0,c
  6499  0010EC  EF81  F008         	goto	l1363
  6500  0010F0                     l1364:
  6501  0010F0  A01A               	btfss	___fladd@b^0,0,c
  6502  0010F2  EF7D  F008         	goto	u6571
  6503  0010F6  EF7F  F008         	goto	u6570
  6504  0010FA                     u6571:
  6505  0010FA  EF81  F008         	goto	l1363
  6506  0010FE                     u6570:
  6507  0010FE  EF74  F008         	goto	l6818
  6508  001102                     l1363:
  6509  001102  5027               	movf	___fladd@aexp^0,w,c
  6510  001104  B4D8               	btfsc	status,2,c
  6511  001106  EF87  F008         	goto	u6581
  6512  00110A  EF89  F008         	goto	u6580
  6513  00110E                     u6581:
  6514  00110E  EFB4  F008         	goto	l6830
  6515  001112                     u6580:
  6516  001112  0E01               	movlw	1
  6517  001114  261A               	addwf	___fladd@b^0,f,c
  6518  001116  0E00               	movlw	0
  6519  001118  221B               	addwfc	(___fladd@b+1)^0,f,c
  6520  00111A  221C               	addwfc	(___fladd@b+2)^0,f,c
  6521  00111C  221D               	addwfc	(___fladd@b+3)^0,f,c
  6522  00111E  A01D               	btfss	(___fladd@b+3)^0,0,c
  6523  001120  EF94  F008         	goto	u6591
  6524  001124  EF96  F008         	goto	u6590
  6525  001128                     u6591:
  6526  001128  EFB4  F008         	goto	l6830
  6527  00112C                     u6590:
  6528  00112C  C01A  F022         	movff	___fladd@b,??___fladd
  6529  001130  C01B  F023         	movff	___fladd@b+1,??___fladd+1
  6530  001134  C01C  F024         	movff	___fladd@b+2,??___fladd+2
  6531  001138  C01D  F025         	movff	___fladd@b+3,??___fladd+3
  6532  00113C  3425               	rlcf	(??___fladd+3)^0,w,c
  6533  00113E  3225               	rrcf	(??___fladd+3)^0,f,c
  6534  001140  3224               	rrcf	(??___fladd+2)^0,f,c
  6535  001142  3223               	rrcf	(??___fladd+1)^0,f,c
  6536  001144  3222               	rrcf	??___fladd^0,f,c
  6537  001146  C022  F01A         	movff	??___fladd,___fladd@b
  6538  00114A  C023  F01B         	movff	??___fladd+1,___fladd@b+1
  6539  00114E  C024  F01C         	movff	??___fladd+2,___fladd@b+2
  6540  001152  C025  F01D         	movff	??___fladd+3,___fladd@b+3
  6541  001156  2828               	incf	___fladd@bexp^0,w,c
  6542  001158  B4D8               	btfsc	status,2,c
  6543  00115A  EFB1  F008         	goto	u6601
  6544  00115E  EFB3  F008         	goto	u6600
  6545  001162                     u6601:
  6546  001162  EFB4  F008         	goto	l6830
  6547  001166                     u6600:
  6548  001166  2A28               	incf	___fladd@bexp^0,f,c
  6549  001168                     l6830:
  6550  001168  2828               	incf	___fladd@bexp^0,w,c
  6551  00116A  B4D8               	btfsc	status,2,c
  6552  00116C  EFBA  F008         	goto	u6611
  6553  001170  EFBC  F008         	goto	u6610
  6554  001174                     u6611:
  6555  001174  EFC4  F008         	goto	l6834
  6556  001178                     u6610:
  6557  001178  5028               	movf	___fladd@bexp^0,w,c
  6558  00117A  A4D8               	btfss	status,2,c
  6559  00117C  EFC2  F008         	goto	u6621
  6560  001180  EFC4  F008         	goto	u6620
  6561  001184                     u6621:
  6562  001184  EFD6  F008         	goto	l6838
  6563  001188                     u6620:
  6564  001188                     l6834:
  6565  001188  0E00               	movlw	0
  6566  00118A  6E1A               	movwf	___fladd@b^0,c
  6567  00118C  0E00               	movlw	0
  6568  00118E  6E1B               	movwf	(___fladd@b+1)^0,c
  6569  001190  0E00               	movlw	0
  6570  001192  6E1C               	movwf	(___fladd@b+2)^0,c
  6571  001194  0E00               	movlw	0
  6572  001196  6E1D               	movwf	(___fladd@b+3)^0,c
  6573  001198  5028               	movf	___fladd@bexp^0,w,c
  6574  00119A  A4D8               	btfss	status,2,c
  6575  00119C  EFD2  F008         	goto	u6631
  6576  0011A0  EFD4  F008         	goto	u6630
  6577  0011A4                     u6631:
  6578  0011A4  EFD6  F008         	goto	l6838
  6579  0011A8                     u6630:
  6580  0011A8  0E00               	movlw	0
  6581  0011AA  6E26               	movwf	___fladd@signs^0,c
  6582  0011AC                     l6838:
  6583  0011AC  A028               	btfss	___fladd@bexp^0,0,c
  6584  0011AE  EFDB  F008         	goto	u6641
  6585  0011B2  EFDD  F008         	goto	u6640
  6586  0011B6                     u6641:
  6587  0011B6  EFE0  F008         	goto	l6842
  6588  0011BA                     u6640:
  6589  0011BA  8E1C               	bsf	(___fladd@b+2)^0,7,c
  6590  0011BC  EFE1  F008         	goto	l6844
  6591  0011C0                     l6842:
  6592  0011C0  9E1C               	bcf	(___fladd@b+2)^0,7,c
  6593  0011C2                     l6844:
  6594  0011C2  90D8               	bcf	status,0,c
  6595  0011C4  3028               	rrcf	___fladd@bexp^0,w,c
  6596  0011C6  6E1D               	movwf	(___fladd@b+3)^0,c
  6597  0011C8  AE26               	btfss	___fladd@signs^0,7,c
  6598  0011CA  EFE9  F008         	goto	u6651
  6599  0011CE  EFEB  F008         	goto	u6650
  6600  0011D2                     u6651:
  6601  0011D2  EFEC  F008         	goto	l6850
  6602  0011D6                     u6650:
  6603  0011D6  8E1D               	bsf	(___fladd@b+3)^0,7,c
  6604  0011D8                     l6850:
  6605  0011D8  C01A  F01A         	movff	___fladd@b,?___fladd
  6606  0011DC  C01B  F01B         	movff	___fladd@b+1,?___fladd+1
  6607  0011E0  C01C  F01C         	movff	___fladd@b+2,?___fladd+2
  6608  0011E4  C01D  F01D         	movff	___fladd@b+3,?___fladd+3
  6609  0011E8                     l1346:
  6610  0011E8  0012               	return		;funcret
  6611  0011EA                     __end_of___fladd:
  6612                           	callstack 0
  6613                           
  6614 ;; *************** function ___flneg *****************
  6615 ;; Defined at:
  6616 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\flneg.c"
  6617 ;; Parameters:    Size  Location     Type
  6618 ;;  f1              4   25[COMRAM] unsigned char 
  6619 ;; Auto vars:     Size  Location     Type
  6620 ;;		None
  6621 ;; Return value:  Size  Location     Type
  6622 ;;                  4   25[COMRAM] unsigned char 
  6623 ;; Registers used:
  6624 ;;		wreg, status,2, status,0
  6625 ;; Tracked objects:
  6626 ;;		On entry : 0/0
  6627 ;;		On exit  : 0/0
  6628 ;;		Unchanged: 0/0
  6629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6630 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6633 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6634 ;;Total ram usage:        4 bytes
  6635 ;; Hardware stack levels used:    1
  6636 ;; Hardware stack levels required when called:    7
  6637 ;; This function calls:
  6638 ;;		Nothing
  6639 ;; This function is called by:
  6640 ;;		_efgtoa
  6641 ;; This function uses a non-reentrant model
  6642 ;;
  6643                           
  6644                           	psect	text19
  6645  0036EE                     __ptext19:
  6646                           	callstack 0
  6647  0036EE                     ___flneg:
  6648                           	callstack 19
  6649  0036EE  501A               	movf	___flneg@f1^0,w,c
  6650  0036F0  101B               	iorwf	(___flneg@f1+1)^0,w,c
  6651  0036F2  101C               	iorwf	(___flneg@f1+2)^0,w,c
  6652  0036F4  101D               	iorwf	(___flneg@f1+3)^0,w,c
  6653  0036F6  B4D8               	btfsc	status,2,c
  6654  0036F8  EF80  F01B         	goto	u7321
  6655  0036FC  EF82  F01B         	goto	u7320
  6656  003700                     u7321:
  6657  003700  EF8A  F01B         	goto	l7278
  6658  003704                     u7320:
  6659  003704  0E00               	movlw	0
  6660  003706  1A1A               	xorwf	___flneg@f1^0,f,c
  6661  003708  0E00               	movlw	0
  6662  00370A  1A1B               	xorwf	(___flneg@f1+1)^0,f,c
  6663  00370C  0E00               	movlw	0
  6664  00370E  1A1C               	xorwf	(___flneg@f1+2)^0,f,c
  6665  003710  0E80               	movlw	128
  6666  003712  1A1D               	xorwf	(___flneg@f1+3)^0,f,c
  6667  003714                     l7278:
  6668  003714  C01A  F01A         	movff	___flneg@f1,?___flneg
  6669  003718  C01B  F01B         	movff	___flneg@f1+1,?___flneg+1
  6670  00371C  C01C  F01C         	movff	___flneg@f1+2,?___flneg+2
  6671  003720  C01D  F01D         	movff	___flneg@f1+3,?___flneg+3
  6672  003724  0012               	return		;funcret
  6673  003726                     __end_of___flneg:
  6674                           	callstack 0
  6675                           
  6676 ;; *************** function ___flge *****************
  6677 ;; Defined at:
  6678 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\flge.c"
  6679 ;; Parameters:    Size  Location     Type
  6680 ;;  ff1             4   25[BANK0 ] unsigned char 
  6681 ;;  ff2             4   29[BANK0 ] unsigned char 
  6682 ;; Auto vars:     Size  Location     Type
  6683 ;;		None
  6684 ;; Return value:  Size  Location     Type
  6685 ;;		None               void
  6686 ;; Registers used:
  6687 ;;		wreg, status,2, status,0
  6688 ;; Tracked objects:
  6689 ;;		On entry : 0/0
  6690 ;;		On exit  : 0/0
  6691 ;;		Unchanged: 0/0
  6692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6693 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6695 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6696 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6697 ;;Total ram usage:       12 bytes
  6698 ;; Hardware stack levels used:    1
  6699 ;; Hardware stack levels required when called:    7
  6700 ;; This function calls:
  6701 ;;		Nothing
  6702 ;; This function is called by:
  6703 ;;		_efgtoa
  6704 ;; This function uses a non-reentrant model
  6705 ;;
  6706                           
  6707                           	psect	text20
  6708  002800                     __ptext20:
  6709                           	callstack 0
  6710  002800                     ___flge:
  6711                           	callstack 19
  6712  002800  0E00               	movlw	0
  6713  002802  0100               	movlb	0	; () banked
  6714  002804  1579               	andwf	___flge@ff1& (0+255),w,b
  6715  002806  6F81               	movwf	??___flge& (0+255),b
  6716  002808  0E00               	movlw	0
  6717  00280A  157A               	andwf	(___flge@ff1+1)& (0+255),w,b
  6718  00280C  6F82               	movwf	(??___flge+1)& (0+255),b
  6719  00280E  0E80               	movlw	128
  6720  002810  157B               	andwf	(___flge@ff1+2)& (0+255),w,b
  6721  002812  6F83               	movwf	(??___flge+2)& (0+255),b
  6722  002814  0E7F               	movlw	127
  6723  002816  157C               	andwf	(___flge@ff1+3)& (0+255),w,b
  6724  002818  6F84               	movwf	(??___flge+3)& (0+255),b
  6725  00281A  5181               	movf	??___flge& (0+255),w,b
  6726  00281C  1182               	iorwf	(??___flge+1)& (0+255),w,b
  6727  00281E  1183               	iorwf	(??___flge+2)& (0+255),w,b
  6728  002820  1184               	iorwf	(??___flge+3)& (0+255),w,b
  6729  002822  A4D8               	btfss	status,2,c
  6730  002824  EF16  F014         	goto	u7271
  6731  002828  EF18  F014         	goto	u7270
  6732  00282C                     u7271:
  6733  00282C  EF20  F014         	goto	l7256
  6734  002830                     u7270:
  6735  002830                     
  6736                           ; BSR set to: 0
  6737  002830  0E00               	movlw	0
  6738  002832  6F79               	movwf	___flge@ff1& (0+255),b
  6739  002834  0E00               	movlw	0
  6740  002836  6F7A               	movwf	(___flge@ff1+1)& (0+255),b
  6741  002838  0E00               	movlw	0
  6742  00283A  6F7B               	movwf	(___flge@ff1+2)& (0+255),b
  6743  00283C  0E00               	movlw	0
  6744  00283E  6F7C               	movwf	(___flge@ff1+3)& (0+255),b
  6745  002840                     l7256:
  6746                           
  6747                           ; BSR set to: 0
  6748  002840  0E00               	movlw	0
  6749  002842  157D               	andwf	___flge@ff2& (0+255),w,b
  6750  002844  6F81               	movwf	??___flge& (0+255),b
  6751  002846  0E00               	movlw	0
  6752  002848  157E               	andwf	(___flge@ff2+1)& (0+255),w,b
  6753  00284A  6F82               	movwf	(??___flge+1)& (0+255),b
  6754  00284C  0E80               	movlw	128
  6755  00284E  157F               	andwf	(___flge@ff2+2)& (0+255),w,b
  6756  002850  6F83               	movwf	(??___flge+2)& (0+255),b
  6757  002852  0E7F               	movlw	127
  6758  002854  1580               	andwf	(___flge@ff2+3)& (0+255),w,b
  6759  002856  6F84               	movwf	(??___flge+3)& (0+255),b
  6760  002858  5181               	movf	??___flge& (0+255),w,b
  6761  00285A  1182               	iorwf	(??___flge+1)& (0+255),w,b
  6762  00285C  1183               	iorwf	(??___flge+2)& (0+255),w,b
  6763  00285E  1184               	iorwf	(??___flge+3)& (0+255),w,b
  6764  002860  A4D8               	btfss	status,2,c
  6765  002862  EF35  F014         	goto	u7281
  6766  002866  EF37  F014         	goto	u7280
  6767  00286A                     u7281:
  6768  00286A  EF3F  F014         	goto	l7260
  6769  00286E                     u7280:
  6770  00286E                     
  6771                           ; BSR set to: 0
  6772  00286E  0E00               	movlw	0
  6773  002870  6F7D               	movwf	___flge@ff2& (0+255),b
  6774  002872  0E00               	movlw	0
  6775  002874  6F7E               	movwf	(___flge@ff2+1)& (0+255),b
  6776  002876  0E00               	movlw	0
  6777  002878  6F7F               	movwf	(___flge@ff2+2)& (0+255),b
  6778  00287A  0E00               	movlw	0
  6779  00287C  6F80               	movwf	(___flge@ff2+3)& (0+255),b
  6780  00287E                     l7260:
  6781                           
  6782                           ; BSR set to: 0
  6783  00287E  AF7C               	btfss	(___flge@ff1+3)& (0+255),7,b
  6784  002880  EF44  F014         	goto	u7291
  6785  002884  EF46  F014         	goto	u7290
  6786  002888                     u7291:
  6787  002888  EF4F  F014         	goto	l7264
  6788  00288C                     u7290:
  6789  00288C                     
  6790                           ; BSR set to: 0
  6791  00288C  6D79               	negf	___flge@ff1& (0+255),b
  6792  00288E  1F7A               	comf	(___flge@ff1+1)& (0+255),f,b
  6793  002890  B0D8               	btfsc	status,0,c
  6794  002892  2B7A               	incf	(___flge@ff1+1)& (0+255),f,b
  6795  002894  1F7B               	comf	(___flge@ff1+2)& (0+255),f,b
  6796  002896  B0D8               	btfsc	status,0,c
  6797  002898  2B7B               	incf	(___flge@ff1+2)& (0+255),f,b
  6798  00289A  0E80               	movlw	128
  6799  00289C  577C               	subfwb	(___flge@ff1+3)& (0+255),f,b
  6800  00289E                     l7264:
  6801                           
  6802                           ; BSR set to: 0
  6803  00289E  AF80               	btfss	(___flge@ff2+3)& (0+255),7,b
  6804  0028A0  EF54  F014         	goto	u7301
  6805  0028A4  EF56  F014         	goto	u7300
  6806  0028A8                     u7301:
  6807  0028A8  EF5F  F014         	goto	l1074
  6808  0028AC                     u7300:
  6809  0028AC                     
  6810                           ; BSR set to: 0
  6811  0028AC  6D7D               	negf	___flge@ff2& (0+255),b
  6812  0028AE  1F7E               	comf	(___flge@ff2+1)& (0+255),f,b
  6813  0028B0  B0D8               	btfsc	status,0,c
  6814  0028B2  2B7E               	incf	(___flge@ff2+1)& (0+255),f,b
  6815  0028B4  1F7F               	comf	(___flge@ff2+2)& (0+255),f,b
  6816  0028B6  B0D8               	btfsc	status,0,c
  6817  0028B8  2B7F               	incf	(___flge@ff2+2)& (0+255),f,b
  6818  0028BA  0E80               	movlw	128
  6819  0028BC  5780               	subfwb	(___flge@ff2+3)& (0+255),f,b
  6820  0028BE                     l1074:
  6821                           
  6822                           ; BSR set to: 0
  6823  0028BE  0E00               	movlw	0
  6824  0028C0  1B79               	xorwf	___flge@ff1& (0+255),f,b
  6825  0028C2  0E00               	movlw	0
  6826  0028C4  1B7A               	xorwf	(___flge@ff1+1)& (0+255),f,b
  6827  0028C6  0E00               	movlw	0
  6828  0028C8  1B7B               	xorwf	(___flge@ff1+2)& (0+255),f,b
  6829  0028CA  0E80               	movlw	128
  6830  0028CC  1B7C               	xorwf	(___flge@ff1+3)& (0+255),f,b
  6831  0028CE  0E00               	movlw	0
  6832  0028D0  1B7D               	xorwf	___flge@ff2& (0+255),f,b
  6833  0028D2  0E00               	movlw	0
  6834  0028D4  1B7E               	xorwf	(___flge@ff2+1)& (0+255),f,b
  6835  0028D6  0E00               	movlw	0
  6836  0028D8  1B7F               	xorwf	(___flge@ff2+2)& (0+255),f,b
  6837  0028DA  0E80               	movlw	128
  6838  0028DC  1B80               	xorwf	(___flge@ff2+3)& (0+255),f,b
  6839  0028DE  517D               	movf	___flge@ff2& (0+255),w,b
  6840  0028E0  5D79               	subwf	___flge@ff1& (0+255),w,b
  6841  0028E2  517E               	movf	(___flge@ff2+1)& (0+255),w,b
  6842  0028E4  597A               	subwfb	(___flge@ff1+1)& (0+255),w,b
  6843  0028E6  517F               	movf	(___flge@ff2+2)& (0+255),w,b
  6844  0028E8  597B               	subwfb	(___flge@ff1+2)& (0+255),w,b
  6845  0028EA  5180               	movf	(___flge@ff2+3)& (0+255),w,b
  6846  0028EC  597C               	subwfb	(___flge@ff1+3)& (0+255),w,b
  6847  0028EE  B0D8               	btfsc	status,0,c
  6848  0028F0  EF7C  F014         	goto	u7311
  6849  0028F4  EF7E  F014         	goto	u7310
  6850  0028F8                     u7311:
  6851  0028F8  EF81  F014         	goto	l7270
  6852  0028FC                     u7310:
  6853  0028FC                     
  6854                           ; BSR set to: 0
  6855  0028FC  90D8               	bcf	status,0,c
  6856  0028FE  EF82  F014         	goto	l1079
  6857  002902                     l7270:
  6858                           
  6859                           ; BSR set to: 0
  6860  002902  80D8               	bsf	status,0,c
  6861  002904                     l1079:
  6862                           
  6863                           ; BSR set to: 0
  6864  002904  0012               	return		;funcret
  6865  002906                     __end_of___flge:
  6866                           	callstack 0
  6867                           
  6868 ;; *************** function ___fleq *****************
  6869 ;; Defined at:
  6870 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fleq.c"
  6871 ;; Parameters:    Size  Location     Type
  6872 ;;  ff1             4   25[COMRAM] unsigned char 
  6873 ;;  ff2             4   29[COMRAM] unsigned char 
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;		None
  6876 ;; Return value:  Size  Location     Type
  6877 ;;		None               void
  6878 ;; Registers used:
  6879 ;;		wreg, status,2, status,0
  6880 ;; Tracked objects:
  6881 ;;		On entry : 0/0
  6882 ;;		On exit  : 0/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6885 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6887 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6888 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6889 ;;Total ram usage:       12 bytes
  6890 ;; Hardware stack levels used:    1
  6891 ;; Hardware stack levels required when called:    7
  6892 ;; This function calls:
  6893 ;;		Nothing
  6894 ;; This function is called by:
  6895 ;;		_efgtoa
  6896 ;; This function uses a non-reentrant model
  6897 ;;
  6898                           
  6899                           	psect	text21
  6900  002F78                     __ptext21:
  6901                           	callstack 0
  6902  002F78                     ___fleq:
  6903                           	callstack 19
  6904  002F78  0E00               	movlw	0
  6905  002F7A  141A               	andwf	___fleq@ff1^0,w,c
  6906  002F7C  6E22               	movwf	??___fleq^0,c
  6907  002F7E  0E00               	movlw	0
  6908  002F80  141B               	andwf	(___fleq@ff1+1)^0,w,c
  6909  002F82  6E23               	movwf	(??___fleq+1)^0,c
  6910  002F84  0E80               	movlw	128
  6911  002F86  141C               	andwf	(___fleq@ff1+2)^0,w,c
  6912  002F88  6E24               	movwf	(??___fleq+2)^0,c
  6913  002F8A  0E7F               	movlw	127
  6914  002F8C  141D               	andwf	(___fleq@ff1+3)^0,w,c
  6915  002F8E  6E25               	movwf	(??___fleq+3)^0,c
  6916  002F90  5022               	movf	??___fleq^0,w,c
  6917  002F92  1023               	iorwf	(??___fleq+1)^0,w,c
  6918  002F94  1024               	iorwf	(??___fleq+2)^0,w,c
  6919  002F96  1025               	iorwf	(??___fleq+3)^0,w,c
  6920  002F98  A4D8               	btfss	status,2,c
  6921  002F9A  EFD1  F017         	goto	u7241
  6922  002F9E  EFD3  F017         	goto	u7240
  6923  002FA2                     u7241:
  6924  002FA2  EFDB  F017         	goto	l7240
  6925  002FA6                     u7240:
  6926  002FA6  0E00               	movlw	0
  6927  002FA8  6E1A               	movwf	___fleq@ff1^0,c
  6928  002FAA  0E00               	movlw	0
  6929  002FAC  6E1B               	movwf	(___fleq@ff1+1)^0,c
  6930  002FAE  0E00               	movlw	0
  6931  002FB0  6E1C               	movwf	(___fleq@ff1+2)^0,c
  6932  002FB2  0E00               	movlw	0
  6933  002FB4  6E1D               	movwf	(___fleq@ff1+3)^0,c
  6934  002FB6                     l7240:
  6935  002FB6  0E00               	movlw	0
  6936  002FB8  141E               	andwf	___fleq@ff2^0,w,c
  6937  002FBA  6E22               	movwf	??___fleq^0,c
  6938  002FBC  0E00               	movlw	0
  6939  002FBE  141F               	andwf	(___fleq@ff2+1)^0,w,c
  6940  002FC0  6E23               	movwf	(??___fleq+1)^0,c
  6941  002FC2  0E80               	movlw	128
  6942  002FC4  1420               	andwf	(___fleq@ff2+2)^0,w,c
  6943  002FC6  6E24               	movwf	(??___fleq+2)^0,c
  6944  002FC8  0E7F               	movlw	127
  6945  002FCA  1421               	andwf	(___fleq@ff2+3)^0,w,c
  6946  002FCC  6E25               	movwf	(??___fleq+3)^0,c
  6947  002FCE  5022               	movf	??___fleq^0,w,c
  6948  002FD0  1023               	iorwf	(??___fleq+1)^0,w,c
  6949  002FD2  1024               	iorwf	(??___fleq+2)^0,w,c
  6950  002FD4  1025               	iorwf	(??___fleq+3)^0,w,c
  6951  002FD6  A4D8               	btfss	status,2,c
  6952  002FD8  EFF0  F017         	goto	u7251
  6953  002FDC  EFF2  F017         	goto	u7250
  6954  002FE0                     u7251:
  6955  002FE0  EFFA  F017         	goto	l7244
  6956  002FE4                     u7250:
  6957  002FE4  0E00               	movlw	0
  6958  002FE6  6E1E               	movwf	___fleq@ff2^0,c
  6959  002FE8  0E00               	movlw	0
  6960  002FEA  6E1F               	movwf	(___fleq@ff2+1)^0,c
  6961  002FEC  0E00               	movlw	0
  6962  002FEE  6E20               	movwf	(___fleq@ff2+2)^0,c
  6963  002FF0  0E00               	movlw	0
  6964  002FF2  6E21               	movwf	(___fleq@ff2+3)^0,c
  6965  002FF4                     l7244:
  6966  002FF4  501E               	movf	___fleq@ff2^0,w,c
  6967  002FF6  181A               	xorwf	___fleq@ff1^0,w,c
  6968  002FF8  E10F               	bnz	u7260
  6969  002FFA  501F               	movf	(___fleq@ff2+1)^0,w,c
  6970  002FFC  181B               	xorwf	(___fleq@ff1+1)^0,w,c
  6971  002FFE  E10C               	bnz	u7260
  6972  003000  5020               	movf	(___fleq@ff2+2)^0,w,c
  6973  003002  181C               	xorwf	(___fleq@ff1+2)^0,w,c
  6974  003004  E109               	bnz	u7260
  6975  003006  5021               	movf	(___fleq@ff2+3)^0,w,c
  6976  003008  181D               	xorwf	(___fleq@ff1+3)^0,w,c
  6977  00300A  B4D8               	btfsc	status,2,c
  6978  00300C  EF0A  F018         	goto	u7261
  6979  003010  EF0C  F018         	goto	u7260
  6980  003014                     u7261:
  6981  003014  EF0F  F018         	goto	l7248
  6982  003018                     u7260:
  6983  003018  90D8               	bcf	status,0,c
  6984  00301A  EF10  F018         	goto	l1068
  6985  00301E                     l7248:
  6986  00301E  80D8               	bsf	status,0,c
  6987  003020                     l1068:
  6988  003020  0012               	return		;funcret
  6989  003022                     __end_of___fleq:
  6990                           	callstack 0
  6991                           
  6992 ;; *************** function ___awmod *****************
  6993 ;; Defined at:
  6994 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  6995 ;; Parameters:    Size  Location     Type
  6996 ;;  dividend        2   25[COMRAM] int 
  6997 ;;  divisor         2   27[COMRAM] int 
  6998 ;; Auto vars:     Size  Location     Type
  6999 ;;  sign            1   30[COMRAM] unsigned char 
  7000 ;;  counter         1   29[COMRAM] unsigned char 
  7001 ;; Return value:  Size  Location     Type
  7002 ;;                  2   25[COMRAM] int 
  7003 ;; Registers used:
  7004 ;;		wreg, status,2, status,0
  7005 ;; Tracked objects:
  7006 ;;		On entry : 0/0
  7007 ;;		On exit  : 0/0
  7008 ;;		Unchanged: 0/0
  7009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7010 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7011 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7013 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7014 ;;Total ram usage:        6 bytes
  7015 ;; Hardware stack levels used:    1
  7016 ;; Hardware stack levels required when called:    7
  7017 ;; This function calls:
  7018 ;;		Nothing
  7019 ;; This function is called by:
  7020 ;;		_efgtoa
  7021 ;;		_I2CSIMPLE_example
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           	psect	text22
  7026  002EC8                     __ptext22:
  7027                           	callstack 0
  7028  002EC8                     ___awmod:
  7029                           	callstack 19
  7030  002EC8  0E00               	movlw	0
  7031  002ECA  6E1F               	movwf	___awmod@sign^0,c
  7032  002ECC  BE1B               	btfsc	(___awmod@dividend+1)^0,7,c
  7033  002ECE  EF6D  F017         	goto	u7180
  7034  002ED2  EF6B  F017         	goto	u7181
  7035  002ED6                     u7181:
  7036  002ED6  EF73  F017         	goto	l7208
  7037  002EDA                     u7180:
  7038  002EDA  6C1A               	negf	___awmod@dividend^0,c
  7039  002EDC  1E1B               	comf	(___awmod@dividend+1)^0,f,c
  7040  002EDE  B0D8               	btfsc	status,0,c
  7041  002EE0  2A1B               	incf	(___awmod@dividend+1)^0,f,c
  7042  002EE2  0E01               	movlw	1
  7043  002EE4  6E1F               	movwf	___awmod@sign^0,c
  7044  002EE6                     l7208:
  7045  002EE6  BE1D               	btfsc	(___awmod@divisor+1)^0,7,c
  7046  002EE8  EF7A  F017         	goto	u7190
  7047  002EEC  EF78  F017         	goto	u7191
  7048  002EF0                     u7191:
  7049  002EF0  EF7E  F017         	goto	l7212
  7050  002EF4                     u7190:
  7051  002EF4  6C1C               	negf	___awmod@divisor^0,c
  7052  002EF6  1E1D               	comf	(___awmod@divisor+1)^0,f,c
  7053  002EF8  B0D8               	btfsc	status,0,c
  7054  002EFA  2A1D               	incf	(___awmod@divisor+1)^0,f,c
  7055  002EFC                     l7212:
  7056  002EFC  501C               	movf	___awmod@divisor^0,w,c
  7057  002EFE  101D               	iorwf	(___awmod@divisor+1)^0,w,c
  7058  002F00  B4D8               	btfsc	status,2,c
  7059  002F02  EF85  F017         	goto	u7201
  7060  002F06  EF87  F017         	goto	u7200
  7061  002F0A                     u7201:
  7062  002F0A  EFAB  F017         	goto	l7228
  7063  002F0E                     u7200:
  7064  002F0E  0E01               	movlw	1
  7065  002F10  6E1E               	movwf	___awmod@counter^0,c
  7066  002F12  EF8F  F017         	goto	l7218
  7067  002F16                     l7216:
  7068  002F16  90D8               	bcf	status,0,c
  7069  002F18  361C               	rlcf	___awmod@divisor^0,f,c
  7070  002F1A  361D               	rlcf	(___awmod@divisor+1)^0,f,c
  7071  002F1C  2A1E               	incf	___awmod@counter^0,f,c
  7072  002F1E                     l7218:
  7073  002F1E  AE1D               	btfss	(___awmod@divisor+1)^0,7,c
  7074  002F20  EF94  F017         	goto	u7211
  7075  002F24  EF96  F017         	goto	u7210
  7076  002F28                     u7211:
  7077  002F28  EF8B  F017         	goto	l7216
  7078  002F2C                     u7210:
  7079  002F2C                     l7220:
  7080  002F2C  501C               	movf	___awmod@divisor^0,w,c
  7081  002F2E  5C1A               	subwf	___awmod@dividend^0,w,c
  7082  002F30  501D               	movf	(___awmod@divisor+1)^0,w,c
  7083  002F32  581B               	subwfb	(___awmod@dividend+1)^0,w,c
  7084  002F34  A0D8               	btfss	status,0,c
  7085  002F36  EF9F  F017         	goto	u7221
  7086  002F3A  EFA1  F017         	goto	u7220
  7087  002F3E                     u7221:
  7088  002F3E  EFA5  F017         	goto	l7224
  7089  002F42                     u7220:
  7090  002F42  501C               	movf	___awmod@divisor^0,w,c
  7091  002F44  5E1A               	subwf	___awmod@dividend^0,f,c
  7092  002F46  501D               	movf	(___awmod@divisor+1)^0,w,c
  7093  002F48  5A1B               	subwfb	(___awmod@dividend+1)^0,f,c
  7094  002F4A                     l7224:
  7095  002F4A  90D8               	bcf	status,0,c
  7096  002F4C  321D               	rrcf	(___awmod@divisor+1)^0,f,c
  7097  002F4E  321C               	rrcf	___awmod@divisor^0,f,c
  7098  002F50  2E1E               	decfsz	___awmod@counter^0,f,c
  7099  002F52  EF96  F017         	goto	l7220
  7100  002F56                     l7228:
  7101  002F56  501F               	movf	___awmod@sign^0,w,c
  7102  002F58  B4D8               	btfsc	status,2,c
  7103  002F5A  EFB1  F017         	goto	u7231
  7104  002F5E  EFB3  F017         	goto	u7230
  7105  002F62                     u7231:
  7106  002F62  EFB7  F017         	goto	l7232
  7107  002F66                     u7230:
  7108  002F66  6C1A               	negf	___awmod@dividend^0,c
  7109  002F68  1E1B               	comf	(___awmod@dividend+1)^0,f,c
  7110  002F6A  B0D8               	btfsc	status,0,c
  7111  002F6C  2A1B               	incf	(___awmod@dividend+1)^0,f,c
  7112  002F6E                     l7232:
  7113  002F6E  C01A  F01A         	movff	___awmod@dividend,?___awmod
  7114  002F72  C01B  F01B         	movff	___awmod@dividend+1,?___awmod+1
  7115  002F76  0012               	return		;funcret
  7116  002F78                     __end_of___awmod:
  7117                           	callstack 0
  7118                           
  7119 ;; *************** function ___awdiv *****************
  7120 ;; Defined at:
  7121 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  7122 ;; Parameters:    Size  Location     Type
  7123 ;;  dividend        2   25[COMRAM] int 
  7124 ;;  divisor         2   27[COMRAM] int 
  7125 ;; Auto vars:     Size  Location     Type
  7126 ;;  quotient        2   31[COMRAM] int 
  7127 ;;  sign            1   30[COMRAM] unsigned char 
  7128 ;;  counter         1   29[COMRAM] unsigned char 
  7129 ;; Return value:  Size  Location     Type
  7130 ;;                  2   25[COMRAM] int 
  7131 ;; Registers used:
  7132 ;;		wreg, status,2, status,0
  7133 ;; Tracked objects:
  7134 ;;		On entry : 0/0
  7135 ;;		On exit  : 0/0
  7136 ;;		Unchanged: 0/0
  7137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7138 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7139 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7141 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7142 ;;Total ram usage:        8 bytes
  7143 ;; Hardware stack levels used:    1
  7144 ;; Hardware stack levels required when called:    7
  7145 ;; This function calls:
  7146 ;;		Nothing
  7147 ;; This function is called by:
  7148 ;;		_efgtoa
  7149 ;; This function uses a non-reentrant model
  7150 ;;
  7151                           
  7152                           	psect	text23
  7153  002D40                     __ptext23:
  7154                           	callstack 0
  7155  002D40                     ___awdiv:
  7156                           	callstack 19
  7157  002D40  0E00               	movlw	0
  7158  002D42  6E1F               	movwf	___awdiv@sign^0,c
  7159  002D44  BE1D               	btfsc	(___awdiv@divisor+1)^0,7,c
  7160  002D46  EFA9  F016         	goto	u7120
  7161  002D4A  EFA7  F016         	goto	u7121
  7162  002D4E                     u7121:
  7163  002D4E  EFAF  F016         	goto	l7164
  7164  002D52                     u7120:
  7165  002D52  6C1C               	negf	___awdiv@divisor^0,c
  7166  002D54  1E1D               	comf	(___awdiv@divisor+1)^0,f,c
  7167  002D56  B0D8               	btfsc	status,0,c
  7168  002D58  2A1D               	incf	(___awdiv@divisor+1)^0,f,c
  7169  002D5A  0E01               	movlw	1
  7170  002D5C  6E1F               	movwf	___awdiv@sign^0,c
  7171  002D5E                     l7164:
  7172  002D5E  BE1B               	btfsc	(___awdiv@dividend+1)^0,7,c
  7173  002D60  EFB6  F016         	goto	u7130
  7174  002D64  EFB4  F016         	goto	u7131
  7175  002D68                     u7131:
  7176  002D68  EFBC  F016         	goto	l7170
  7177  002D6C                     u7130:
  7178  002D6C  6C1A               	negf	___awdiv@dividend^0,c
  7179  002D6E  1E1B               	comf	(___awdiv@dividend+1)^0,f,c
  7180  002D70  B0D8               	btfsc	status,0,c
  7181  002D72  2A1B               	incf	(___awdiv@dividend+1)^0,f,c
  7182  002D74  0E01               	movlw	1
  7183  002D76  1A1F               	xorwf	___awdiv@sign^0,f,c
  7184  002D78                     l7170:
  7185  002D78  0E00               	movlw	0
  7186  002D7A  6E21               	movwf	(___awdiv@quotient+1)^0,c
  7187  002D7C  0E00               	movlw	0
  7188  002D7E  6E20               	movwf	___awdiv@quotient^0,c
  7189  002D80  501C               	movf	___awdiv@divisor^0,w,c
  7190  002D82  101D               	iorwf	(___awdiv@divisor+1)^0,w,c
  7191  002D84  B4D8               	btfsc	status,2,c
  7192  002D86  EFC7  F016         	goto	u7141
  7193  002D8A  EFC9  F016         	goto	u7140
  7194  002D8E                     u7141:
  7195  002D8E  EFF1  F016         	goto	l7192
  7196  002D92                     u7140:
  7197  002D92  0E01               	movlw	1
  7198  002D94  6E1E               	movwf	___awdiv@counter^0,c
  7199  002D96  EFD1  F016         	goto	l7178
  7200  002D9A                     l7176:
  7201  002D9A  90D8               	bcf	status,0,c
  7202  002D9C  361C               	rlcf	___awdiv@divisor^0,f,c
  7203  002D9E  361D               	rlcf	(___awdiv@divisor+1)^0,f,c
  7204  002DA0  2A1E               	incf	___awdiv@counter^0,f,c
  7205  002DA2                     l7178:
  7206  002DA2  AE1D               	btfss	(___awdiv@divisor+1)^0,7,c
  7207  002DA4  EFD6  F016         	goto	u7151
  7208  002DA8  EFD8  F016         	goto	u7150
  7209  002DAC                     u7151:
  7210  002DAC  EFCD  F016         	goto	l7176
  7211  002DB0                     u7150:
  7212  002DB0                     l7180:
  7213  002DB0  90D8               	bcf	status,0,c
  7214  002DB2  3620               	rlcf	___awdiv@quotient^0,f,c
  7215  002DB4  3621               	rlcf	(___awdiv@quotient+1)^0,f,c
  7216  002DB6  501C               	movf	___awdiv@divisor^0,w,c
  7217  002DB8  5C1A               	subwf	___awdiv@dividend^0,w,c
  7218  002DBA  501D               	movf	(___awdiv@divisor+1)^0,w,c
  7219  002DBC  581B               	subwfb	(___awdiv@dividend+1)^0,w,c
  7220  002DBE  A0D8               	btfss	status,0,c
  7221  002DC0  EFE4  F016         	goto	u7161
  7222  002DC4  EFE6  F016         	goto	u7160
  7223  002DC8                     u7161:
  7224  002DC8  EFEB  F016         	goto	l7188
  7225  002DCC                     u7160:
  7226  002DCC  501C               	movf	___awdiv@divisor^0,w,c
  7227  002DCE  5E1A               	subwf	___awdiv@dividend^0,f,c
  7228  002DD0  501D               	movf	(___awdiv@divisor+1)^0,w,c
  7229  002DD2  5A1B               	subwfb	(___awdiv@dividend+1)^0,f,c
  7230  002DD4  8020               	bsf	___awdiv@quotient^0,0,c
  7231  002DD6                     l7188:
  7232  002DD6  90D8               	bcf	status,0,c
  7233  002DD8  321D               	rrcf	(___awdiv@divisor+1)^0,f,c
  7234  002DDA  321C               	rrcf	___awdiv@divisor^0,f,c
  7235  002DDC  2E1E               	decfsz	___awdiv@counter^0,f,c
  7236  002DDE  EFD8  F016         	goto	l7180
  7237  002DE2                     l7192:
  7238  002DE2  501F               	movf	___awdiv@sign^0,w,c
  7239  002DE4  B4D8               	btfsc	status,2,c
  7240  002DE6  EFF7  F016         	goto	u7171
  7241  002DEA  EFF9  F016         	goto	u7170
  7242  002DEE                     u7171:
  7243  002DEE  EFFD  F016         	goto	l7196
  7244  002DF2                     u7170:
  7245  002DF2  6C20               	negf	___awdiv@quotient^0,c
  7246  002DF4  1E21               	comf	(___awdiv@quotient+1)^0,f,c
  7247  002DF6  B0D8               	btfsc	status,0,c
  7248  002DF8  2A21               	incf	(___awdiv@quotient+1)^0,f,c
  7249  002DFA                     l7196:
  7250  002DFA  C020  F01A         	movff	___awdiv@quotient,?___awdiv
  7251  002DFE  C021  F01B         	movff	___awdiv@quotient+1,?___awdiv+1
  7252  002E02  0012               	return		;funcret
  7253  002E04                     __end_of___awdiv:
  7254                           	callstack 0
  7255                           
  7256 ;; *************** function _atoi *****************
  7257 ;; Defined at:
  7258 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  7259 ;; Parameters:    Size  Location     Type
  7260 ;;  s               2   32[COMRAM] PTR const unsigned char 
  7261 ;;		 -> STR_12(5), STR_11(5), STR_10(5), STR_9(50), 
  7262 ;;		 -> STR_8(3), STR_7(7), STR_6(23), STR_5(3), 
  7263 ;;		 -> STR_4(7), STR_3(34), STR_2(26), STR_1(27), 
  7264 ;; Auto vars:     Size  Location     Type
  7265 ;;  n               2    7[BANK0 ] int 
  7266 ;;  neg             2    0[BANK0 ] int 
  7267 ;; Return value:  Size  Location     Type
  7268 ;;                  2   32[COMRAM] int 
  7269 ;; Registers used:
  7270 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7271 ;; Tracked objects:
  7272 ;;		On entry : 0/0
  7273 ;;		On exit  : 0/0
  7274 ;;		Unchanged: 0/0
  7275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7276 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7277 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7278 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7279 ;;      Totals:         6       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7280 ;;Total ram usage:       15 bytes
  7281 ;; Hardware stack levels used:    1
  7282 ;; Hardware stack levels required when called:    8
  7283 ;; This function calls:
  7284 ;;		___wmul
  7285 ;;		_isdigit
  7286 ;;		_isspace
  7287 ;; This function is called by:
  7288 ;;		_vfpfcnvrt
  7289 ;; This function uses a non-reentrant model
  7290 ;;
  7291                           
  7292                           	psect	text24
  7293  002202                     __ptext24:
  7294                           	callstack 0
  7295  002202                     _atoi:
  7296                           	callstack 19
  7297  002202  0E00               	movlw	0
  7298  002204  0100               	movlb	0	; () banked
  7299  002206  6F68               	movwf	(atoi@n+1)& (0+255),b
  7300  002208  0E00               	movlw	0
  7301  00220A  6F67               	movwf	atoi@n& (0+255),b
  7302  00220C  0E00               	movlw	0
  7303  00220E  6F61               	movwf	(atoi@neg+1)& (0+255),b
  7304  002210  0E00               	movlw	0
  7305  002212  6F60               	movwf	atoi@neg& (0+255),b
  7306  002214  EF0E  F011         	goto	l7740
  7307  002218                     l7738:
  7308                           
  7309                           ; BSR set to: 0
  7310  002218  4A21               	infsnz	atoi@s^0,f,c
  7311  00221A  2A22               	incf	(atoi@s+1)^0,f,c
  7312  00221C                     l7740:
  7313                           
  7314                           ; BSR set to: 0
  7315  00221C  0E01               	movlw	1
  7316  00221E  6F66               	movwf	_atoi$2111& (0+255),b
  7317  002220                     
  7318                           ; BSR set to: 0
  7319  002220  C021  FFF6         	movff	atoi@s,tblptrl
  7320  002224  C022  FFF7         	movff	atoi@s+1,tblptrh
  7321  002228                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7322  002228  6AF8               	clrf	tblptru,c
  7323  00222A                     	endif
  7324  00222A                     	if	0	;tblptru may be non-zero
  7325  00222A                     	endif
  7326  00222A  0008               	tblrd		*
  7327  00222C  50F5               	movf	tablat,w,c
  7328  00222E  0A20               	xorlw	32
  7329  002230  B4D8               	btfsc	status,2,c
  7330  002232  EF1D  F011         	goto	u8241
  7331  002236  EF1F  F011         	goto	u8240
  7332  00223A                     u8241:
  7333  00223A  EF3D  F011         	goto	l7748
  7334  00223E                     u8240:
  7335  00223E                     
  7336                           ; BSR set to: 0
  7337  00223E  0EF7               	movlw	247
  7338  002240  6E23               	movwf	??_atoi^0,c
  7339  002242  0EFF               	movlw	255
  7340  002244  6E24               	movwf	(??_atoi+1)^0,c
  7341  002246  C021  FFF6         	movff	atoi@s,tblptrl
  7342  00224A  C022  FFF7         	movff	atoi@s+1,tblptrh
  7343  00224E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7344  00224E  6AF8               	clrf	tblptru,c
  7345  002250                     	endif
  7346  002250                     	if	0	;tblptru may be non-zero
  7347  002250                     	endif
  7348  002250  0008               	tblrd		*
  7349  002252  50F5               	movf	tablat,w,c
  7350  002254  6E25               	movwf	(??_atoi+2)^0,c
  7351  002256  6A26               	clrf	(??_atoi+3)^0,c
  7352  002258  5023               	movf	??_atoi^0,w,c
  7353  00225A  2625               	addwf	(??_atoi+2)^0,f,c
  7354  00225C  5024               	movf	(??_atoi+1)^0,w,c
  7355  00225E  2226               	addwfc	(??_atoi+3)^0,f,c
  7356  002260  5026               	movf	(??_atoi+3)^0,w,c
  7357  002262  E109               	bnz	u8250
  7358  002264  0E05               	movlw	5
  7359  002266  5C25               	subwf	(??_atoi+2)^0,w,c
  7360  002268  A0D8               	btfss	status,0,c
  7361  00226A  EF39  F011         	goto	u8251
  7362  00226E  EF3B  F011         	goto	u8250
  7363  002272                     u8251:
  7364  002272  EF3D  F011         	goto	l7748
  7365  002276                     u8250:
  7366  002276                     
  7367                           ; BSR set to: 0
  7368  002276  0E00               	movlw	0
  7369  002278  6F66               	movwf	_atoi$2111& (0+255),b
  7370  00227A                     l7748:
  7371                           
  7372                           ; BSR set to: 0
  7373  00227A  C066  F062         	movff	_atoi$2111,_atoi$2110
  7374  00227E  6B63               	clrf	(_atoi$2110+1)& (0+255),b
  7375  002280                     
  7376                           ; BSR set to: 0
  7377  002280  5162               	movf	_atoi$2110& (0+255),w,b
  7378  002282  1163               	iorwf	(_atoi$2110+1)& (0+255),w,b
  7379  002284  A4D8               	btfss	status,2,c
  7380  002286  EF47  F011         	goto	u8261
  7381  00228A  EF49  F011         	goto	u8260
  7382  00228E                     u8261:
  7383  00228E  EF0C  F011         	goto	l7738
  7384  002292                     u8260:
  7385  002292  EF53  F011         	goto	l7758
  7386  002296                     l7754:
  7387                           
  7388                           ; BSR set to: 0
  7389  002296  0E00               	movlw	0
  7390  002298  6F61               	movwf	(atoi@neg+1)& (0+255),b
  7391  00229A  0E01               	movlw	1
  7392  00229C  6F60               	movwf	atoi@neg& (0+255),b
  7393  00229E                     l7756:
  7394                           
  7395                           ; BSR set to: 0
  7396  00229E  4A21               	infsnz	atoi@s^0,f,c
  7397  0022A0  2A22               	incf	(atoi@s+1)^0,f,c
  7398  0022A2  EF8B  F011         	goto	l7764
  7399  0022A6                     l7758:
  7400                           
  7401                           ; BSR set to: 0
  7402  0022A6  C021  FFF6         	movff	atoi@s,tblptrl
  7403  0022AA  C022  FFF7         	movff	atoi@s+1,tblptrh
  7404  0022AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7405  0022AE  6AF8               	clrf	tblptru,c
  7406  0022B0                     	endif
  7407  0022B0                     	if	0	;tblptru may be non-zero
  7408  0022B0                     	endif
  7409  0022B0  0008               	tblrd		*
  7410  0022B2  50F5               	movf	tablat,w,c
  7411  0022B4  6E23               	movwf	??_atoi^0,c
  7412  0022B6  6A24               	clrf	(??_atoi+1)^0,c
  7413                           
  7414                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7415                           ; Switch size 1, requested type "simple"
  7416                           ; Number of cases is 1, Range of values is 0 to 0
  7417                           ; switch strategies available:
  7418                           ; Name         Instructions Cycles
  7419                           ; simple_byte            4     3 (average)
  7420                           ;	Chosen strategy is simple_byte
  7421  0022B8  5024               	movf	(??_atoi+1)^0,w,c
  7422  0022BA  0A00               	xorlw	0	; case 0
  7423  0022BC  B4D8               	btfsc	status,2,c
  7424  0022BE  EF63  F011         	goto	l8262
  7425  0022C2  EF8B  F011         	goto	l7764
  7426  0022C6                     l8262:
  7427                           
  7428                           ; BSR set to: 0
  7429                           ; Switch size 1, requested type "simple"
  7430                           ; Number of cases is 2, Range of values is 43 to 45
  7431                           ; switch strategies available:
  7432                           ; Name         Instructions Cycles
  7433                           ; simple_byte            7     4 (average)
  7434                           ;	Chosen strategy is simple_byte
  7435  0022C6  5023               	movf	??_atoi^0,w,c
  7436  0022C8  0A2B               	xorlw	43	; case 43
  7437  0022CA  B4D8               	btfsc	status,2,c
  7438  0022CC  EF4F  F011         	goto	l7756
  7439  0022D0  0A06               	xorlw	6	; case 45
  7440  0022D2  B4D8               	btfsc	status,2,c
  7441  0022D4  EF4B  F011         	goto	l7754
  7442  0022D8  EF8B  F011         	goto	l7764
  7443  0022DC                     l7760:
  7444                           
  7445                           ; BSR set to: 0
  7446  0022DC  C067  F01A         	movff	atoi@n,___wmul@multiplier
  7447  0022E0  C068  F01B         	movff	atoi@n+1,___wmul@multiplier+1
  7448  0022E4  0E00               	movlw	0
  7449  0022E6  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  7450  0022E8  0E0A               	movlw	10
  7451  0022EA  6E1C               	movwf	___wmul@multiplicand^0,c
  7452  0022EC  ECA8  F01C         	call	___wmul	;wreg free
  7453  0022F0  C021  FFF6         	movff	atoi@s,tblptrl
  7454  0022F4  C022  FFF7         	movff	atoi@s+1,tblptrh
  7455  0022F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7456  0022F8  6AF8               	clrf	tblptru,c
  7457  0022FA                     	endif
  7458  0022FA                     	if	0	;tblptru may be non-zero
  7459  0022FA                     	endif
  7460  0022FA  0008               	tblrd		*
  7461  0022FC  50F5               	movf	tablat,w,c
  7462  0022FE  5E1A               	subwf	?___wmul^0,f,c
  7463  002300  0E00               	movlw	0
  7464  002302  5A1B               	subwfb	(?___wmul+1)^0,f,c
  7465  002304  0E30               	movlw	48
  7466  002306  241A               	addwf	?___wmul^0,w,c
  7467  002308  0100               	movlb	0	; () banked
  7468  00230A  6F67               	movwf	atoi@n& (0+255),b
  7469  00230C  0E00               	movlw	0
  7470  00230E  201B               	addwfc	(?___wmul+1)^0,w,c
  7471  002310  6F68               	movwf	(atoi@n+1)& (0+255),b
  7472  002312  EF4F  F011         	goto	l7756
  7473  002316                     l7764:
  7474                           
  7475                           ; BSR set to: 0
  7476  002316  0ED0               	movlw	208
  7477  002318  6E23               	movwf	??_atoi^0,c
  7478  00231A  0EFF               	movlw	255
  7479  00231C  6E24               	movwf	(??_atoi+1)^0,c
  7480  00231E  C021  FFF6         	movff	atoi@s,tblptrl
  7481  002322  C022  FFF7         	movff	atoi@s+1,tblptrh
  7482  002326                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7483  002326  6AF8               	clrf	tblptru,c
  7484  002328                     	endif
  7485  002328                     	if	0	;tblptru may be non-zero
  7486  002328                     	endif
  7487  002328  0008               	tblrd		*
  7488  00232A  50F5               	movf	tablat,w,c
  7489  00232C  6E25               	movwf	(??_atoi+2)^0,c
  7490  00232E  6A26               	clrf	(??_atoi+3)^0,c
  7491  002330  5023               	movf	??_atoi^0,w,c
  7492  002332  2625               	addwf	(??_atoi+2)^0,f,c
  7493  002334  5024               	movf	(??_atoi+1)^0,w,c
  7494  002336  2226               	addwfc	(??_atoi+3)^0,f,c
  7495  002338  5026               	movf	(??_atoi+3)^0,w,c
  7496  00233A  E10A               	bnz	u8270
  7497  00233C  0E0A               	movlw	10
  7498  00233E  5C25               	subwf	(??_atoi+2)^0,w,c
  7499  002340  A0D8               	btfss	status,0,c
  7500  002342  EFA5  F011         	goto	u8271
  7501  002346  EFA8  F011         	goto	u8270
  7502  00234A                     u8271:
  7503  00234A  0E01               	movlw	1
  7504  00234C  EFA9  F011         	goto	u8280
  7505  002350                     u8270:
  7506  002350  0E00               	movlw	0
  7507  002352                     u8280:
  7508  002352  6F64               	movwf	_atoi$2112& (0+255),b
  7509  002354  6B65               	clrf	(_atoi$2112+1)& (0+255),b
  7510  002356                     
  7511                           ; BSR set to: 0
  7512  002356  5164               	movf	_atoi$2112& (0+255),w,b
  7513  002358  1165               	iorwf	(_atoi$2112+1)& (0+255),w,b
  7514  00235A  A4D8               	btfss	status,2,c
  7515  00235C  EFB2  F011         	goto	u8291
  7516  002360  EFB4  F011         	goto	u8290
  7517  002364                     u8291:
  7518  002364  EF6E  F011         	goto	l7760
  7519  002368                     u8290:
  7520  002368                     
  7521                           ; BSR set to: 0
  7522  002368  5160               	movf	atoi@neg& (0+255),w,b
  7523  00236A  1161               	iorwf	(atoi@neg+1)& (0+255),w,b
  7524  00236C  A4D8               	btfss	status,2,c
  7525  00236E  EFBB  F011         	goto	u8301
  7526  002372  EFBD  F011         	goto	u8300
  7527  002376                     u8301:
  7528  002376  EFCB  F011         	goto	l1696
  7529  00237A                     u8300:
  7530  00237A                     
  7531                           ; BSR set to: 0
  7532  00237A  C067  F023         	movff	atoi@n,??_atoi
  7533  00237E  C068  F024         	movff	atoi@n+1,??_atoi+1
  7534  002382  1E23               	comf	??_atoi^0,f,c
  7535  002384  1E24               	comf	(??_atoi+1)^0,f,c
  7536  002386  4A23               	infsnz	??_atoi^0,f,c
  7537  002388  2A24               	incf	(??_atoi+1)^0,f,c
  7538  00238A  C023  F021         	movff	??_atoi,?_atoi
  7539  00238E  C024  F022         	movff	??_atoi+1,?_atoi+1
  7540  002392  EFCF  F011         	goto	l1699
  7541  002396                     l1696:
  7542                           
  7543                           ; BSR set to: 0
  7544  002396  C067  F021         	movff	atoi@n,?_atoi
  7545  00239A  C068  F022         	movff	atoi@n+1,?_atoi+1
  7546  00239E                     l1699:
  7547                           
  7548                           ; BSR set to: 0
  7549  00239E  0012               	return		;funcret
  7550  0023A0                     __end_of_atoi:
  7551                           	callstack 0
  7552                           
  7553 ;; *************** function _isspace *****************
  7554 ;; Defined at:
  7555 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  7556 ;; Parameters:    Size  Location     Type
  7557 ;;  c               2   25[COMRAM] int 
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;		None
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  2   25[COMRAM] int 
  7562 ;; Registers used:
  7563 ;;		wreg, status,2, status,0
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7569 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7570 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7571 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7572 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7573 ;;Total ram usage:        7 bytes
  7574 ;; Hardware stack levels used:    1
  7575 ;; Hardware stack levels required when called:    7
  7576 ;; This function calls:
  7577 ;;		Nothing
  7578 ;; This function is called by:
  7579 ;;		_atoi
  7580 ;; This function uses a non-reentrant model
  7581 ;;
  7582                           
  7583                           	psect	text25
  7584  00350A                     __ptext25:
  7585                           	callstack 0
  7586  00350A                     _isspace:
  7587                           	callstack 19
  7588  00350A  0E01               	movlw	1
  7589  00350C  6E20               	movwf	_isspace$2141^0,c
  7590  00350E  0E20               	movlw	32
  7591  003510  181A               	xorwf	isspace@c^0,w,c
  7592  003512  101B               	iorwf	(isspace@c+1)^0,w,c
  7593  003514  B4D8               	btfsc	status,2,c
  7594  003516  EF8F  F01A         	goto	u7681
  7595  00351A  EF91  F01A         	goto	u7680
  7596  00351E                     u7681:
  7597  00351E  EFAA  F01A         	goto	l7424
  7598  003522                     u7680:
  7599  003522  0EF7               	movlw	247
  7600  003524  6E1C               	movwf	??_isspace^0,c
  7601  003526  0EFF               	movlw	255
  7602  003528  6E1D               	movwf	(??_isspace+1)^0,c
  7603  00352A  C01A  F01E         	movff	isspace@c,??_isspace+2
  7604  00352E  C01B  F01F         	movff	isspace@c+1,??_isspace+3
  7605  003532  501C               	movf	??_isspace^0,w,c
  7606  003534  261E               	addwf	(??_isspace+2)^0,f,c
  7607  003536  501D               	movf	(??_isspace+1)^0,w,c
  7608  003538  221F               	addwfc	(??_isspace+3)^0,f,c
  7609  00353A  501F               	movf	(??_isspace+3)^0,w,c
  7610  00353C  E109               	bnz	u7690
  7611  00353E  0E05               	movlw	5
  7612  003540  5C1E               	subwf	(??_isspace+2)^0,w,c
  7613  003542  A0D8               	btfss	status,0,c
  7614  003544  EFA6  F01A         	goto	u7691
  7615  003548  EFA8  F01A         	goto	u7690
  7616  00354C                     u7691:
  7617  00354C  EFAA  F01A         	goto	l7424
  7618  003550                     u7690:
  7619  003550  0E00               	movlw	0
  7620  003552  6E20               	movwf	_isspace$2141^0,c
  7621  003554                     l7424:
  7622  003554  C020  F01A         	movff	_isspace$2141,?_isspace
  7623  003558  6A1B               	clrf	(?_isspace+1)^0,c
  7624  00355A  0012               	return		;funcret
  7625  00355C                     __end_of_isspace:
  7626                           	callstack 0
  7627                           
  7628 ;; *************** function _isdigit *****************
  7629 ;; Defined at:
  7630 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;  c               2   25[COMRAM] int 
  7633 ;; Auto vars:     Size  Location     Type
  7634 ;;		None
  7635 ;; Return value:  Size  Location     Type
  7636 ;;                  2   25[COMRAM] int 
  7637 ;; Registers used:
  7638 ;;		wreg, status,2, status,0
  7639 ;; Tracked objects:
  7640 ;;		On entry : 0/0
  7641 ;;		On exit  : 0/0
  7642 ;;		Unchanged: 0/0
  7643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7644 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7646 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7647 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7648 ;;Total ram usage:        6 bytes
  7649 ;; Hardware stack levels used:    1
  7650 ;; Hardware stack levels required when called:    7
  7651 ;; This function calls:
  7652 ;;		Nothing
  7653 ;; This function is called by:
  7654 ;;		_vfpfcnvrt
  7655 ;;		_atoi
  7656 ;; This function uses a non-reentrant model
  7657 ;;
  7658                           
  7659                           	psect	text26
  7660  003726                     __ptext26:
  7661                           	callstack 0
  7662  003726                     _isdigit:
  7663                           	callstack 20
  7664  003726  0ED0               	movlw	208
  7665  003728  6E1C               	movwf	??_isdigit^0,c
  7666  00372A  0EFF               	movlw	255
  7667  00372C  6E1D               	movwf	(??_isdigit+1)^0,c
  7668  00372E  C01A  F01E         	movff	isdigit@c,??_isdigit+2
  7669  003732  C01B  F01F         	movff	isdigit@c+1,??_isdigit+3
  7670  003736  501C               	movf	??_isdigit^0,w,c
  7671  003738  261E               	addwf	(??_isdigit+2)^0,f,c
  7672  00373A  501D               	movf	(??_isdigit+1)^0,w,c
  7673  00373C  221F               	addwfc	(??_isdigit+3)^0,f,c
  7674  00373E  501F               	movf	(??_isdigit+3)^0,w,c
  7675  003740  E10A               	bnz	u7660
  7676  003742  0E0A               	movlw	10
  7677  003744  5C1E               	subwf	(??_isdigit+2)^0,w,c
  7678  003746  A0D8               	btfss	status,0,c
  7679  003748  EFA8  F01B         	goto	u7661
  7680  00374C  EFAB  F01B         	goto	u7660
  7681  003750                     u7661:
  7682  003750  0E01               	movlw	1
  7683  003752  EFAC  F01B         	goto	u7670
  7684  003756                     u7660:
  7685  003756  0E00               	movlw	0
  7686  003758                     u7670:
  7687  003758  6E1A               	movwf	?_isdigit^0,c
  7688  00375A  6A1B               	clrf	(?_isdigit+1)^0,c
  7689  00375C  0012               	return		;funcret
  7690  00375E                     __end_of_isdigit:
  7691                           	callstack 0
  7692                           
  7693 ;; *************** function _Voltage_ReadRegister *****************
  7694 ;; Defined at:
  7695 ;;		line 27 in file "INA260.c"
  7696 ;; Parameters:    Size  Location     Type
  7697 ;;		None
  7698 ;; Auto vars:     Size  Location     Type
  7699 ;;  temp_b          2   31[BANK0 ] unsigned int 
  7700 ;;  temp_a          1   33[BANK0 ] unsigned char 
  7701 ;; Return value:  Size  Location     Type
  7702 ;;                  4   25[BANK0 ] float 
  7703 ;; Registers used:
  7704 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7705 ;; Tracked objects:
  7706 ;;		On entry : 0/0
  7707 ;;		On exit  : 0/0
  7708 ;;		Unchanged: 0/0
  7709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7710 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7711 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7712 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7713 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7714 ;;Total ram usage:        9 bytes
  7715 ;; Hardware stack levels used:    1
  7716 ;; Hardware stack levels required when called:    9
  7717 ;; This function calls:
  7718 ;;		_I2C_Master_Read
  7719 ;;		_I2C_Master_RepeatedStart
  7720 ;;		_I2C_Master_Start
  7721 ;;		_I2C_Master_Stop
  7722 ;;		_I2C_Master_Write
  7723 ;;		___fldiv
  7724 ;;		___flmul
  7725 ;;		___xxtofl
  7726 ;; This function is called by:
  7727 ;;		_main
  7728 ;; This function uses a non-reentrant model
  7729 ;;
  7730                           
  7731                           	psect	text27
  7732  0023A0                     __ptext27:
  7733                           	callstack 0
  7734  0023A0                     _Voltage_ReadRegister:
  7735                           	callstack 21
  7736  0023A0                     
  7737                           ;INA260.c: 28:     I2C_Master_Start();
  7738  0023A0  EC3A  F01D         	call	_I2C_Master_Start	;wreg free
  7739                           
  7740                           ;INA260.c: 29:     I2C_Master_Write(0x80);
  7741  0023A4  0E00               	movlw	0
  7742  0023A6  6E1C               	movwf	(I2C_Master_Write@d+1)^0,c
  7743  0023A8  0E80               	movlw	128
  7744  0023AA  6E1B               	movwf	I2C_Master_Write@d^0,c
  7745  0023AC  EC31  F01D         	call	_I2C_Master_Write	;wreg free
  7746                           
  7747                           ;INA260.c: 30:     I2C_Master_Write(0x02);
  7748  0023B0  0E00               	movlw	0
  7749  0023B2  6E1C               	movwf	(I2C_Master_Write@d+1)^0,c
  7750  0023B4  0E02               	movlw	2
  7751  0023B6  6E1B               	movwf	I2C_Master_Write@d^0,c
  7752  0023B8  EC31  F01D         	call	_I2C_Master_Write	;wreg free
  7753                           
  7754                           ;INA260.c: 31:     I2C_Master_RepeatedStart();
  7755  0023BC  EC3E  F01D         	call	_I2C_Master_RepeatedStart	;wreg free
  7756                           
  7757                           ;INA260.c: 32:     I2C_Master_Write(0x81);
  7758  0023C0  0E00               	movlw	0
  7759  0023C2  6E1C               	movwf	(I2C_Master_Write@d+1)^0,c
  7760  0023C4  0E81               	movlw	129
  7761  0023C6  6E1B               	movwf	I2C_Master_Write@d^0,c
  7762  0023C8  EC31  F01D         	call	_I2C_Master_Write	;wreg free
  7763                           
  7764                           ;INA260.c: 33:     char temp_a = I2C_Master_Read(1);
  7765  0023CC  0E00               	movlw	0
  7766  0023CE  6E1C               	movwf	(I2C_Master_Read@a+1)^0,c
  7767  0023D0  0E01               	movlw	1
  7768  0023D2  6E1B               	movwf	I2C_Master_Read@a^0,c
  7769  0023D4  ECCA  F01B         	call	_I2C_Master_Read	;wreg free
  7770  0023D8  501B               	movf	?_I2C_Master_Read^0,w,c
  7771  0023DA  0100               	movlb	0	; () banked
  7772  0023DC  6F81               	movwf	Voltage_ReadRegister@temp_a& (0+255),b
  7773                           
  7774                           ;INA260.c: 34:     unsigned int temp_b = temp_a<<8 | I2C_Master_Read(0);
  7775  0023DE  0E00               	movlw	0
  7776  0023E0  6E1C               	movwf	(I2C_Master_Read@a+1)^0,c
  7777  0023E2  0E00               	movlw	0
  7778  0023E4  6E1B               	movwf	I2C_Master_Read@a^0,c
  7779  0023E6  ECCA  F01B         	call	_I2C_Master_Read	;wreg free
  7780  0023EA  0100               	movlb	0	; () banked
  7781  0023EC  5181               	movf	Voltage_ReadRegister@temp_a& (0+255),w,b
  7782  0023EE  6F7E               	movwf	(??_Voltage_ReadRegister+1)& (0+255),b
  7783  0023F0  6B7D               	clrf	??_Voltage_ReadRegister& (0+255),b
  7784  0023F2  501B               	movf	?_I2C_Master_Read^0,w,c
  7785  0023F4  117D               	iorwf	??_Voltage_ReadRegister& (0+255),w,b
  7786  0023F6  6F7F               	movwf	Voltage_ReadRegister@temp_b& (0+255),b
  7787  0023F8  501C               	movf	(?_I2C_Master_Read+1)^0,w,c
  7788  0023FA  117E               	iorwf	(??_Voltage_ReadRegister+1)& (0+255),w,b
  7789  0023FC  6F80               	movwf	(Voltage_ReadRegister@temp_b+1)& (0+255),b
  7790  0023FE                     
  7791                           ; BSR set to: 0
  7792                           ;INA260.c: 35:     voltage = temp_b *1.25;
  7793  0023FE  C07F  F020         	movff	Voltage_ReadRegister@temp_b,___xxtofl@val
  7794  002402  C080  F021         	movff	Voltage_ReadRegister@temp_b+1,___xxtofl@val+1
  7795  002406  6A22               	clrf	(___xxtofl@val+2)^0,c
  7796  002408  6A23               	clrf	(___xxtofl@val+3)^0,c
  7797  00240A  0E00               	movlw	0
  7798  00240C  EC27  F010         	call	___xxtofl
  7799  002410  C020  F060         	movff	?___xxtofl,___flmul@b
  7800  002414  C021  F061         	movff	?___xxtofl+1,___flmul@b+1
  7801  002418  C022  F062         	movff	?___xxtofl+2,___flmul@b+2
  7802  00241C  C023  F063         	movff	?___xxtofl+3,___flmul@b+3
  7803  002420  0E00               	movlw	0
  7804  002422  0100               	movlb	0	; () banked
  7805  002424  6F64               	movwf	___flmul@a& (0+255),b
  7806  002426  0E00               	movlw	0
  7807  002428  6F65               	movwf	(___flmul@a+1)& (0+255),b
  7808  00242A  0EA0               	movlw	160
  7809  00242C  6F66               	movwf	(___flmul@a+2)& (0+255),b
  7810  00242E  0E3F               	movlw	63
  7811  002430  6F67               	movwf	(___flmul@a+3)& (0+255),b
  7812  002432  EC38  F00B         	call	___flmul	;wreg free
  7813  002436  C060  F03E         	movff	?___flmul,_voltage
  7814  00243A  C061  F03F         	movff	?___flmul+1,_voltage+1
  7815  00243E  C062  F040         	movff	?___flmul+2,_voltage+2
  7816  002442  C063  F041         	movff	?___flmul+3,_voltage+3
  7817  002446                     
  7818                           ;INA260.c: 36:     I2C_Master_Stop();
  7819  002446  EC36  F01D         	call	_I2C_Master_Stop	;wreg free
  7820  00244A                     
  7821                           ;INA260.c: 37:     voltage = voltage/1000;
  7822  00244A  C03E  F01A         	movff	_voltage,___fldiv@b
  7823  00244E  C03F  F01B         	movff	_voltage+1,___fldiv@b+1
  7824  002452  C040  F01C         	movff	_voltage+2,___fldiv@b+2
  7825  002456  C041  F01D         	movff	_voltage+3,___fldiv@b+3
  7826  00245A  0E00               	movlw	0
  7827  00245C  6E1E               	movwf	___fldiv@a^0,c
  7828  00245E  0E00               	movlw	0
  7829  002460  6E1F               	movwf	(___fldiv@a+1)^0,c
  7830  002462  0E7A               	movlw	122
  7831  002464  6E20               	movwf	(___fldiv@a+2)^0,c
  7832  002466  0E44               	movlw	68
  7833  002468  6E21               	movwf	(___fldiv@a+3)^0,c
  7834  00246A  EC4E  F00D         	call	___fldiv	;wreg free
  7835  00246E  C01A  F03E         	movff	?___fldiv,_voltage
  7836  002472  C01B  F03F         	movff	?___fldiv+1,_voltage+1
  7837  002476  C01C  F040         	movff	?___fldiv+2,_voltage+2
  7838  00247A  C01D  F041         	movff	?___fldiv+3,_voltage+3
  7839  00247E                     
  7840                           ;INA260.c: 38:     _delay((unsigned long)((300)*(8000000/4000.0)));
  7841  00247E  0E04               	movlw	4
  7842  002480  0100               	movlb	0	; () banked
  7843  002482  6F7E               	movwf	(??_Voltage_ReadRegister+1)& (0+255),b
  7844  002484  0E0C               	movlw	12
  7845  002486  6F7D               	movwf	??_Voltage_ReadRegister& (0+255),b
  7846  002488  0E33               	movlw	51
  7847  00248A                     u8717:
  7848  00248A  2EE8               	decfsz	wreg,f,c
  7849  00248C  D7FE               	bra	u8717
  7850  00248E  2F7D               	decfsz	??_Voltage_ReadRegister& (0+255),f,b
  7851  002490  D7FC               	bra	u8717
  7852  002492  2F7E               	decfsz	(??_Voltage_ReadRegister+1)& (0+255),f,b
  7853  002494  D7FA               	bra	u8717
  7854  002496  D000               	nop2	
  7855  002498                     
  7856                           ;INA260.c: 39:     _delay((unsigned long)((600)*(8000000/4000.0)));
  7857  002498  0E07               	movlw	7
  7858  00249A  0100               	movlb	0	; () banked
  7859  00249C  6F7E               	movwf	(??_Voltage_ReadRegister+1)& (0+255),b
  7860  00249E  0E17               	movlw	23
  7861  0024A0  6F7D               	movwf	??_Voltage_ReadRegister& (0+255),b
  7862  0024A2  0E6A               	movlw	106
  7863  0024A4                     u8727:
  7864  0024A4  2EE8               	decfsz	wreg,f,c
  7865  0024A6  D7FE               	bra	u8727
  7866  0024A8  2F7D               	decfsz	??_Voltage_ReadRegister& (0+255),f,b
  7867  0024AA  D7FC               	bra	u8727
  7868  0024AC  2F7E               	decfsz	(??_Voltage_ReadRegister+1)& (0+255),f,b
  7869  0024AE  D7FA               	bra	u8727
  7870  0024B0  F000               	nop	
  7871  0024B2                     
  7872                           ;INA260.c: 40:     return voltage;
  7873  0024B2  C03E  F079         	movff	_voltage,?_Voltage_ReadRegister
  7874  0024B6  C03F  F07A         	movff	_voltage+1,?_Voltage_ReadRegister+1
  7875  0024BA  C040  F07B         	movff	_voltage+2,?_Voltage_ReadRegister+2
  7876  0024BE  C041  F07C         	movff	_voltage+3,?_Voltage_ReadRegister+3
  7877  0024C2  0012               	return		;funcret
  7878  0024C4                     __end_of_Voltage_ReadRegister:
  7879                           	callstack 0
  7880                           
  7881 ;; *************** function _SYSTEM_Initialize *****************
  7882 ;; Defined at:
  7883 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7884 ;; Parameters:    Size  Location     Type
  7885 ;;		None
  7886 ;; Auto vars:     Size  Location     Type
  7887 ;;		None
  7888 ;; Return value:  Size  Location     Type
  7889 ;;                  1    wreg      void 
  7890 ;; Registers used:
  7891 ;;		wreg, status,2, cstack
  7892 ;; Tracked objects:
  7893 ;;		On entry : 0/0
  7894 ;;		On exit  : 0/0
  7895 ;;		Unchanged: 0/0
  7896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7901 ;;Total ram usage:        0 bytes
  7902 ;; Hardware stack levels used:    1
  7903 ;; Hardware stack levels required when called:    8
  7904 ;; This function calls:
  7905 ;;		_INTERRUPT_Initialize
  7906 ;;		_OSCILLATOR_Initialize
  7907 ;;		_PIN_MANAGER_Initialize
  7908 ;; This function is called by:
  7909 ;;		_main
  7910 ;; This function uses a non-reentrant model
  7911 ;;
  7912                           
  7913                           	psect	text28
  7914  003A30                     __ptext28:
  7915                           	callstack 0
  7916  003A30                     _SYSTEM_Initialize:
  7917                           	callstack 22
  7918  003A30                     
  7919                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  7920  003A30  EC6B  F01D         	call	_INTERRUPT_Initialize	;wreg free
  7921  003A34                     
  7922                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  7923  003A34  EC95  F01C         	call	_PIN_MANAGER_Initialize	;wreg free
  7924  003A38                     
  7925                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  7926  003A38  ECF6  F01C         	call	_OSCILLATOR_Initialize	;wreg free
  7927  003A3C  0012               	return		;funcret
  7928  003A3E                     __end_of_SYSTEM_Initialize:
  7929                           	callstack 0
  7930                           
  7931 ;; *************** function _PIN_MANAGER_Initialize *****************
  7932 ;; Defined at:
  7933 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7934 ;; Parameters:    Size  Location     Type
  7935 ;;		None
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;		None
  7938 ;; Return value:  Size  Location     Type
  7939 ;;                  1    wreg      void 
  7940 ;; Registers used:
  7941 ;;		wreg, status,2
  7942 ;; Tracked objects:
  7943 ;;		On entry : 0/0
  7944 ;;		On exit  : 0/0
  7945 ;;		Unchanged: 0/0
  7946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7951 ;;Total ram usage:        0 bytes
  7952 ;; Hardware stack levels used:    1
  7953 ;; Hardware stack levels required when called:    7
  7954 ;; This function calls:
  7955 ;;		Nothing
  7956 ;; This function is called by:
  7957 ;;		_SYSTEM_Initialize
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           	psect	text29
  7962  00392A                     __ptext29:
  7963                           	callstack 0
  7964  00392A                     _PIN_MANAGER_Initialize:
  7965                           	callstack 22
  7966  00392A                     
  7967                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7968  00392A  0E00               	movlw	0
  7969  00392C  6E89               	movwf	137,c	;volatile
  7970                           
  7971                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7972  00392E  0E00               	movlw	0
  7973  003930  6E8A               	movwf	138,c	;volatile
  7974                           
  7975                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  7976  003932  0E00               	movlw	0
  7977  003934  6E8B               	movwf	139,c	;volatile
  7978                           
  7979                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xEF;
  7980  003936  0EEF               	movlw	239
  7981  003938  6E92               	movwf	146,c	;volatile
  7982  00393A                     
  7983                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  7984  00393A  6893               	setf	147,c	;volatile
  7985  00393C                     
  7986                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  7987  00393C  6894               	setf	148,c	;volatile
  7988                           
  7989                           ;mcc_generated_files/pin_manager.c: 74:     ANCON0 = 0x1F;
  7990  00393E  0E1F               	movlw	31
  7991  003940  010F               	movlb	15	; () banked
  7992  003942  6F5D               	movwf	93,b	;volatile
  7993                           
  7994                           ;mcc_generated_files/pin_manager.c: 75:     ANCON1 = 0x07;
  7995  003944  0E07               	movlw	7
  7996  003946  6F5C               	movwf	92,b	;volatile
  7997                           
  7998                           ;mcc_generated_files/pin_manager.c: 80:     WPUB = 0x00;
  7999  003948  0E00               	movlw	0
  8000  00394A  6F5B               	movwf	91,b	;volatile
  8001  00394C                     
  8002                           ; BSR set to: 15
  8003                           ;mcc_generated_files/pin_manager.c: 81:     INTCON2bits.nRBPU = 1;
  8004  00394C  8EF1               	bsf	241,7,c	;volatile
  8005  00394E                     
  8006                           ; BSR set to: 15
  8007  00394E  0012               	return		;funcret
  8008  003950                     __end_of_PIN_MANAGER_Initialize:
  8009                           	callstack 0
  8010                           
  8011 ;; *************** function _OSCILLATOR_Initialize *****************
  8012 ;; Defined at:
  8013 ;;		line 59 in file "mcc_generated_files/mcc.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;		None
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;		None
  8018 ;; Return value:  Size  Location     Type
  8019 ;;                  1    wreg      void 
  8020 ;; Registers used:
  8021 ;;		wreg, status,2
  8022 ;; Tracked objects:
  8023 ;;		On entry : 0/0
  8024 ;;		On exit  : 0/0
  8025 ;;		Unchanged: 0/0
  8026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8031 ;;Total ram usage:        0 bytes
  8032 ;; Hardware stack levels used:    1
  8033 ;; Hardware stack levels required when called:    7
  8034 ;; This function calls:
  8035 ;;		Nothing
  8036 ;; This function is called by:
  8037 ;;		_SYSTEM_Initialize
  8038 ;; This function uses a non-reentrant model
  8039 ;;
  8040                           
  8041                           	psect	text30
  8042  0039EC                     __ptext30:
  8043                           	callstack 0
  8044  0039EC                     _OSCILLATOR_Initialize:
  8045                           	callstack 22
  8046  0039EC                     
  8047                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x60;
  8048  0039EC  0E60               	movlw	96
  8049  0039EE  6ED3               	movwf	211,c	;volatile
  8050                           
  8051                           ;mcc_generated_files/mcc.c: 64:     OSCCON2 = 0x00;
  8052  0039F0  0E00               	movlw	0
  8053  0039F2  6ED2               	movwf	210,c	;volatile
  8054                           
  8055                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  8056  0039F4  0E00               	movlw	0
  8057  0039F6  6E9B               	movwf	155,c	;volatile
  8058                           
  8059                           ;mcc_generated_files/mcc.c: 68:     REFOCON = 0x00;
  8060  0039F8  0E00               	movlw	0
  8061  0039FA  6E9A               	movwf	154,c	;volatile
  8062  0039FC  0012               	return		;funcret
  8063  0039FE                     __end_of_OSCILLATOR_Initialize:
  8064                           	callstack 0
  8065                           
  8066 ;; *************** function _INTERRUPT_Initialize *****************
  8067 ;; Defined at:
  8068 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8069 ;; Parameters:    Size  Location     Type
  8070 ;;		None
  8071 ;; Auto vars:     Size  Location     Type
  8072 ;;		None
  8073 ;; Return value:  Size  Location     Type
  8074 ;;                  1    wreg      void 
  8075 ;; Registers used:
  8076 ;;		None
  8077 ;; Tracked objects:
  8078 ;;		On entry : 0/0
  8079 ;;		On exit  : 0/0
  8080 ;;		Unchanged: 0/0
  8081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8086 ;;Total ram usage:        0 bytes
  8087 ;; Hardware stack levels used:    1
  8088 ;; Hardware stack levels required when called:    7
  8089 ;; This function calls:
  8090 ;;		Nothing
  8091 ;; This function is called by:
  8092 ;;		_SYSTEM_Initialize
  8093 ;; This function uses a non-reentrant model
  8094 ;;
  8095                           
  8096                           	psect	text31
  8097  003AD6                     __ptext31:
  8098                           	callstack 0
  8099  003AD6                     _INTERRUPT_Initialize:
  8100                           	callstack 22
  8101  003AD6                     
  8102                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  8103  003AD6  9ED0               	bcf	208,7,c	;volatile
  8104  003AD8  0012               	return		;funcret
  8105  003ADA                     __end_of_INTERRUPT_Initialize:
  8106                           	callstack 0
  8107                           
  8108 ;; *************** function _Power_ReadRegister *****************
  8109 ;; Defined at:
  8110 ;;		line 59 in file "INA260.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;		None
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;  temp_f          2   19[BANK0 ] unsigned int 
  8115 ;;  temp_e          1   21[BANK0 ] unsigned char 
  8116 ;; Return value:  Size  Location     Type
  8117 ;;                  4   13[BANK0 ] float 
  8118 ;; Registers used:
  8119 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8120 ;; Tracked objects:
  8121 ;;		On entry : 0/0
  8122 ;;		On exit  : 0/0
  8123 ;;		Unchanged: 0/0
  8124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8125 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8126 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8127 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8128 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8129 ;;Total ram usage:        9 bytes
  8130 ;; Hardware stack levels used:    1
  8131 ;; Hardware stack levels required when called:    9
  8132 ;; This function calls:
  8133 ;;		_I2C_Master_Read
  8134 ;;		_I2C_Master_RepeatedStart
  8135 ;;		_I2C_Master_Start
  8136 ;;		_I2C_Master_Stop
  8137 ;;		_I2C_Master_Write
  8138 ;;		___fldiv
  8139 ;;		___wmul
  8140 ;;		___xxtofl
  8141 ;; This function is called by:
  8142 ;;		_main
  8143 ;; This function uses a non-reentrant model
  8144 ;;
  8145                           
  8146                           	psect	text32
  8147  0025E8                     __ptext32:
  8148                           	callstack 0
  8149  0025E8                     _Power_ReadRegister:
  8150                           	callstack 21
  8151  0025E8                     
  8152                           ;INA260.c: 60:     I2C_Master_Start();
  8153  0025E8  EC3A  F01D         	call	_I2C_Master_Start	;wreg free
  8154                           
  8155                           ;INA260.c: 61:     I2C_Master_Write(0x80);
  8156  0025EC  0E00               	movlw	0
  8157  0025EE  6E1C               	movwf	(I2C_Master_Write@d+1)^0,c
  8158  0025F0  0E80               	movlw	128
  8159  0025F2  6E1B               	movwf	I2C_Master_Write@d^0,c
  8160  0025F4  EC31  F01D         	call	_I2C_Master_Write	;wreg free
  8161                           
  8162                           ;INA260.c: 62:     I2C_Master_Write(0x03);
  8163  0025F8  0E00               	movlw	0
  8164  0025FA  6E1C               	movwf	(I2C_Master_Write@d+1)^0,c
  8165  0025FC  0E03               	movlw	3
  8166  0025FE  6E1B               	movwf	I2C_Master_Write@d^0,c
  8167  002600  EC31  F01D         	call	_I2C_Master_Write	;wreg free
  8168                           
  8169                           ;INA260.c: 63:     I2C_Master_RepeatedStart();
  8170  002604  EC3E  F01D         	call	_I2C_Master_RepeatedStart	;wreg free
  8171                           
  8172                           ;INA260.c: 64:     I2C_Master_Write(0x81);
  8173  002608  0E00               	movlw	0
  8174  00260A  6E1C               	movwf	(I2C_Master_Write@d+1)^0,c
  8175  00260C  0E81               	movlw	129
  8176  00260E  6E1B               	movwf	I2C_Master_Write@d^0,c
  8177  002610  EC31  F01D         	call	_I2C_Master_Write	;wreg free
  8178                           
  8179                           ;INA260.c: 65:     char temp_e = I2C_Master_Read(1);
  8180  002614  0E00               	movlw	0
  8181  002616  6E1C               	movwf	(I2C_Master_Read@a+1)^0,c
  8182  002618  0E01               	movlw	1
  8183  00261A  6E1B               	movwf	I2C_Master_Read@a^0,c
  8184  00261C  ECCA  F01B         	call	_I2C_Master_Read	;wreg free
  8185  002620  501B               	movf	?_I2C_Master_Read^0,w,c
  8186  002622  0100               	movlb	0	; () banked
  8187  002624  6F75               	movwf	Power_ReadRegister@temp_e& (0+255),b
  8188                           
  8189                           ;INA260.c: 66:     unsigned int temp_f = temp_e<<8 | I2C_Master_Read(0);
  8190  002626  0E00               	movlw	0
  8191  002628  6E1C               	movwf	(I2C_Master_Read@a+1)^0,c
  8192  00262A  0E00               	movlw	0
  8193  00262C  6E1B               	movwf	I2C_Master_Read@a^0,c
  8194  00262E  ECCA  F01B         	call	_I2C_Master_Read	;wreg free
  8195  002632  0100               	movlb	0	; () banked
  8196  002634  5175               	movf	Power_ReadRegister@temp_e& (0+255),w,b
  8197  002636  6F72               	movwf	(??_Power_ReadRegister+1)& (0+255),b
  8198  002638  6B71               	clrf	??_Power_ReadRegister& (0+255),b
  8199  00263A  501B               	movf	?_I2C_Master_Read^0,w,c
  8200  00263C  1171               	iorwf	??_Power_ReadRegister& (0+255),w,b
  8201  00263E  6F73               	movwf	Power_ReadRegister@temp_f& (0+255),b
  8202  002640  501C               	movf	(?_I2C_Master_Read+1)^0,w,c
  8203  002642  1172               	iorwf	(??_Power_ReadRegister+1)& (0+255),w,b
  8204  002644  6F74               	movwf	(Power_ReadRegister@temp_f+1)& (0+255),b
  8205  002646                     
  8206                           ; BSR set to: 0
  8207                           ;INA260.c: 67:     power = temp_f *10;
  8208  002646  C073  F01A         	movff	Power_ReadRegister@temp_f,___wmul@multiplier
  8209  00264A  C074  F01B         	movff	Power_ReadRegister@temp_f+1,___wmul@multiplier+1
  8210  00264E  0E00               	movlw	0
  8211  002650  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  8212  002652  0E0A               	movlw	10
  8213  002654  6E1C               	movwf	___wmul@multiplicand^0,c
  8214  002656  ECA8  F01C         	call	___wmul	;wreg free
  8215  00265A  C01A  F020         	movff	?___wmul,___xxtofl@val
  8216  00265E  C01B  F021         	movff	?___wmul+1,___xxtofl@val+1
  8217  002662  6A22               	clrf	(___xxtofl@val+2)^0,c
  8218  002664  6A23               	clrf	(___xxtofl@val+3)^0,c
  8219  002666  0E00               	movlw	0
  8220  002668  EC27  F010         	call	___xxtofl
  8221  00266C  C020  F036         	movff	?___xxtofl,_power
  8222  002670  C021  F037         	movff	?___xxtofl+1,_power+1
  8223  002674  C022  F038         	movff	?___xxtofl+2,_power+2
  8224  002678  C023  F039         	movff	?___xxtofl+3,_power+3
  8225  00267C                     
  8226                           ;INA260.c: 68:     I2C_Master_Stop();
  8227  00267C  EC36  F01D         	call	_I2C_Master_Stop	;wreg free
  8228  002680                     
  8229                           ;INA260.c: 69:     power = power/1000;
  8230  002680  C036  F01A         	movff	_power,___fldiv@b
  8231  002684  C037  F01B         	movff	_power+1,___fldiv@b+1
  8232  002688  C038  F01C         	movff	_power+2,___fldiv@b+2
  8233  00268C  C039  F01D         	movff	_power+3,___fldiv@b+3
  8234  002690  0E00               	movlw	0
  8235  002692  6E1E               	movwf	___fldiv@a^0,c
  8236  002694  0E00               	movlw	0
  8237  002696  6E1F               	movwf	(___fldiv@a+1)^0,c
  8238  002698  0E7A               	movlw	122
  8239  00269A  6E20               	movwf	(___fldiv@a+2)^0,c
  8240  00269C  0E44               	movlw	68
  8241  00269E  6E21               	movwf	(___fldiv@a+3)^0,c
  8242  0026A0  EC4E  F00D         	call	___fldiv	;wreg free
  8243  0026A4  C01A  F036         	movff	?___fldiv,_power
  8244  0026A8  C01B  F037         	movff	?___fldiv+1,_power+1
  8245  0026AC  C01C  F038         	movff	?___fldiv+2,_power+2
  8246  0026B0  C01D  F039         	movff	?___fldiv+3,_power+3
  8247  0026B4                     
  8248                           ;INA260.c: 70:     _delay((unsigned long)((300)*(8000000/4000.0)));
  8249  0026B4  0E04               	movlw	4
  8250  0026B6  0100               	movlb	0	; () banked
  8251  0026B8  6F72               	movwf	(??_Power_ReadRegister+1)& (0+255),b
  8252  0026BA  0E0C               	movlw	12
  8253  0026BC  6F71               	movwf	??_Power_ReadRegister& (0+255),b
  8254  0026BE  0E33               	movlw	51
  8255  0026C0                     u8737:
  8256  0026C0  2EE8               	decfsz	wreg,f,c
  8257  0026C2  D7FE               	bra	u8737
  8258  0026C4  2F71               	decfsz	??_Power_ReadRegister& (0+255),f,b
  8259  0026C6  D7FC               	bra	u8737
  8260  0026C8  2F72               	decfsz	(??_Power_ReadRegister+1)& (0+255),f,b
  8261  0026CA  D7FA               	bra	u8737
  8262  0026CC  D000               	nop2	
  8263  0026CE                     
  8264                           ;INA260.c: 71:     _delay((unsigned long)((600)*(8000000/4000.0)));
  8265  0026CE  0E07               	movlw	7
  8266  0026D0  0100               	movlb	0	; () banked
  8267  0026D2  6F72               	movwf	(??_Power_ReadRegister+1)& (0+255),b
  8268  0026D4  0E17               	movlw	23
  8269  0026D6  6F71               	movwf	??_Power_ReadRegister& (0+255),b
  8270  0026D8  0E6A               	movlw	106
  8271  0026DA                     u8747:
  8272  0026DA  2EE8               	decfsz	wreg,f,c
  8273  0026DC  D7FE               	bra	u8747
  8274  0026DE  2F71               	decfsz	??_Power_ReadRegister& (0+255),f,b
  8275  0026E0  D7FC               	bra	u8747
  8276  0026E2  2F72               	decfsz	(??_Power_ReadRegister+1)& (0+255),f,b
  8277  0026E4  D7FA               	bra	u8747
  8278  0026E6  F000               	nop	
  8279  0026E8                     
  8280                           ;INA260.c: 72:     return power;
  8281  0026E8  C036  F06D         	movff	_power,?_Power_ReadRegister
  8282  0026EC  C037  F06E         	movff	_power+1,?_Power_ReadRegister+1
  8283  0026F0  C038  F06F         	movff	_power+2,?_Power_ReadRegister+2
  8284  0026F4  C039  F070         	movff	_power+3,?_Power_ReadRegister+3
  8285  0026F8  0012               	return		;funcret
  8286  0026FA                     __end_of_Power_ReadRegister:
  8287                           	callstack 0
  8288                           
  8289 ;; *************** function ___wmul *****************
  8290 ;; Defined at:
  8291 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  8292 ;; Parameters:    Size  Location     Type
  8293 ;;  multiplier      2   25[COMRAM] unsigned int 
  8294 ;;  multiplicand    2   27[COMRAM] unsigned int 
  8295 ;; Auto vars:     Size  Location     Type
  8296 ;;  product         2   29[COMRAM] unsigned int 
  8297 ;; Return value:  Size  Location     Type
  8298 ;;                  2   25[COMRAM] unsigned int 
  8299 ;; Registers used:
  8300 ;;		wreg, status,2, status,0, prodl, prodh
  8301 ;; Tracked objects:
  8302 ;;		On entry : 0/0
  8303 ;;		On exit  : 0/0
  8304 ;;		Unchanged: 0/0
  8305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8306 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8309 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8310 ;;Total ram usage:        6 bytes
  8311 ;; Hardware stack levels used:    1
  8312 ;; Hardware stack levels required when called:    7
  8313 ;; This function calls:
  8314 ;;		Nothing
  8315 ;; This function is called by:
  8316 ;;		_Power_ReadRegister
  8317 ;;		_atoi
  8318 ;; This function uses a non-reentrant model
  8319 ;;
  8320                           
  8321                           	psect	text33
  8322  003950                     __ptext33:
  8323                           	callstack 0
  8324  003950                     ___wmul:
  8325                           	callstack 19
  8326  003950  501A               	movf	___wmul@multiplier^0,w,c
  8327  003952  021C               	mulwf	___wmul@multiplicand^0,c
  8328  003954  CFF3 F01E          	movff	prodl,___wmul@product
  8329  003958  CFF4 F01F          	movff	prodh,___wmul@product+1
  8330  00395C  501A               	movf	___wmul@multiplier^0,w,c
  8331  00395E  021D               	mulwf	(___wmul@multiplicand+1)^0,c
  8332  003960  50F3               	movf	243,w,c
  8333  003962  261F               	addwf	(___wmul@product+1)^0,f,c
  8334  003964  501B               	movf	(___wmul@multiplier+1)^0,w,c
  8335  003966  021C               	mulwf	___wmul@multiplicand^0,c
  8336  003968  50F3               	movf	243,w,c
  8337  00396A  261F               	addwf	(___wmul@product+1)^0,f,c
  8338  00396C  C01E  F01A         	movff	___wmul@product,?___wmul
  8339  003970  C01F  F01B         	movff	___wmul@product+1,?___wmul+1
  8340  003974  0012               	return		;funcret
  8341  003976                     __end_of___wmul:
  8342                           	callstack 0
  8343                           
  8344 ;; *************** function _I2C_Master_Init *****************
  8345 ;; Defined at:
  8346 ;;		line 115 in file "INA260.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;  c               4   38[COMRAM] const unsigned long 
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;		None
  8351 ;; Return value:  Size  Location     Type
  8352 ;;                  1    wreg      void 
  8353 ;; Registers used:
  8354 ;;		wreg, status,2, status,0, cstack
  8355 ;; Tracked objects:
  8356 ;;		On entry : 0/0
  8357 ;;		On exit  : 0/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8360 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8362 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8363 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8364 ;;Total ram usage:        8 bytes
  8365 ;; Hardware stack levels used:    1
  8366 ;; Hardware stack levels required when called:    8
  8367 ;; This function calls:
  8368 ;;		___lldiv
  8369 ;; This function is called by:
  8370 ;;		_main
  8371 ;; This function uses a non-reentrant model
  8372 ;;
  8373                           
  8374                           	psect	text34
  8375  00345A                     __ptext34:
  8376                           	callstack 0
  8377  00345A                     _I2C_Master_Init:
  8378                           	callstack 22
  8379  00345A                     
  8380                           ;INA260.c: 115: void I2C_Master_Init(const unsigned long c);INA260.c: 116: {;INA260.c: 1
      +                          17:   SSPCON1 = 0b00101000;
  8381  00345A  0E28               	movlw	40
  8382  00345C  6EC6               	movwf	198,c	;volatile
  8383                           
  8384                           ;INA260.c: 118:   SSPCON2 = 0;
  8385  00345E  0E00               	movlw	0
  8386  003460  6EC5               	movwf	197,c	;volatile
  8387  003462                     
  8388                           ;INA260.c: 119:   SSPADD = (8000000/(4*c))-1;
  8389  003462  0E00               	movlw	0
  8390  003464  6E1A               	movwf	___lldiv@dividend^0,c
  8391  003466  0E12               	movlw	18
  8392  003468  6E1B               	movwf	(___lldiv@dividend+1)^0,c
  8393  00346A  0E7A               	movlw	122
  8394  00346C  6E1C               	movwf	(___lldiv@dividend+2)^0,c
  8395  00346E  0E00               	movlw	0
  8396  003470  6E1D               	movwf	(___lldiv@dividend+3)^0,c
  8397  003472  C027  F060         	movff	I2C_Master_Init@c,??_I2C_Master_Init
  8398  003476  C028  F061         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
  8399  00347A  C029  F062         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
  8400  00347E  C02A  F063         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
  8401  003482  0E02               	movlw	2
  8402  003484                     u8655:
  8403  003484  90D8               	bcf	status,0,c
  8404  003486  0100               	movlb	0	; () banked
  8405  003488  3760               	rlcf	??_I2C_Master_Init& (0+255),f,b
  8406  00348A  3761               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
  8407  00348C  3762               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
  8408  00348E  3763               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
  8409  003490  2EE8               	decfsz	wreg,f,c
  8410  003492  EF42  F01A         	goto	u8655
  8411  003496  C060  F01E         	movff	??_I2C_Master_Init,___lldiv@divisor
  8412  00349A  C061  F01F         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  8413  00349E  C062  F020         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  8414  0034A2  C063  F021         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  8415  0034A6  EC64  F018         	call	___lldiv	;wreg free
  8416  0034AA  041A               	decf	?___lldiv^0,w,c
  8417  0034AC  6EC8               	movwf	200,c	;volatile
  8418  0034AE                     
  8419                           ;INA260.c: 120:   SSPSTAT = 0;
  8420  0034AE  0E00               	movlw	0
  8421  0034B0  6EC7               	movwf	199,c	;volatile
  8422  0034B2                     
  8423                           ;INA260.c: 121:   TRISC3 = 1;
  8424  0034B2  8694               	bsf	3988,3,c	;volatile
  8425  0034B4                     
  8426                           ;INA260.c: 122:   TRISC4 = 1;
  8427  0034B4  8894               	bsf	3988,4,c	;volatile
  8428  0034B6  0012               	return		;funcret
  8429  0034B8                     __end_of_I2C_Master_Init:
  8430                           	callstack 0
  8431                           
  8432 ;; *************** function ___lldiv *****************
  8433 ;; Defined at:
  8434 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__lldiv.c"
  8435 ;; Parameters:    Size  Location     Type
  8436 ;;  dividend        4   25[COMRAM] unsigned long 
  8437 ;;  divisor         4   29[COMRAM] unsigned long 
  8438 ;; Auto vars:     Size  Location     Type
  8439 ;;  quotient        4   33[COMRAM] unsigned long 
  8440 ;;  counter         1   37[COMRAM] unsigned char 
  8441 ;; Return value:  Size  Location     Type
  8442 ;;                  4   25[COMRAM] unsigned long 
  8443 ;; Registers used:
  8444 ;;		wreg, status,2, status,0
  8445 ;; Tracked objects:
  8446 ;;		On entry : 0/0
  8447 ;;		On exit  : 0/0
  8448 ;;		Unchanged: 0/0
  8449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8450 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8451 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8453 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8454 ;;Total ram usage:       13 bytes
  8455 ;; Hardware stack levels used:    1
  8456 ;; Hardware stack levels required when called:    7
  8457 ;; This function calls:
  8458 ;;		Nothing
  8459 ;; This function is called by:
  8460 ;;		_I2C_Master_Init
  8461 ;; This function uses a non-reentrant model
  8462 ;;
  8463                           
  8464                           	psect	text35
  8465  0030C8                     __ptext35:
  8466                           	callstack 0
  8467  0030C8                     ___lldiv:
  8468                           	callstack 22
  8469  0030C8  0E00               	movlw	0
  8470  0030CA  6E22               	movwf	___lldiv@quotient^0,c
  8471  0030CC  0E00               	movlw	0
  8472  0030CE  6E23               	movwf	(___lldiv@quotient+1)^0,c
  8473  0030D0  0E00               	movlw	0
  8474  0030D2  6E24               	movwf	(___lldiv@quotient+2)^0,c
  8475  0030D4  0E00               	movlw	0
  8476  0030D6  6E25               	movwf	(___lldiv@quotient+3)^0,c
  8477  0030D8  501E               	movf	___lldiv@divisor^0,w,c
  8478  0030DA  101F               	iorwf	(___lldiv@divisor+1)^0,w,c
  8479  0030DC  1020               	iorwf	(___lldiv@divisor+2)^0,w,c
  8480  0030DE  1021               	iorwf	(___lldiv@divisor+3)^0,w,c
  8481  0030E0  B4D8               	btfsc	status,2,c
  8482  0030E2  EF75  F018         	goto	u5621
  8483  0030E6  EF77  F018         	goto	u5620
  8484  0030EA                     u5621:
  8485  0030EA  EFAD  F018         	goto	l836
  8486  0030EE                     u5620:
  8487  0030EE  0E01               	movlw	1
  8488  0030F0  6E26               	movwf	___lldiv@counter^0,c
  8489  0030F2  EF81  F018         	goto	l5952
  8490  0030F6                     l5950:
  8491  0030F6  90D8               	bcf	status,0,c
  8492  0030F8  361E               	rlcf	___lldiv@divisor^0,f,c
  8493  0030FA  361F               	rlcf	(___lldiv@divisor+1)^0,f,c
  8494  0030FC  3620               	rlcf	(___lldiv@divisor+2)^0,f,c
  8495  0030FE  3621               	rlcf	(___lldiv@divisor+3)^0,f,c
  8496  003100  2A26               	incf	___lldiv@counter^0,f,c
  8497  003102                     l5952:
  8498  003102  AE21               	btfss	(___lldiv@divisor+3)^0,7,c
  8499  003104  EF86  F018         	goto	u5631
  8500  003108  EF88  F018         	goto	u5630
  8501  00310C                     u5631:
  8502  00310C  EF7B  F018         	goto	l5950
  8503  003110                     u5630:
  8504  003110                     l5954:
  8505  003110  90D8               	bcf	status,0,c
  8506  003112  3622               	rlcf	___lldiv@quotient^0,f,c
  8507  003114  3623               	rlcf	(___lldiv@quotient+1)^0,f,c
  8508  003116  3624               	rlcf	(___lldiv@quotient+2)^0,f,c
  8509  003118  3625               	rlcf	(___lldiv@quotient+3)^0,f,c
  8510  00311A  501E               	movf	___lldiv@divisor^0,w,c
  8511  00311C  5C1A               	subwf	___lldiv@dividend^0,w,c
  8512  00311E  501F               	movf	(___lldiv@divisor+1)^0,w,c
  8513  003120  581B               	subwfb	(___lldiv@dividend+1)^0,w,c
  8514  003122  5020               	movf	(___lldiv@divisor+2)^0,w,c
  8515  003124  581C               	subwfb	(___lldiv@dividend+2)^0,w,c
  8516  003126  5021               	movf	(___lldiv@divisor+3)^0,w,c
  8517  003128  581D               	subwfb	(___lldiv@dividend+3)^0,w,c
  8518  00312A  A0D8               	btfss	status,0,c
  8519  00312C  EF9A  F018         	goto	u5641
  8520  003130  EF9C  F018         	goto	u5640
  8521  003134                     u5641:
  8522  003134  EFA5  F018         	goto	l5962
  8523  003138                     u5640:
  8524  003138  501E               	movf	___lldiv@divisor^0,w,c
  8525  00313A  5E1A               	subwf	___lldiv@dividend^0,f,c
  8526  00313C  501F               	movf	(___lldiv@divisor+1)^0,w,c
  8527  00313E  5A1B               	subwfb	(___lldiv@dividend+1)^0,f,c
  8528  003140  5020               	movf	(___lldiv@divisor+2)^0,w,c
  8529  003142  5A1C               	subwfb	(___lldiv@dividend+2)^0,f,c
  8530  003144  5021               	movf	(___lldiv@divisor+3)^0,w,c
  8531  003146  5A1D               	subwfb	(___lldiv@dividend+3)^0,f,c
  8532  003148  8022               	bsf	___lldiv@quotient^0,0,c
  8533  00314A                     l5962:
  8534  00314A  90D8               	bcf	status,0,c
  8535  00314C  3221               	rrcf	(___lldiv@divisor+3)^0,f,c
  8536  00314E  3220               	rrcf	(___lldiv@divisor+2)^0,f,c
  8537  003150  321F               	rrcf	(___lldiv@divisor+1)^0,f,c
  8538  003152  321E               	rrcf	___lldiv@divisor^0,f,c
  8539  003154  2E26               	decfsz	___lldiv@counter^0,f,c
  8540  003156  EF88  F018         	goto	l5954
  8541  00315A                     l836:
  8542  00315A  C022  F01A         	movff	___lldiv@quotient,?___lldiv
  8543  00315E  C023  F01B         	movff	___lldiv@quotient+1,?___lldiv+1
  8544  003162  C024  F01C         	movff	___lldiv@quotient+2,?___lldiv+2
  8545  003166  C025  F01D         	movff	___lldiv@quotient+3,?___lldiv+3
  8546  00316A  0012               	return		;funcret
  8547  00316C                     __end_of___lldiv:
  8548                           	callstack 0
  8549                           
  8550 ;; *************** function _Current_ReadRegister *****************
  8551 ;; Defined at:
  8552 ;;		line 43 in file "INA260.c"
  8553 ;; Parameters:    Size  Location     Type
  8554 ;;		None
  8555 ;; Auto vars:     Size  Location     Type
  8556 ;;  temp_d          2   31[BANK0 ] unsigned int 
  8557 ;;  temp_c          1   33[BANK0 ] unsigned char 
  8558 ;; Return value:  Size  Location     Type
  8559 ;;                  4   25[BANK0 ] float 
  8560 ;; Registers used:
  8561 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8562 ;; Tracked objects:
  8563 ;;		On entry : 0/0
  8564 ;;		On exit  : 0/0
  8565 ;;		Unchanged: 0/0
  8566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8567 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8568 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8569 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8570 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8571 ;;Total ram usage:        9 bytes
  8572 ;; Hardware stack levels used:    1
  8573 ;; Hardware stack levels required when called:    9
  8574 ;; This function calls:
  8575 ;;		_I2C_Master_Read
  8576 ;;		_I2C_Master_RepeatedStart
  8577 ;;		_I2C_Master_Start
  8578 ;;		_I2C_Master_Stop
  8579 ;;		_I2C_Master_Write
  8580 ;;		___fldiv
  8581 ;;		___flmul
  8582 ;;		___xxtofl
  8583 ;; This function is called by:
  8584 ;;		_main
  8585 ;; This function uses a non-reentrant model
  8586 ;;
  8587                           
  8588                           	psect	text36
  8589  0024C4                     __ptext36:
  8590                           	callstack 0
  8591  0024C4                     _Current_ReadRegister:
  8592                           	callstack 21
  8593  0024C4                     
  8594                           ;INA260.c: 44:     I2C_Master_Start();
  8595  0024C4  EC3A  F01D         	call	_I2C_Master_Start	;wreg free
  8596                           
  8597                           ;INA260.c: 45:     I2C_Master_Write(0x80);
  8598  0024C8  0E00               	movlw	0
  8599  0024CA  6E1C               	movwf	(I2C_Master_Write@d+1)^0,c
  8600  0024CC  0E80               	movlw	128
  8601  0024CE  6E1B               	movwf	I2C_Master_Write@d^0,c
  8602  0024D0  EC31  F01D         	call	_I2C_Master_Write	;wreg free
  8603                           
  8604                           ;INA260.c: 46:     I2C_Master_Write(0x01);
  8605  0024D4  0E00               	movlw	0
  8606  0024D6  6E1C               	movwf	(I2C_Master_Write@d+1)^0,c
  8607  0024D8  0E01               	movlw	1
  8608  0024DA  6E1B               	movwf	I2C_Master_Write@d^0,c
  8609  0024DC  EC31  F01D         	call	_I2C_Master_Write	;wreg free
  8610                           
  8611                           ;INA260.c: 47:     I2C_Master_RepeatedStart();
  8612  0024E0  EC3E  F01D         	call	_I2C_Master_RepeatedStart	;wreg free
  8613                           
  8614                           ;INA260.c: 48:     I2C_Master_Write(0x81);
  8615  0024E4  0E00               	movlw	0
  8616  0024E6  6E1C               	movwf	(I2C_Master_Write@d+1)^0,c
  8617  0024E8  0E81               	movlw	129
  8618  0024EA  6E1B               	movwf	I2C_Master_Write@d^0,c
  8619  0024EC  EC31  F01D         	call	_I2C_Master_Write	;wreg free
  8620                           
  8621                           ;INA260.c: 49:     char temp_c = I2C_Master_Read(1);
  8622  0024F0  0E00               	movlw	0
  8623  0024F2  6E1C               	movwf	(I2C_Master_Read@a+1)^0,c
  8624  0024F4  0E01               	movlw	1
  8625  0024F6  6E1B               	movwf	I2C_Master_Read@a^0,c
  8626  0024F8  ECCA  F01B         	call	_I2C_Master_Read	;wreg free
  8627  0024FC  501B               	movf	?_I2C_Master_Read^0,w,c
  8628  0024FE  0100               	movlb	0	; () banked
  8629  002500  6F81               	movwf	Current_ReadRegister@temp_c& (0+255),b
  8630                           
  8631                           ;INA260.c: 50:     unsigned int temp_d = temp_c<<8 | I2C_Master_Read(0);
  8632  002502  0E00               	movlw	0
  8633  002504  6E1C               	movwf	(I2C_Master_Read@a+1)^0,c
  8634  002506  0E00               	movlw	0
  8635  002508  6E1B               	movwf	I2C_Master_Read@a^0,c
  8636  00250A  ECCA  F01B         	call	_I2C_Master_Read	;wreg free
  8637  00250E  0100               	movlb	0	; () banked
  8638  002510  5181               	movf	Current_ReadRegister@temp_c& (0+255),w,b
  8639  002512  6F7E               	movwf	(??_Current_ReadRegister+1)& (0+255),b
  8640  002514  6B7D               	clrf	??_Current_ReadRegister& (0+255),b
  8641  002516  501B               	movf	?_I2C_Master_Read^0,w,c
  8642  002518  117D               	iorwf	??_Current_ReadRegister& (0+255),w,b
  8643  00251A  6F7F               	movwf	Current_ReadRegister@temp_d& (0+255),b
  8644  00251C  501C               	movf	(?_I2C_Master_Read+1)^0,w,c
  8645  00251E  117E               	iorwf	(??_Current_ReadRegister+1)& (0+255),w,b
  8646  002520  6F80               	movwf	(Current_ReadRegister@temp_d+1)& (0+255),b
  8647  002522                     
  8648                           ; BSR set to: 0
  8649                           ;INA260.c: 51:     current = temp_d *1.25;
  8650  002522  C07F  F020         	movff	Current_ReadRegister@temp_d,___xxtofl@val
  8651  002526  C080  F021         	movff	Current_ReadRegister@temp_d+1,___xxtofl@val+1
  8652  00252A  6A22               	clrf	(___xxtofl@val+2)^0,c
  8653  00252C  6A23               	clrf	(___xxtofl@val+3)^0,c
  8654  00252E  0E00               	movlw	0
  8655  002530  EC27  F010         	call	___xxtofl
  8656  002534  C020  F060         	movff	?___xxtofl,___flmul@b
  8657  002538  C021  F061         	movff	?___xxtofl+1,___flmul@b+1
  8658  00253C  C022  F062         	movff	?___xxtofl+2,___flmul@b+2
  8659  002540  C023  F063         	movff	?___xxtofl+3,___flmul@b+3
  8660  002544  0E00               	movlw	0
  8661  002546  0100               	movlb	0	; () banked
  8662  002548  6F64               	movwf	___flmul@a& (0+255),b
  8663  00254A  0E00               	movlw	0
  8664  00254C  6F65               	movwf	(___flmul@a+1)& (0+255),b
  8665  00254E  0EA0               	movlw	160
  8666  002550  6F66               	movwf	(___flmul@a+2)& (0+255),b
  8667  002552  0E3F               	movlw	63
  8668  002554  6F67               	movwf	(___flmul@a+3)& (0+255),b
  8669  002556  EC38  F00B         	call	___flmul	;wreg free
  8670  00255A  C060  F03A         	movff	?___flmul,_current
  8671  00255E  C061  F03B         	movff	?___flmul+1,_current+1
  8672  002562  C062  F03C         	movff	?___flmul+2,_current+2
  8673  002566  C063  F03D         	movff	?___flmul+3,_current+3
  8674  00256A                     
  8675                           ;INA260.c: 52:     I2C_Master_Stop();
  8676  00256A  EC36  F01D         	call	_I2C_Master_Stop	;wreg free
  8677  00256E                     
  8678                           ;INA260.c: 53:     current = current/1000;
  8679  00256E  C03A  F01A         	movff	_current,___fldiv@b
  8680  002572  C03B  F01B         	movff	_current+1,___fldiv@b+1
  8681  002576  C03C  F01C         	movff	_current+2,___fldiv@b+2
  8682  00257A  C03D  F01D         	movff	_current+3,___fldiv@b+3
  8683  00257E  0E00               	movlw	0
  8684  002580  6E1E               	movwf	___fldiv@a^0,c
  8685  002582  0E00               	movlw	0
  8686  002584  6E1F               	movwf	(___fldiv@a+1)^0,c
  8687  002586  0E7A               	movlw	122
  8688  002588  6E20               	movwf	(___fldiv@a+2)^0,c
  8689  00258A  0E44               	movlw	68
  8690  00258C  6E21               	movwf	(___fldiv@a+3)^0,c
  8691  00258E  EC4E  F00D         	call	___fldiv	;wreg free
  8692  002592  C01A  F03A         	movff	?___fldiv,_current
  8693  002596  C01B  F03B         	movff	?___fldiv+1,_current+1
  8694  00259A  C01C  F03C         	movff	?___fldiv+2,_current+2
  8695  00259E  C01D  F03D         	movff	?___fldiv+3,_current+3
  8696  0025A2                     
  8697                           ;INA260.c: 54:     _delay((unsigned long)((300)*(8000000/4000.0)));
  8698  0025A2  0E04               	movlw	4
  8699  0025A4  0100               	movlb	0	; () banked
  8700  0025A6  6F7E               	movwf	(??_Current_ReadRegister+1)& (0+255),b
  8701  0025A8  0E0C               	movlw	12
  8702  0025AA  6F7D               	movwf	??_Current_ReadRegister& (0+255),b
  8703  0025AC  0E33               	movlw	51
  8704  0025AE                     u8757:
  8705  0025AE  2EE8               	decfsz	wreg,f,c
  8706  0025B0  D7FE               	bra	u8757
  8707  0025B2  2F7D               	decfsz	??_Current_ReadRegister& (0+255),f,b
  8708  0025B4  D7FC               	bra	u8757
  8709  0025B6  2F7E               	decfsz	(??_Current_ReadRegister+1)& (0+255),f,b
  8710  0025B8  D7FA               	bra	u8757
  8711  0025BA  D000               	nop2	
  8712  0025BC                     
  8713                           ;INA260.c: 55:     _delay((unsigned long)((600)*(8000000/4000.0)));
  8714  0025BC  0E07               	movlw	7
  8715  0025BE  0100               	movlb	0	; () banked
  8716  0025C0  6F7E               	movwf	(??_Current_ReadRegister+1)& (0+255),b
  8717  0025C2  0E17               	movlw	23
  8718  0025C4  6F7D               	movwf	??_Current_ReadRegister& (0+255),b
  8719  0025C6  0E6A               	movlw	106
  8720  0025C8                     u8767:
  8721  0025C8  2EE8               	decfsz	wreg,f,c
  8722  0025CA  D7FE               	bra	u8767
  8723  0025CC  2F7D               	decfsz	??_Current_ReadRegister& (0+255),f,b
  8724  0025CE  D7FC               	bra	u8767
  8725  0025D0  2F7E               	decfsz	(??_Current_ReadRegister+1)& (0+255),f,b
  8726  0025D2  D7FA               	bra	u8767
  8727  0025D4  F000               	nop	
  8728  0025D6                     
  8729                           ;INA260.c: 56:     return current;
  8730  0025D6  C03A  F079         	movff	_current,?_Current_ReadRegister
  8731  0025DA  C03B  F07A         	movff	_current+1,?_Current_ReadRegister+1
  8732  0025DE  C03C  F07B         	movff	_current+2,?_Current_ReadRegister+2
  8733  0025E2  C03D  F07C         	movff	_current+3,?_Current_ReadRegister+3
  8734  0025E6  0012               	return		;funcret
  8735  0025E8                     __end_of_Current_ReadRegister:
  8736                           	callstack 0
  8737                           
  8738 ;; *************** function ___xxtofl *****************
  8739 ;; Defined at:
  8740 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  8741 ;; Parameters:    Size  Location     Type
  8742 ;;  sign            1    wreg     unsigned char 
  8743 ;;  val             4   31[COMRAM] long 
  8744 ;; Auto vars:     Size  Location     Type
  8745 ;;  sign            1   39[COMRAM] unsigned char 
  8746 ;;  arg             4   41[COMRAM] unsigned long 
  8747 ;;  exp             1   40[COMRAM] unsigned char 
  8748 ;; Return value:  Size  Location     Type
  8749 ;;                  4   31[COMRAM] unsigned char 
  8750 ;; Registers used:
  8751 ;;		wreg, status,2, status,0
  8752 ;; Tracked objects:
  8753 ;;		On entry : 0/0
  8754 ;;		On exit  : 0/0
  8755 ;;		Unchanged: 0/0
  8756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8757 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8758 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8759 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8760 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8761 ;;Total ram usage:       14 bytes
  8762 ;; Hardware stack levels used:    1
  8763 ;; Hardware stack levels required when called:    7
  8764 ;; This function calls:
  8765 ;;		Nothing
  8766 ;; This function is called by:
  8767 ;;		_Voltage_ReadRegister
  8768 ;;		_Current_ReadRegister
  8769 ;;		_Power_ReadRegister
  8770 ;; This function uses a non-reentrant model
  8771 ;;
  8772                           
  8773                           	psect	text37
  8774  00204E                     __ptext37:
  8775                           	callstack 0
  8776  00204E                     ___xxtofl:
  8777                           	callstack 22
  8778                           
  8779                           ;incstack = 0
  8780                           ;___xxtofl@sign stored from wreg
  8781  00204E  6E28               	movwf	___xxtofl@sign^0,c
  8782  002050  5028               	movf	___xxtofl@sign^0,w,c
  8783  002052  B4D8               	btfsc	status,2,c
  8784  002054  EF2E  F010         	goto	u8541
  8785  002058  EF30  F010         	goto	u8540
  8786  00205C                     u8541:
  8787  00205C  EF52  F010         	goto	l1464
  8788  002060                     u8540:
  8789  002060  BE23               	btfsc	(___xxtofl@val+3)^0,7,c
  8790  002062  EF37  F010         	goto	u8550
  8791  002066  EF35  F010         	goto	u8551
  8792  00206A                     u8551:
  8793  00206A  EF52  F010         	goto	l1464
  8794  00206E                     u8550:
  8795  00206E  C020  F024         	movff	___xxtofl@val,??___xxtofl
  8796  002072  C021  F025         	movff	___xxtofl@val+1,??___xxtofl+1
  8797  002076  C022  F026         	movff	___xxtofl@val+2,??___xxtofl+2
  8798  00207A  C023  F027         	movff	___xxtofl@val+3,??___xxtofl+3
  8799  00207E  1E24               	comf	??___xxtofl^0,f,c
  8800  002080  1E25               	comf	(??___xxtofl+1)^0,f,c
  8801  002082  1E26               	comf	(??___xxtofl+2)^0,f,c
  8802  002084  1E27               	comf	(??___xxtofl+3)^0,f,c
  8803  002086  2A24               	incf	??___xxtofl^0,f,c
  8804  002088  0E00               	movlw	0
  8805  00208A  2225               	addwfc	(??___xxtofl+1)^0,f,c
  8806  00208C  2226               	addwfc	(??___xxtofl+2)^0,f,c
  8807  00208E  2227               	addwfc	(??___xxtofl+3)^0,f,c
  8808  002090  C024  F02A         	movff	??___xxtofl,___xxtofl@arg
  8809  002094  C025  F02B         	movff	??___xxtofl+1,___xxtofl@arg+1
  8810  002098  C026  F02C         	movff	??___xxtofl+2,___xxtofl@arg+2
  8811  00209C  C027  F02D         	movff	??___xxtofl+3,___xxtofl@arg+3
  8812  0020A0  EF5A  F010         	goto	l7930
  8813  0020A4                     l1464:
  8814  0020A4  C020  F02A         	movff	___xxtofl@val,___xxtofl@arg
  8815  0020A8  C021  F02B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8816  0020AC  C022  F02C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8817  0020B0  C023  F02D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8818  0020B4                     l7930:
  8819  0020B4  5020               	movf	___xxtofl@val^0,w,c
  8820  0020B6  1021               	iorwf	(___xxtofl@val+1)^0,w,c
  8821  0020B8  1022               	iorwf	(___xxtofl@val+2)^0,w,c
  8822  0020BA  1023               	iorwf	(___xxtofl@val+3)^0,w,c
  8823  0020BC  A4D8               	btfss	status,2,c
  8824  0020BE  EF63  F010         	goto	u8561
  8825  0020C2  EF65  F010         	goto	u8560
  8826  0020C6                     u8561:
  8827  0020C6  EF6F  F010         	goto	l7936
  8828  0020CA                     u8560:
  8829  0020CA  0E00               	movlw	0
  8830  0020CC  6E20               	movwf	?___xxtofl^0,c
  8831  0020CE  0E00               	movlw	0
  8832  0020D0  6E21               	movwf	(?___xxtofl+1)^0,c
  8833  0020D2  0E00               	movlw	0
  8834  0020D4  6E22               	movwf	(?___xxtofl+2)^0,c
  8835  0020D6  0E00               	movlw	0
  8836  0020D8  6E23               	movwf	(?___xxtofl+3)^0,c
  8837  0020DA  EF00  F011         	goto	l1467
  8838  0020DE                     l7936:
  8839  0020DE  0E96               	movlw	150
  8840  0020E0  6E29               	movwf	___xxtofl@exp^0,c
  8841  0020E2  EF79  F010         	goto	l7940
  8842  0020E6                     l7938:
  8843  0020E6  2A29               	incf	___xxtofl@exp^0,f,c
  8844  0020E8  90D8               	bcf	status,0,c
  8845  0020EA  322D               	rrcf	(___xxtofl@arg+3)^0,f,c
  8846  0020EC  322C               	rrcf	(___xxtofl@arg+2)^0,f,c
  8847  0020EE  322B               	rrcf	(___xxtofl@arg+1)^0,f,c
  8848  0020F0  322A               	rrcf	___xxtofl@arg^0,f,c
  8849  0020F2                     l7940:
  8850  0020F2  0E00               	movlw	0
  8851  0020F4  142A               	andwf	___xxtofl@arg^0,w,c
  8852  0020F6  6E24               	movwf	??___xxtofl^0,c
  8853  0020F8  0E00               	movlw	0
  8854  0020FA  142B               	andwf	(___xxtofl@arg+1)^0,w,c
  8855  0020FC  6E25               	movwf	(??___xxtofl+1)^0,c
  8856  0020FE  0E00               	movlw	0
  8857  002100  142C               	andwf	(___xxtofl@arg+2)^0,w,c
  8858  002102  6E26               	movwf	(??___xxtofl+2)^0,c
  8859  002104  0EFE               	movlw	254
  8860  002106  142D               	andwf	(___xxtofl@arg+3)^0,w,c
  8861  002108  6E27               	movwf	(??___xxtofl+3)^0,c
  8862  00210A  5024               	movf	??___xxtofl^0,w,c
  8863  00210C  1025               	iorwf	(??___xxtofl+1)^0,w,c
  8864  00210E  1026               	iorwf	(??___xxtofl+2)^0,w,c
  8865  002110  1027               	iorwf	(??___xxtofl+3)^0,w,c
  8866  002112  A4D8               	btfss	status,2,c
  8867  002114  EF8E  F010         	goto	u8571
  8868  002118  EF90  F010         	goto	u8570
  8869  00211C                     u8571:
  8870  00211C  EF73  F010         	goto	l7938
  8871  002120                     u8570:
  8872  002120  EF9E  F010         	goto	l1471
  8873  002124                     l7942:
  8874  002124  2A29               	incf	___xxtofl@exp^0,f,c
  8875  002126  0E01               	movlw	1
  8876  002128  262A               	addwf	___xxtofl@arg^0,f,c
  8877  00212A  0E00               	movlw	0
  8878  00212C  222B               	addwfc	(___xxtofl@arg+1)^0,f,c
  8879  00212E  222C               	addwfc	(___xxtofl@arg+2)^0,f,c
  8880  002130  222D               	addwfc	(___xxtofl@arg+3)^0,f,c
  8881  002132  90D8               	bcf	status,0,c
  8882  002134  322D               	rrcf	(___xxtofl@arg+3)^0,f,c
  8883  002136  322C               	rrcf	(___xxtofl@arg+2)^0,f,c
  8884  002138  322B               	rrcf	(___xxtofl@arg+1)^0,f,c
  8885  00213A  322A               	rrcf	___xxtofl@arg^0,f,c
  8886  00213C                     l1471:
  8887  00213C  0E00               	movlw	0
  8888  00213E  142A               	andwf	___xxtofl@arg^0,w,c
  8889  002140  6E24               	movwf	??___xxtofl^0,c
  8890  002142  0E00               	movlw	0
  8891  002144  142B               	andwf	(___xxtofl@arg+1)^0,w,c
  8892  002146  6E25               	movwf	(??___xxtofl+1)^0,c
  8893  002148  0E00               	movlw	0
  8894  00214A  142C               	andwf	(___xxtofl@arg+2)^0,w,c
  8895  00214C  6E26               	movwf	(??___xxtofl+2)^0,c
  8896  00214E  0EFF               	movlw	255
  8897  002150  142D               	andwf	(___xxtofl@arg+3)^0,w,c
  8898  002152  6E27               	movwf	(??___xxtofl+3)^0,c
  8899  002154  5024               	movf	??___xxtofl^0,w,c
  8900  002156  1025               	iorwf	(??___xxtofl+1)^0,w,c
  8901  002158  1026               	iorwf	(??___xxtofl+2)^0,w,c
  8902  00215A  1027               	iorwf	(??___xxtofl+3)^0,w,c
  8903  00215C  A4D8               	btfss	status,2,c
  8904  00215E  EFB3  F010         	goto	u8581
  8905  002162  EFB5  F010         	goto	u8580
  8906  002166                     u8581:
  8907  002166  EF92  F010         	goto	l7942
  8908  00216A                     u8580:
  8909  00216A  EFBD  F010         	goto	l7950
  8910  00216E                     l7948:
  8911  00216E  0629               	decf	___xxtofl@exp^0,f,c
  8912  002170  90D8               	bcf	status,0,c
  8913  002172  362A               	rlcf	___xxtofl@arg^0,f,c
  8914  002174  362B               	rlcf	(___xxtofl@arg+1)^0,f,c
  8915  002176  362C               	rlcf	(___xxtofl@arg+2)^0,f,c
  8916  002178  362D               	rlcf	(___xxtofl@arg+3)^0,f,c
  8917  00217A                     l7950:
  8918  00217A  BE2C               	btfsc	(___xxtofl@arg+2)^0,7,c
  8919  00217C  EFC2  F010         	goto	u8591
  8920  002180  EFC4  F010         	goto	u8590
  8921  002184                     u8591:
  8922  002184  EFCC  F010         	goto	l1478
  8923  002188                     u8590:
  8924  002188  0E02               	movlw	2
  8925  00218A  6029               	cpfslt	___xxtofl@exp^0,c
  8926  00218C  EFCA  F010         	goto	u8601
  8927  002190  EFCC  F010         	goto	u8600
  8928  002194                     u8601:
  8929  002194  EFB7  F010         	goto	l7948
  8930  002198                     u8600:
  8931  002198                     l1478:
  8932  002198  B029               	btfsc	___xxtofl@exp^0,0,c
  8933  00219A  EFD1  F010         	goto	u8611
  8934  00219E  EFD3  F010         	goto	u8610
  8935  0021A2                     u8611:
  8936  0021A2  EFD4  F010         	goto	l7956
  8937  0021A6                     u8610:
  8938  0021A6  9E2C               	bcf	(___xxtofl@arg+2)^0,7,c
  8939  0021A8                     l7956:
  8940  0021A8  90D8               	bcf	status,0,c
  8941  0021AA  3229               	rrcf	___xxtofl@exp^0,f,c
  8942  0021AC  C029  F024         	movff	___xxtofl@exp,??___xxtofl
  8943  0021B0  6A25               	clrf	(??___xxtofl+1)^0,c
  8944  0021B2  6A26               	clrf	(??___xxtofl+2)^0,c
  8945  0021B4  6A27               	clrf	(??___xxtofl+3)^0,c
  8946  0021B6  C024  F027         	movff	??___xxtofl,??___xxtofl+3
  8947  0021BA  6A26               	clrf	(??___xxtofl+2)^0,c
  8948  0021BC  6A25               	clrf	(??___xxtofl+1)^0,c
  8949  0021BE  6A24               	clrf	??___xxtofl^0,c
  8950  0021C0  5024               	movf	??___xxtofl^0,w,c
  8951  0021C2  122A               	iorwf	___xxtofl@arg^0,f,c
  8952  0021C4  5025               	movf	(??___xxtofl+1)^0,w,c
  8953  0021C6  122B               	iorwf	(___xxtofl@arg+1)^0,f,c
  8954  0021C8  5026               	movf	(??___xxtofl+2)^0,w,c
  8955  0021CA  122C               	iorwf	(___xxtofl@arg+2)^0,f,c
  8956  0021CC  5027               	movf	(??___xxtofl+3)^0,w,c
  8957  0021CE  122D               	iorwf	(___xxtofl@arg+3)^0,f,c
  8958  0021D0  5028               	movf	___xxtofl@sign^0,w,c
  8959  0021D2  B4D8               	btfsc	status,2,c
  8960  0021D4  EFEE  F010         	goto	u8621
  8961  0021D8  EFF0  F010         	goto	u8620
  8962  0021DC                     u8621:
  8963  0021DC  EFF8  F010         	goto	l7966
  8964  0021E0                     u8620:
  8965  0021E0  BE23               	btfsc	(___xxtofl@val+3)^0,7,c
  8966  0021E2  EFF7  F010         	goto	u8630
  8967  0021E6  EFF5  F010         	goto	u8631
  8968  0021EA                     u8631:
  8969  0021EA  EFF8  F010         	goto	l7966
  8970  0021EE                     u8630:
  8971  0021EE  8E2D               	bsf	(___xxtofl@arg+3)^0,7,c
  8972  0021F0                     l7966:
  8973  0021F0  C02A  F020         	movff	___xxtofl@arg,?___xxtofl
  8974  0021F4  C02B  F021         	movff	___xxtofl@arg+1,?___xxtofl+1
  8975  0021F8  C02C  F022         	movff	___xxtofl@arg+2,?___xxtofl+2
  8976  0021FC  C02D  F023         	movff	___xxtofl@arg+3,?___xxtofl+3
  8977  002200                     l1467:
  8978  002200  0012               	return		;funcret
  8979  002202                     __end_of___xxtofl:
  8980                           	callstack 0
  8981                           
  8982 ;; *************** function ___flmul *****************
  8983 ;; Defined at:
  8984 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  8985 ;; Parameters:    Size  Location     Type
  8986 ;;  b               4    0[BANK0 ] unsigned char 
  8987 ;;  a               4    4[BANK0 ] unsigned char 
  8988 ;; Auto vars:     Size  Location     Type
  8989 ;;  prod            4   19[BANK0 ] struct .
  8990 ;;  grs             4   14[BANK0 ] unsigned long 
  8991 ;;  temp            2   23[BANK0 ] struct .
  8992 ;;  bexp            1   18[BANK0 ] unsigned char 
  8993 ;;  aexp            1   13[BANK0 ] unsigned char 
  8994 ;;  sign            1   12[BANK0 ] unsigned char 
  8995 ;; Return value:  Size  Location     Type
  8996 ;;                  4    0[BANK0 ] unsigned char 
  8997 ;; Registers used:
  8998 ;;		wreg, status,2, status,0, prodl, prodh
  8999 ;; Tracked objects:
  9000 ;;		On entry : 0/0
  9001 ;;		On exit  : 0/0
  9002 ;;		Unchanged: 0/0
  9003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9004 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9005 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9006 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9007 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9008 ;;Total ram usage:       25 bytes
  9009 ;; Hardware stack levels used:    1
  9010 ;; Hardware stack levels required when called:    7
  9011 ;; This function calls:
  9012 ;;		Nothing
  9013 ;; This function is called by:
  9014 ;;		_Voltage_ReadRegister
  9015 ;;		_Current_ReadRegister
  9016 ;;		_efgtoa
  9017 ;; This function uses a non-reentrant model
  9018 ;;
  9019                           
  9020                           	psect	text38
  9021  001670                     __ptext38:
  9022                           	callstack 0
  9023  001670                     ___flmul:
  9024                           	callstack 19
  9025  001670  0100               	movlb	0	; () banked
  9026  001672  5163               	movf	(___flmul@b+3)& (0+255),w,b
  9027  001674  0B80               	andlw	128
  9028  001676  6F6C               	movwf	___flmul@sign& (0+255),b
  9029  001678  5163               	movf	(___flmul@b+3)& (0+255),w,b
  9030  00167A  2563               	addwf	(___flmul@b+3)& (0+255),w,b
  9031  00167C  6F72               	movwf	___flmul@bexp& (0+255),b
  9032  00167E                     
  9033                           ; BSR set to: 0
  9034  00167E  AF62               	btfss	(___flmul@b+2)& (0+255),7,b
  9035  001680  EF44  F00B         	goto	u6931
  9036  001684  EF46  F00B         	goto	u6930
  9037  001688                     u6931:
  9038  001688  EF47  F00B         	goto	l7026
  9039  00168C                     u6930:
  9040  00168C                     
  9041                           ; BSR set to: 0
  9042  00168C  8172               	bsf	___flmul@bexp& (0+255),0,b
  9043  00168E                     l7026:
  9044                           
  9045                           ; BSR set to: 0
  9046  00168E  5172               	movf	___flmul@bexp& (0+255),w,b
  9047  001690  B4D8               	btfsc	status,2,c
  9048  001692  EF4D  F00B         	goto	u6941
  9049  001696  EF4F  F00B         	goto	u6940
  9050  00169A                     u6941:
  9051  00169A  EF62  F00B         	goto	l7034
  9052  00169E                     u6940:
  9053  00169E                     
  9054                           ; BSR set to: 0
  9055  00169E  2972               	incf	___flmul@bexp& (0+255),w,b
  9056  0016A0  A4D8               	btfss	status,2,c
  9057  0016A2  EF55  F00B         	goto	u6951
  9058  0016A6  EF57  F00B         	goto	u6950
  9059  0016AA                     u6951:
  9060  0016AA  EF5F  F00B         	goto	l7032
  9061  0016AE                     u6950:
  9062  0016AE                     
  9063                           ; BSR set to: 0
  9064  0016AE  0E00               	movlw	0
  9065  0016B0  6F60               	movwf	___flmul@b& (0+255),b
  9066  0016B2  0E00               	movlw	0
  9067  0016B4  6F61               	movwf	(___flmul@b+1)& (0+255),b
  9068  0016B6  0E00               	movlw	0
  9069  0016B8  6F62               	movwf	(___flmul@b+2)& (0+255),b
  9070  0016BA  0E00               	movlw	0
  9071  0016BC  6F63               	movwf	(___flmul@b+3)& (0+255),b
  9072  0016BE                     l7032:
  9073                           
  9074                           ; BSR set to: 0
  9075  0016BE  8F62               	bsf	(___flmul@b+2)& (0+255),7,b
  9076  0016C0  EF6A  F00B         	goto	l7036
  9077  0016C4                     l7034:
  9078                           
  9079                           ; BSR set to: 0
  9080  0016C4  0E00               	movlw	0
  9081  0016C6  6F60               	movwf	___flmul@b& (0+255),b
  9082  0016C8  0E00               	movlw	0
  9083  0016CA  6F61               	movwf	(___flmul@b+1)& (0+255),b
  9084  0016CC  0E00               	movlw	0
  9085  0016CE  6F62               	movwf	(___flmul@b+2)& (0+255),b
  9086  0016D0  0E00               	movlw	0
  9087  0016D2  6F63               	movwf	(___flmul@b+3)& (0+255),b
  9088  0016D4                     l7036:
  9089                           
  9090                           ; BSR set to: 0
  9091  0016D4  5167               	movf	(___flmul@a+3)& (0+255),w,b
  9092  0016D6  0B80               	andlw	128
  9093  0016D8  1B6C               	xorwf	___flmul@sign& (0+255),f,b
  9094  0016DA                     
  9095                           ; BSR set to: 0
  9096  0016DA  5167               	movf	(___flmul@a+3)& (0+255),w,b
  9097  0016DC  2567               	addwf	(___flmul@a+3)& (0+255),w,b
  9098  0016DE  6F6D               	movwf	___flmul@aexp& (0+255),b
  9099  0016E0                     
  9100                           ; BSR set to: 0
  9101  0016E0  AF66               	btfss	(___flmul@a+2)& (0+255),7,b
  9102  0016E2  EF75  F00B         	goto	u6961
  9103  0016E6  EF77  F00B         	goto	u6960
  9104  0016EA                     u6961:
  9105  0016EA  EF78  F00B         	goto	l7044
  9106  0016EE                     u6960:
  9107  0016EE                     
  9108                           ; BSR set to: 0
  9109  0016EE  816D               	bsf	___flmul@aexp& (0+255),0,b
  9110  0016F0                     l7044:
  9111                           
  9112                           ; BSR set to: 0
  9113  0016F0  516D               	movf	___flmul@aexp& (0+255),w,b
  9114  0016F2  B4D8               	btfsc	status,2,c
  9115  0016F4  EF7E  F00B         	goto	u6971
  9116  0016F8  EF80  F00B         	goto	u6970
  9117  0016FC                     u6971:
  9118  0016FC  EF93  F00B         	goto	l7052
  9119  001700                     u6970:
  9120  001700                     
  9121                           ; BSR set to: 0
  9122  001700  296D               	incf	___flmul@aexp& (0+255),w,b
  9123  001702  A4D8               	btfss	status,2,c
  9124  001704  EF86  F00B         	goto	u6981
  9125  001708  EF88  F00B         	goto	u6980
  9126  00170C                     u6981:
  9127  00170C  EF90  F00B         	goto	l7050
  9128  001710                     u6980:
  9129  001710                     
  9130                           ; BSR set to: 0
  9131  001710  0E00               	movlw	0
  9132  001712  6F64               	movwf	___flmul@a& (0+255),b
  9133  001714  0E00               	movlw	0
  9134  001716  6F65               	movwf	(___flmul@a+1)& (0+255),b
  9135  001718  0E00               	movlw	0
  9136  00171A  6F66               	movwf	(___flmul@a+2)& (0+255),b
  9137  00171C  0E00               	movlw	0
  9138  00171E  6F67               	movwf	(___flmul@a+3)& (0+255),b
  9139  001720                     l7050:
  9140                           
  9141                           ; BSR set to: 0
  9142  001720  8F66               	bsf	(___flmul@a+2)& (0+255),7,b
  9143  001722  EF9B  F00B         	goto	l1423
  9144  001726                     l7052:
  9145                           
  9146                           ; BSR set to: 0
  9147  001726  0E00               	movlw	0
  9148  001728  6F64               	movwf	___flmul@a& (0+255),b
  9149  00172A  0E00               	movlw	0
  9150  00172C  6F65               	movwf	(___flmul@a+1)& (0+255),b
  9151  00172E  0E00               	movlw	0
  9152  001730  6F66               	movwf	(___flmul@a+2)& (0+255),b
  9153  001732  0E00               	movlw	0
  9154  001734  6F67               	movwf	(___flmul@a+3)& (0+255),b
  9155  001736                     l1423:
  9156                           
  9157                           ; BSR set to: 0
  9158  001736  516D               	movf	___flmul@aexp& (0+255),w,b
  9159  001738  B4D8               	btfsc	status,2,c
  9160  00173A  EFA1  F00B         	goto	u6991
  9161  00173E  EFA3  F00B         	goto	u6990
  9162  001742                     u6991:
  9163  001742  EFAB  F00B         	goto	l7056
  9164  001746                     u6990:
  9165  001746                     
  9166                           ; BSR set to: 0
  9167  001746  5172               	movf	___flmul@bexp& (0+255),w,b
  9168  001748  A4D8               	btfss	status,2,c
  9169  00174A  EFA9  F00B         	goto	u7001
  9170  00174E  EFAB  F00B         	goto	u7000
  9171  001752                     u7001:
  9172  001752  EFB5  F00B         	goto	l7060
  9173  001756                     u7000:
  9174  001756                     l7056:
  9175                           
  9176                           ; BSR set to: 0
  9177  001756  0E00               	movlw	0
  9178  001758  6F60               	movwf	?___flmul& (0+255),b
  9179  00175A  0E00               	movlw	0
  9180  00175C  6F61               	movwf	(?___flmul+1)& (0+255),b
  9181  00175E  0E00               	movlw	0
  9182  001760  6F62               	movwf	(?___flmul+2)& (0+255),b
  9183  001762  0E00               	movlw	0
  9184  001764  6F63               	movwf	(?___flmul+3)& (0+255),b
  9185  001766  EF4D  F00D         	goto	l1427
  9186  00176A                     l7060:
  9187                           
  9188                           ; BSR set to: 0
  9189  00176A  5166               	movf	(___flmul@a+2)& (0+255),w,b
  9190  00176C  0360               	mulwf	___flmul@b& (0+255),b
  9191  00176E  CFF3 F077          	movff	prodl,___flmul@temp
  9192  001772  CFF4 F078          	movff	prodh,___flmul@temp+1
  9193  001776                     
  9194                           ; BSR set to: 0
  9195  001776  5177               	movf	___flmul@temp& (0+255),w,b
  9196  001778  6F6E               	movwf	___flmul@grs& (0+255),b
  9197  00177A  6B6F               	clrf	(___flmul@grs+1)& (0+255),b
  9198  00177C  6B70               	clrf	(___flmul@grs+2)& (0+255),b
  9199  00177E  6B71               	clrf	(___flmul@grs+3)& (0+255),b
  9200  001780                     
  9201                           ; BSR set to: 0
  9202  001780  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  9203  001782  6F73               	movwf	___flmul@prod& (0+255),b
  9204  001784  6B74               	clrf	(___flmul@prod+1)& (0+255),b
  9205  001786  6B75               	clrf	(___flmul@prod+2)& (0+255),b
  9206  001788  6B76               	clrf	(___flmul@prod+3)& (0+255),b
  9207  00178A  5165               	movf	(___flmul@a+1)& (0+255),w,b
  9208  00178C  0361               	mulwf	(___flmul@b+1)& (0+255),b
  9209  00178E  CFF3 F077          	movff	prodl,___flmul@temp
  9210  001792  CFF4 F078          	movff	prodh,___flmul@temp+1
  9211  001796                     
  9212                           ; BSR set to: 0
  9213  001796  5177               	movf	___flmul@temp& (0+255),w,b
  9214  001798  276E               	addwf	___flmul@grs& (0+255),f,b
  9215  00179A  0E00               	movlw	0
  9216  00179C  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9217  00179E  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9218  0017A0  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9219  0017A2                     
  9220                           ; BSR set to: 0
  9221  0017A2  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  9222  0017A4  2773               	addwf	___flmul@prod& (0+255),f,b
  9223  0017A6  0E00               	movlw	0
  9224  0017A8  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9225  0017AA  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9226  0017AC  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9227  0017AE  5164               	movf	___flmul@a& (0+255),w,b
  9228  0017B0  0362               	mulwf	(___flmul@b+2)& (0+255),b
  9229  0017B2  CFF3 F077          	movff	prodl,___flmul@temp
  9230  0017B6  CFF4 F078          	movff	prodh,___flmul@temp+1
  9231  0017BA                     
  9232                           ; BSR set to: 0
  9233  0017BA  5177               	movf	___flmul@temp& (0+255),w,b
  9234  0017BC  276E               	addwf	___flmul@grs& (0+255),f,b
  9235  0017BE  0E00               	movlw	0
  9236  0017C0  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9237  0017C2  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9238  0017C4  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9239  0017C6                     
  9240                           ; BSR set to: 0
  9241  0017C6  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  9242  0017C8  2773               	addwf	___flmul@prod& (0+255),f,b
  9243  0017CA  0E00               	movlw	0
  9244  0017CC  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9245  0017CE  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9246  0017D0  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9247  0017D2                     
  9248                           ; BSR set to: 0
  9249  0017D2  C070  F071         	movff	___flmul@grs+2,___flmul@grs+3
  9250  0017D6  C06F  F070         	movff	___flmul@grs+1,___flmul@grs+2
  9251  0017DA  C06E  F06F         	movff	___flmul@grs,___flmul@grs+1
  9252  0017DE  6B6E               	clrf	___flmul@grs& (0+255),b
  9253  0017E0                     
  9254                           ; BSR set to: 0
  9255  0017E0  5164               	movf	___flmul@a& (0+255),w,b
  9256  0017E2  0361               	mulwf	(___flmul@b+1)& (0+255),b
  9257  0017E4  CFF3 F077          	movff	prodl,___flmul@temp
  9258  0017E8  CFF4 F078          	movff	prodh,___flmul@temp+1
  9259  0017EC                     
  9260                           ; BSR set to: 0
  9261  0017EC  5177               	movf	___flmul@temp& (0+255),w,b
  9262  0017EE  276E               	addwf	___flmul@grs& (0+255),f,b
  9263  0017F0  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  9264  0017F2  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9265  0017F4  0E00               	movlw	0
  9266  0017F6  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9267  0017F8  0E00               	movlw	0
  9268  0017FA  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9269  0017FC                     
  9270                           ; BSR set to: 0
  9271  0017FC  5165               	movf	(___flmul@a+1)& (0+255),w,b
  9272  0017FE  0360               	mulwf	___flmul@b& (0+255),b
  9273  001800  CFF3 F077          	movff	prodl,___flmul@temp
  9274  001804  CFF4 F078          	movff	prodh,___flmul@temp+1
  9275  001808                     
  9276                           ; BSR set to: 0
  9277  001808  5177               	movf	___flmul@temp& (0+255),w,b
  9278  00180A  276E               	addwf	___flmul@grs& (0+255),f,b
  9279  00180C  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  9280  00180E  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9281  001810  0E00               	movlw	0
  9282  001812  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9283  001814  0E00               	movlw	0
  9284  001816  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9285  001818                     
  9286                           ; BSR set to: 0
  9287  001818  C070  F071         	movff	___flmul@grs+2,___flmul@grs+3
  9288  00181C  C06F  F070         	movff	___flmul@grs+1,___flmul@grs+2
  9289  001820  C06E  F06F         	movff	___flmul@grs,___flmul@grs+1
  9290  001824  6B6E               	clrf	___flmul@grs& (0+255),b
  9291  001826  5164               	movf	___flmul@a& (0+255),w,b
  9292  001828  0360               	mulwf	___flmul@b& (0+255),b
  9293  00182A  CFF3 F077          	movff	prodl,___flmul@temp
  9294  00182E  CFF4 F078          	movff	prodh,___flmul@temp+1
  9295  001832                     
  9296                           ; BSR set to: 0
  9297  001832  5177               	movf	___flmul@temp& (0+255),w,b
  9298  001834  276E               	addwf	___flmul@grs& (0+255),f,b
  9299  001836  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  9300  001838  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9301  00183A  0E00               	movlw	0
  9302  00183C  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9303  00183E  0E00               	movlw	0
  9304  001840  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9305  001842                     
  9306                           ; BSR set to: 0
  9307  001842  5166               	movf	(___flmul@a+2)& (0+255),w,b
  9308  001844  0361               	mulwf	(___flmul@b+1)& (0+255),b
  9309  001846  CFF3 F077          	movff	prodl,___flmul@temp
  9310  00184A  CFF4 F078          	movff	prodh,___flmul@temp+1
  9311  00184E  5177               	movf	___flmul@temp& (0+255),w,b
  9312  001850  2773               	addwf	___flmul@prod& (0+255),f,b
  9313  001852  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  9314  001854  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9315  001856  0E00               	movlw	0
  9316  001858  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9317  00185A  0E00               	movlw	0
  9318  00185C  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9319  00185E                     
  9320                           ; BSR set to: 0
  9321  00185E  5165               	movf	(___flmul@a+1)& (0+255),w,b
  9322  001860  0362               	mulwf	(___flmul@b+2)& (0+255),b
  9323  001862  CFF3 F077          	movff	prodl,___flmul@temp
  9324  001866  CFF4 F078          	movff	prodh,___flmul@temp+1
  9325  00186A                     
  9326                           ; BSR set to: 0
  9327  00186A  5177               	movf	___flmul@temp& (0+255),w,b
  9328  00186C  2773               	addwf	___flmul@prod& (0+255),f,b
  9329  00186E  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  9330  001870  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9331  001872  0E00               	movlw	0
  9332  001874  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9333  001876  0E00               	movlw	0
  9334  001878  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9335  00187A  5166               	movf	(___flmul@a+2)& (0+255),w,b
  9336  00187C  0362               	mulwf	(___flmul@b+2)& (0+255),b
  9337  00187E  CFF3 F077          	movff	prodl,___flmul@temp
  9338  001882  CFF4 F078          	movff	prodh,___flmul@temp+1
  9339  001886                     
  9340                           ; BSR set to: 0
  9341  001886  5177               	movf	___flmul@temp& (0+255),w,b
  9342  001888  6F68               	movwf	??___flmul& (0+255),b
  9343  00188A  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  9344  00188C  6F69               	movwf	(??___flmul+1)& (0+255),b
  9345  00188E  6B6A               	clrf	(??___flmul+2)& (0+255),b
  9346  001890  6B6B               	clrf	(??___flmul+3)& (0+255),b
  9347  001892  C06A  F06B         	movff	??___flmul+2,??___flmul+3
  9348  001896  C069  F06A         	movff	??___flmul+1,??___flmul+2
  9349  00189A  C068  F069         	movff	??___flmul,??___flmul+1
  9350  00189E  6B68               	clrf	??___flmul& (0+255),b
  9351  0018A0  5168               	movf	??___flmul& (0+255),w,b
  9352  0018A2  2773               	addwf	___flmul@prod& (0+255),f,b
  9353  0018A4  5169               	movf	(??___flmul+1)& (0+255),w,b
  9354  0018A6  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9355  0018A8  516A               	movf	(??___flmul+2)& (0+255),w,b
  9356  0018AA  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9357  0018AC  516B               	movf	(??___flmul+3)& (0+255),w,b
  9358  0018AE  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9359  0018B0                     
  9360                           ; BSR set to: 0
  9361  0018B0  C06E  F068         	movff	___flmul@grs,??___flmul
  9362  0018B4  C06F  F069         	movff	___flmul@grs+1,??___flmul+1
  9363  0018B8  C070  F06A         	movff	___flmul@grs+2,??___flmul+2
  9364  0018BC  C071  F06B         	movff	___flmul@grs+3,??___flmul+3
  9365  0018C0  0E19               	movlw	25
  9366  0018C2  EF68  F00C         	goto	u7010
  9367  0018C6                     u7015:
  9368  0018C6  90D8               	bcf	status,0,c
  9369  0018C8  336B               	rrcf	(??___flmul+3)& (0+255),f,b
  9370  0018CA  336A               	rrcf	(??___flmul+2)& (0+255),f,b
  9371  0018CC  3369               	rrcf	(??___flmul+1)& (0+255),f,b
  9372  0018CE  3368               	rrcf	??___flmul& (0+255),f,b
  9373  0018D0                     u7010:
  9374  0018D0  2EE8               	decfsz	wreg,f,c
  9375  0018D2  EF63  F00C         	goto	u7015
  9376  0018D6  5168               	movf	??___flmul& (0+255),w,b
  9377  0018D8  2773               	addwf	___flmul@prod& (0+255),f,b
  9378  0018DA  5169               	movf	(??___flmul+1)& (0+255),w,b
  9379  0018DC  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9380  0018DE  516A               	movf	(??___flmul+2)& (0+255),w,b
  9381  0018E0  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9382  0018E2  516B               	movf	(??___flmul+3)& (0+255),w,b
  9383  0018E4  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9384  0018E6                     
  9385                           ; BSR set to: 0
  9386  0018E6  C070  F071         	movff	___flmul@grs+2,___flmul@grs+3
  9387  0018EA  C06F  F070         	movff	___flmul@grs+1,___flmul@grs+2
  9388  0018EE  C06E  F06F         	movff	___flmul@grs,___flmul@grs+1
  9389  0018F2  6B6E               	clrf	___flmul@grs& (0+255),b
  9390  0018F4                     
  9391                           ; BSR set to: 0
  9392  0018F4  516D               	movf	___flmul@aexp& (0+255),w,b
  9393  0018F6  C072  F068         	movff	___flmul@bexp,??___flmul
  9394  0018FA  6B69               	clrf	(??___flmul+1)& (0+255),b
  9395  0018FC  2768               	addwf	??___flmul& (0+255),f,b
  9396  0018FE  0E00               	movlw	0
  9397  001900  2369               	addwfc	(??___flmul+1)& (0+255),f,b
  9398  001902  0E82               	movlw	130
  9399  001904  2568               	addwf	??___flmul& (0+255),w,b
  9400  001906  6F77               	movwf	___flmul@temp& (0+255),b
  9401  001908  0EFF               	movlw	255
  9402  00190A  2169               	addwfc	(??___flmul+1)& (0+255),w,b
  9403  00190C  6F78               	movwf	(___flmul@temp+1)& (0+255),b
  9404  00190E  EF9E  F00C         	goto	l7108
  9405  001912                     l7102:
  9406                           
  9407                           ; BSR set to: 0
  9408  001912  90D8               	bcf	status,0,c
  9409  001914  3773               	rlcf	___flmul@prod& (0+255),f,b
  9410  001916  3774               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9411  001918  3775               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9412  00191A  3776               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9413  00191C                     
  9414                           ; BSR set to: 0
  9415  00191C  AF71               	btfss	(___flmul@grs+3)& (0+255),7,b
  9416  00191E  EF93  F00C         	goto	u7021
  9417  001922  EF95  F00C         	goto	u7020
  9418  001926                     u7021:
  9419  001926  EF96  F00C         	goto	l1430
  9420  00192A                     u7020:
  9421  00192A                     
  9422                           ; BSR set to: 0
  9423  00192A  8173               	bsf	___flmul@prod& (0+255),0,b
  9424  00192C                     l1430:
  9425                           
  9426                           ; BSR set to: 0
  9427  00192C  90D8               	bcf	status,0,c
  9428  00192E  376E               	rlcf	___flmul@grs& (0+255),f,b
  9429  001930  376F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9430  001932  3770               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9431  001934  3771               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9432  001936  0777               	decf	___flmul@temp& (0+255),f,b
  9433  001938  A0D8               	btfss	status,0,c
  9434  00193A  0778               	decf	(___flmul@temp+1)& (0+255),f,b
  9435  00193C                     l7108:
  9436                           
  9437                           ; BSR set to: 0
  9438  00193C  AF75               	btfss	(___flmul@prod+2)& (0+255),7,b
  9439  00193E  EFA3  F00C         	goto	u7031
  9440  001942  EFA5  F00C         	goto	u7030
  9441  001946                     u7031:
  9442  001946  EF89  F00C         	goto	l7102
  9443  00194A                     u7030:
  9444  00194A                     
  9445                           ; BSR set to: 0
  9446  00194A  0E00               	movlw	0
  9447  00194C  6F6D               	movwf	___flmul@aexp& (0+255),b
  9448  00194E                     
  9449                           ; BSR set to: 0
  9450  00194E  AF71               	btfss	(___flmul@grs+3)& (0+255),7,b
  9451  001950  EFAC  F00C         	goto	u7041
  9452  001954  EFAE  F00C         	goto	u7040
  9453  001958                     u7041:
  9454  001958  EFD2  F00C         	goto	l1432
  9455  00195C                     u7040:
  9456  00195C                     
  9457                           ; BSR set to: 0
  9458  00195C  0EFF               	movlw	255
  9459  00195E  156E               	andwf	___flmul@grs& (0+255),w,b
  9460  001960  6F68               	movwf	??___flmul& (0+255),b
  9461  001962  0EFF               	movlw	255
  9462  001964  156F               	andwf	(___flmul@grs+1)& (0+255),w,b
  9463  001966  6F69               	movwf	(??___flmul+1)& (0+255),b
  9464  001968  0EFF               	movlw	255
  9465  00196A  1570               	andwf	(___flmul@grs+2)& (0+255),w,b
  9466  00196C  6F6A               	movwf	(??___flmul+2)& (0+255),b
  9467  00196E  0E7F               	movlw	127
  9468  001970  1571               	andwf	(___flmul@grs+3)& (0+255),w,b
  9469  001972  6F6B               	movwf	(??___flmul+3)& (0+255),b
  9470  001974  5168               	movf	??___flmul& (0+255),w,b
  9471  001976  1169               	iorwf	(??___flmul+1)& (0+255),w,b
  9472  001978  116A               	iorwf	(??___flmul+2)& (0+255),w,b
  9473  00197A  116B               	iorwf	(??___flmul+3)& (0+255),w,b
  9474  00197C  B4D8               	btfsc	status,2,c
  9475  00197E  EFC3  F00C         	goto	u7051
  9476  001982  EFC5  F00C         	goto	u7050
  9477  001986                     u7051:
  9478  001986  EFC9  F00C         	goto	l1433
  9479  00198A                     u7050:
  9480  00198A                     l7116:
  9481                           
  9482                           ; BSR set to: 0
  9483  00198A  0E01               	movlw	1
  9484  00198C  6F6D               	movwf	___flmul@aexp& (0+255),b
  9485  00198E  EFD2  F00C         	goto	l1432
  9486  001992                     l1433:
  9487                           
  9488                           ; BSR set to: 0
  9489  001992  A173               	btfss	___flmul@prod& (0+255),0,b
  9490  001994  EFCE  F00C         	goto	u7061
  9491  001998  EFD0  F00C         	goto	u7060
  9492  00199C                     u7061:
  9493  00199C  EFD2  F00C         	goto	l1432
  9494  0019A0                     u7060:
  9495  0019A0  EFC5  F00C         	goto	l7116
  9496  0019A4                     l1432:
  9497                           
  9498                           ; BSR set to: 0
  9499  0019A4  516D               	movf	___flmul@aexp& (0+255),w,b
  9500  0019A6  B4D8               	btfsc	status,2,c
  9501  0019A8  EFD8  F00C         	goto	u7071
  9502  0019AC  EFDA  F00C         	goto	u7070
  9503  0019B0                     u7071:
  9504  0019B0  EFFE  F00C         	goto	l7128
  9505  0019B4                     u7070:
  9506  0019B4                     
  9507                           ; BSR set to: 0
  9508  0019B4  0E01               	movlw	1
  9509  0019B6  2773               	addwf	___flmul@prod& (0+255),f,b
  9510  0019B8  0E00               	movlw	0
  9511  0019BA  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9512  0019BC  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9513  0019BE  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9514  0019C0                     
  9515                           ; BSR set to: 0
  9516  0019C0  A176               	btfss	(___flmul@prod+3)& (0+255),0,b
  9517  0019C2  EFE5  F00C         	goto	u7081
  9518  0019C6  EFE7  F00C         	goto	u7080
  9519  0019CA                     u7081:
  9520  0019CA  EFFE  F00C         	goto	l7128
  9521  0019CE                     u7080:
  9522  0019CE                     
  9523                           ; BSR set to: 0
  9524  0019CE  C073  F068         	movff	___flmul@prod,??___flmul
  9525  0019D2  C074  F069         	movff	___flmul@prod+1,??___flmul+1
  9526  0019D6  C075  F06A         	movff	___flmul@prod+2,??___flmul+2
  9527  0019DA  C076  F06B         	movff	___flmul@prod+3,??___flmul+3
  9528  0019DE  356B               	rlcf	(??___flmul+3)& (0+255),w,b
  9529  0019E0  336B               	rrcf	(??___flmul+3)& (0+255),f,b
  9530  0019E2  336A               	rrcf	(??___flmul+2)& (0+255),f,b
  9531  0019E4  3369               	rrcf	(??___flmul+1)& (0+255),f,b
  9532  0019E6  3368               	rrcf	??___flmul& (0+255),f,b
  9533  0019E8  C068  F073         	movff	??___flmul,___flmul@prod
  9534  0019EC  C069  F074         	movff	??___flmul+1,___flmul@prod+1
  9535  0019F0  C06A  F075         	movff	??___flmul+2,___flmul@prod+2
  9536  0019F4  C06B  F076         	movff	??___flmul+3,___flmul@prod+3
  9537  0019F8                     
  9538                           ; BSR set to: 0
  9539  0019F8  4B77               	infsnz	___flmul@temp& (0+255),f,b
  9540  0019FA  2B78               	incf	(___flmul@temp+1)& (0+255),f,b
  9541  0019FC                     l7128:
  9542                           
  9543                           ; BSR set to: 0
  9544  0019FC  BF78               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9545  0019FE  EF09  F00D         	goto	u7091
  9546  001A02  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  9547  001A04  E108               	bnz	u7090
  9548  001A06  2977               	incf	___flmul@temp& (0+255),w,b
  9549  001A08  A0D8               	btfss	status,0,c
  9550  001A0A  EF09  F00D         	goto	u7091
  9551  001A0E  EF0B  F00D         	goto	u7090
  9552  001A12                     u7091:
  9553  001A12  EF15  F00D         	goto	l7132
  9554  001A16                     u7090:
  9555  001A16                     
  9556                           ; BSR set to: 0
  9557  001A16  0E00               	movlw	0
  9558  001A18  6F73               	movwf	___flmul@prod& (0+255),b
  9559  001A1A  0E00               	movlw	0
  9560  001A1C  6F74               	movwf	(___flmul@prod+1)& (0+255),b
  9561  001A1E  0E80               	movlw	128
  9562  001A20  6F75               	movwf	(___flmul@prod+2)& (0+255),b
  9563  001A22  0E7F               	movlw	127
  9564  001A24  6F76               	movwf	(___flmul@prod+3)& (0+255),b
  9565  001A26  EF43  F00D         	goto	l7144
  9566  001A2A                     l7132:
  9567                           
  9568                           ; BSR set to: 0
  9569  001A2A  BF78               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9570  001A2C  EF22  F00D         	goto	u7100
  9571  001A30  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  9572  001A32  E106               	bnz	u7101
  9573  001A34  0577               	decf	___flmul@temp& (0+255),w,b
  9574  001A36  B0D8               	btfsc	status,0,c
  9575  001A38  EF20  F00D         	goto	u7101
  9576  001A3C  EF22  F00D         	goto	u7100
  9577  001A40                     u7101:
  9578  001A40  EF2E  F00D         	goto	l1440
  9579  001A44                     u7100:
  9580  001A44                     
  9581                           ; BSR set to: 0
  9582  001A44  0E00               	movlw	0
  9583  001A46  6F73               	movwf	___flmul@prod& (0+255),b
  9584  001A48  0E00               	movlw	0
  9585  001A4A  6F74               	movwf	(___flmul@prod+1)& (0+255),b
  9586  001A4C  0E00               	movlw	0
  9587  001A4E  6F75               	movwf	(___flmul@prod+2)& (0+255),b
  9588  001A50  0E00               	movlw	0
  9589  001A52  6F76               	movwf	(___flmul@prod+3)& (0+255),b
  9590  001A54  0E00               	movlw	0
  9591  001A56  6F6C               	movwf	___flmul@sign& (0+255),b
  9592  001A58  EF43  F00D         	goto	l7144
  9593  001A5C                     l1440:
  9594                           
  9595                           ; BSR set to: 0
  9596  001A5C  C077  F072         	movff	___flmul@temp,___flmul@bexp
  9597  001A60                     
  9598                           ; BSR set to: 0
  9599  001A60  0EFF               	movlw	255
  9600  001A62  1773               	andwf	___flmul@prod& (0+255),f,b
  9601  001A64  0EFF               	movlw	255
  9602  001A66  1774               	andwf	(___flmul@prod+1)& (0+255),f,b
  9603  001A68  0E7F               	movlw	127
  9604  001A6A  1775               	andwf	(___flmul@prod+2)& (0+255),f,b
  9605  001A6C  0E00               	movlw	0
  9606  001A6E  1776               	andwf	(___flmul@prod+3)& (0+255),f,b
  9607  001A70                     
  9608                           ; BSR set to: 0
  9609  001A70  A172               	btfss	___flmul@bexp& (0+255),0,b
  9610  001A72  EF3D  F00D         	goto	u7111
  9611  001A76  EF3F  F00D         	goto	u7110
  9612  001A7A                     u7111:
  9613  001A7A  EF40  F00D         	goto	l7142
  9614  001A7E                     u7110:
  9615  001A7E                     
  9616                           ; BSR set to: 0
  9617  001A7E  8F75               	bsf	(___flmul@prod+2)& (0+255),7,b
  9618  001A80                     l7142:
  9619                           
  9620                           ; BSR set to: 0
  9621  001A80  90D8               	bcf	status,0,c
  9622  001A82  3172               	rrcf	___flmul@bexp& (0+255),w,b
  9623  001A84  6F76               	movwf	(___flmul@prod+3)& (0+255),b
  9624  001A86                     l7144:
  9625                           
  9626                           ; BSR set to: 0
  9627  001A86  516C               	movf	___flmul@sign& (0+255),w,b
  9628  001A88  1376               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9629  001A8A                     
  9630                           ; BSR set to: 0
  9631  001A8A  C073  F060         	movff	___flmul@prod,?___flmul
  9632  001A8E  C074  F061         	movff	___flmul@prod+1,?___flmul+1
  9633  001A92  C075  F062         	movff	___flmul@prod+2,?___flmul+2
  9634  001A96  C076  F063         	movff	___flmul@prod+3,?___flmul+3
  9635  001A9A                     l1427:
  9636                           
  9637                           ; BSR set to: 0
  9638  001A9A  0012               	return		;funcret
  9639  001A9C                     __end_of___flmul:
  9640                           	callstack 0
  9641                           
  9642 ;; *************** function ___fldiv *****************
  9643 ;; Defined at:
  9644 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
  9645 ;; Parameters:    Size  Location     Type
  9646 ;;  b               4   25[COMRAM] unsigned char 
  9647 ;;  a               4   29[COMRAM] unsigned char 
  9648 ;; Auto vars:     Size  Location     Type
  9649 ;;  grs             4    7[BANK0 ] unsigned long 
  9650 ;;  rem             4    0[BANK0 ] unsigned long 
  9651 ;;  new_exp         2    5[BANK0 ] short 
  9652 ;;  aexp            1   12[BANK0 ] unsigned char 
  9653 ;;  bexp            1   11[BANK0 ] unsigned char 
  9654 ;;  sign            1    4[BANK0 ] unsigned char 
  9655 ;; Return value:  Size  Location     Type
  9656 ;;                  4   25[COMRAM] unsigned char 
  9657 ;; Registers used:
  9658 ;;		wreg, status,2, status,0
  9659 ;; Tracked objects:
  9660 ;;		On entry : 0/0
  9661 ;;		On exit  : 0/0
  9662 ;;		Unchanged: 0/0
  9663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9664 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9665 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9666 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9667 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9668 ;;Total ram usage:       25 bytes
  9669 ;; Hardware stack levels used:    1
  9670 ;; Hardware stack levels required when called:    7
  9671 ;; This function calls:
  9672 ;;		Nothing
  9673 ;; This function is called by:
  9674 ;;		_Voltage_ReadRegister
  9675 ;;		_Current_ReadRegister
  9676 ;;		_Power_ReadRegister
  9677 ;;		_efgtoa
  9678 ;; This function uses a non-reentrant model
  9679 ;;
  9680                           
  9681                           	psect	text39
  9682  001A9C                     __ptext39:
  9683                           	callstack 0
  9684  001A9C                     ___fldiv:
  9685                           	callstack 19
  9686  001A9C  501D               	movf	(___fldiv@b+3)^0,w,c
  9687  001A9E  0B80               	andlw	128
  9688  001AA0  0100               	movlb	0	; () banked
  9689  001AA2  6F64               	movwf	___fldiv@sign& (0+255),b
  9690  001AA4  501D               	movf	(___fldiv@b+3)^0,w,c
  9691  001AA6  241D               	addwf	(___fldiv@b+3)^0,w,c
  9692  001AA8  6F6B               	movwf	___fldiv@bexp& (0+255),b
  9693  001AAA                     
  9694                           ; BSR set to: 0
  9695  001AAA  AE1C               	btfss	(___fldiv@b+2)^0,7,c
  9696  001AAC  EF5A  F00D         	goto	u6701
  9697  001AB0  EF5C  F00D         	goto	u6700
  9698  001AB4                     u6701:
  9699  001AB4  EF5D  F00D         	goto	l6888
  9700  001AB8                     u6700:
  9701  001AB8                     
  9702                           ; BSR set to: 0
  9703  001AB8  816B               	bsf	___fldiv@bexp& (0+255),0,b
  9704  001ABA                     l6888:
  9705                           
  9706                           ; BSR set to: 0
  9707  001ABA  516B               	movf	___fldiv@bexp& (0+255),w,b
  9708  001ABC  B4D8               	btfsc	status,2,c
  9709  001ABE  EF63  F00D         	goto	u6711
  9710  001AC2  EF65  F00D         	goto	u6710
  9711  001AC6                     u6711:
  9712  001AC6  EF7A  F00D         	goto	l6898
  9713  001ACA                     u6710:
  9714  001ACA                     
  9715                           ; BSR set to: 0
  9716  001ACA  296B               	incf	___fldiv@bexp& (0+255),w,b
  9717  001ACC  A4D8               	btfss	status,2,c
  9718  001ACE  EF6B  F00D         	goto	u6721
  9719  001AD2  EF6D  F00D         	goto	u6720
  9720  001AD6                     u6721:
  9721  001AD6  EF75  F00D         	goto	l6894
  9722  001ADA                     u6720:
  9723  001ADA                     
  9724                           ; BSR set to: 0
  9725  001ADA  0E00               	movlw	0
  9726  001ADC  6E1A               	movwf	___fldiv@b^0,c
  9727  001ADE  0E00               	movlw	0
  9728  001AE0  6E1B               	movwf	(___fldiv@b+1)^0,c
  9729  001AE2  0E00               	movlw	0
  9730  001AE4  6E1C               	movwf	(___fldiv@b+2)^0,c
  9731  001AE6  0E00               	movlw	0
  9732  001AE8  6E1D               	movwf	(___fldiv@b+3)^0,c
  9733  001AEA                     l6894:
  9734                           
  9735                           ; BSR set to: 0
  9736  001AEA  8E1C               	bsf	(___fldiv@b+2)^0,7,c
  9737  001AEC                     
  9738                           ; BSR set to: 0
  9739  001AEC  0E00               	movlw	0
  9740  001AEE  6E1D               	movwf	(___fldiv@b+3)^0,c
  9741  001AF0  EF82  F00D         	goto	l6900
  9742  001AF4                     l6898:
  9743                           
  9744                           ; BSR set to: 0
  9745  001AF4  0E00               	movlw	0
  9746  001AF6  6E1A               	movwf	___fldiv@b^0,c
  9747  001AF8  0E00               	movlw	0
  9748  001AFA  6E1B               	movwf	(___fldiv@b+1)^0,c
  9749  001AFC  0E00               	movlw	0
  9750  001AFE  6E1C               	movwf	(___fldiv@b+2)^0,c
  9751  001B00  0E00               	movlw	0
  9752  001B02  6E1D               	movwf	(___fldiv@b+3)^0,c
  9753  001B04                     l6900:
  9754                           
  9755                           ; BSR set to: 0
  9756  001B04  5021               	movf	(___fldiv@a+3)^0,w,c
  9757  001B06  0B80               	andlw	128
  9758  001B08  1B64               	xorwf	___fldiv@sign& (0+255),f,b
  9759  001B0A                     
  9760                           ; BSR set to: 0
  9761  001B0A  5021               	movf	(___fldiv@a+3)^0,w,c
  9762  001B0C  2421               	addwf	(___fldiv@a+3)^0,w,c
  9763  001B0E  6F6C               	movwf	___fldiv@aexp& (0+255),b
  9764  001B10                     
  9765                           ; BSR set to: 0
  9766  001B10  AE20               	btfss	(___fldiv@a+2)^0,7,c
  9767  001B12  EF8D  F00D         	goto	u6731
  9768  001B16  EF8F  F00D         	goto	u6730
  9769  001B1A                     u6731:
  9770  001B1A  EF90  F00D         	goto	l6908
  9771  001B1E                     u6730:
  9772  001B1E                     
  9773                           ; BSR set to: 0
  9774  001B1E  816C               	bsf	___fldiv@aexp& (0+255),0,b
  9775  001B20                     l6908:
  9776                           
  9777                           ; BSR set to: 0
  9778  001B20  516C               	movf	___fldiv@aexp& (0+255),w,b
  9779  001B22  B4D8               	btfsc	status,2,c
  9780  001B24  EF96  F00D         	goto	u6741
  9781  001B28  EF98  F00D         	goto	u6740
  9782  001B2C                     u6741:
  9783  001B2C  EFAD  F00D         	goto	l6918
  9784  001B30                     u6740:
  9785  001B30                     
  9786                           ; BSR set to: 0
  9787  001B30  296C               	incf	___fldiv@aexp& (0+255),w,b
  9788  001B32  A4D8               	btfss	status,2,c
  9789  001B34  EF9E  F00D         	goto	u6751
  9790  001B38  EFA0  F00D         	goto	u6750
  9791  001B3C                     u6751:
  9792  001B3C  EFA8  F00D         	goto	l6914
  9793  001B40                     u6750:
  9794  001B40                     
  9795                           ; BSR set to: 0
  9796  001B40  0E00               	movlw	0
  9797  001B42  6E1E               	movwf	___fldiv@a^0,c
  9798  001B44  0E00               	movlw	0
  9799  001B46  6E1F               	movwf	(___fldiv@a+1)^0,c
  9800  001B48  0E00               	movlw	0
  9801  001B4A  6E20               	movwf	(___fldiv@a+2)^0,c
  9802  001B4C  0E00               	movlw	0
  9803  001B4E  6E21               	movwf	(___fldiv@a+3)^0,c
  9804  001B50                     l6914:
  9805                           
  9806                           ; BSR set to: 0
  9807  001B50  8E20               	bsf	(___fldiv@a+2)^0,7,c
  9808  001B52                     
  9809                           ; BSR set to: 0
  9810  001B52  0E00               	movlw	0
  9811  001B54  6E21               	movwf	(___fldiv@a+3)^0,c
  9812  001B56  EFB5  F00D         	goto	l6920
  9813  001B5A                     l6918:
  9814                           
  9815                           ; BSR set to: 0
  9816  001B5A  0E00               	movlw	0
  9817  001B5C  6E1E               	movwf	___fldiv@a^0,c
  9818  001B5E  0E00               	movlw	0
  9819  001B60  6E1F               	movwf	(___fldiv@a+1)^0,c
  9820  001B62  0E00               	movlw	0
  9821  001B64  6E20               	movwf	(___fldiv@a+2)^0,c
  9822  001B66  0E00               	movlw	0
  9823  001B68  6E21               	movwf	(___fldiv@a+3)^0,c
  9824  001B6A                     l6920:
  9825                           
  9826                           ; BSR set to: 0
  9827  001B6A  501E               	movf	___fldiv@a^0,w,c
  9828  001B6C  101F               	iorwf	(___fldiv@a+1)^0,w,c
  9829  001B6E  1020               	iorwf	(___fldiv@a+2)^0,w,c
  9830  001B70  1021               	iorwf	(___fldiv@a+3)^0,w,c
  9831  001B72  A4D8               	btfss	status,2,c
  9832  001B74  EFBE  F00D         	goto	u6761
  9833  001B78  EFC0  F00D         	goto	u6760
  9834  001B7C                     u6761:
  9835  001B7C  EFD8  F00D         	goto	l6932
  9836  001B80                     u6760:
  9837  001B80                     
  9838                           ; BSR set to: 0
  9839  001B80  0E00               	movlw	0
  9840  001B82  6E1A               	movwf	___fldiv@b^0,c
  9841  001B84  0E00               	movlw	0
  9842  001B86  6E1B               	movwf	(___fldiv@b+1)^0,c
  9843  001B88  0E00               	movlw	0
  9844  001B8A  6E1C               	movwf	(___fldiv@b+2)^0,c
  9845  001B8C  0E00               	movlw	0
  9846  001B8E  6E1D               	movwf	(___fldiv@b+3)^0,c
  9847  001B90                     
  9848                           ; BSR set to: 0
  9849  001B90  0E80               	movlw	128
  9850  001B92  121C               	iorwf	(___fldiv@b+2)^0,f,c
  9851  001B94  0E7F               	movlw	127
  9852  001B96  121D               	iorwf	(___fldiv@b+3)^0,f,c
  9853  001B98                     l6926:
  9854                           
  9855                           ; BSR set to: 0
  9856  001B98  5164               	movf	___fldiv@sign& (0+255),w,b
  9857  001B9A  121D               	iorwf	(___fldiv@b+3)^0,f,c
  9858  001B9C                     
  9859                           ; BSR set to: 0
  9860  001B9C  C01A  F01A         	movff	___fldiv@b,?___fldiv
  9861  001BA0  C01B  F01B         	movff	___fldiv@b+1,?___fldiv+1
  9862  001BA4  C01C  F01C         	movff	___fldiv@b+2,?___fldiv+2
  9863  001BA8  C01D  F01D         	movff	___fldiv@b+3,?___fldiv+3
  9864  001BAC  EF1B  F00F         	goto	l1391
  9865  001BB0                     l6932:
  9866                           
  9867                           ; BSR set to: 0
  9868  001BB0  516B               	movf	___fldiv@bexp& (0+255),w,b
  9869  001BB2  A4D8               	btfss	status,2,c
  9870  001BB4  EFDE  F00D         	goto	u6771
  9871  001BB8  EFE0  F00D         	goto	u6770
  9872  001BBC                     u6771:
  9873  001BBC  EFEA  F00D         	goto	l6940
  9874  001BC0                     u6770:
  9875  001BC0                     
  9876                           ; BSR set to: 0
  9877  001BC0  0E00               	movlw	0
  9878  001BC2  6E1A               	movwf	?___fldiv^0,c
  9879  001BC4  0E00               	movlw	0
  9880  001BC6  6E1B               	movwf	(?___fldiv+1)^0,c
  9881  001BC8  0E00               	movlw	0
  9882  001BCA  6E1C               	movwf	(?___fldiv+2)^0,c
  9883  001BCC  0E00               	movlw	0
  9884  001BCE  6E1D               	movwf	(?___fldiv+3)^0,c
  9885  001BD0  EF1B  F00F         	goto	l1391
  9886  001BD4                     l6940:
  9887                           
  9888                           ; BSR set to: 0
  9889  001BD4  516C               	movf	___fldiv@aexp& (0+255),w,b
  9890  001BD6  C06B  F022         	movff	___fldiv@bexp,??___fldiv
  9891  001BDA  6A23               	clrf	(??___fldiv+1)^0,c
  9892  001BDC  5E22               	subwf	??___fldiv^0,f,c
  9893  001BDE  0E00               	movlw	0
  9894  001BE0  5A23               	subwfb	(??___fldiv+1)^0,f,c
  9895  001BE2  0E7F               	movlw	127
  9896  001BE4  2422               	addwf	??___fldiv^0,w,c
  9897  001BE6  6F65               	movwf	___fldiv@new_exp& (0+255),b
  9898  001BE8  0E00               	movlw	0
  9899  001BEA  2023               	addwfc	(??___fldiv+1)^0,w,c
  9900  001BEC  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9901  001BEE                     
  9902                           ; BSR set to: 0
  9903  001BEE  C01A  F060         	movff	___fldiv@b,___fldiv@rem
  9904  001BF2  C01B  F061         	movff	___fldiv@b+1,___fldiv@rem+1
  9905  001BF6  C01C  F062         	movff	___fldiv@b+2,___fldiv@rem+2
  9906  001BFA  C01D  F063         	movff	___fldiv@b+3,___fldiv@rem+3
  9907  001BFE                     
  9908                           ; BSR set to: 0
  9909  001BFE  0E00               	movlw	0
  9910  001C00  6E1A               	movwf	___fldiv@b^0,c
  9911  001C02  0E00               	movlw	0
  9912  001C04  6E1B               	movwf	(___fldiv@b+1)^0,c
  9913  001C06  0E00               	movlw	0
  9914  001C08  6E1C               	movwf	(___fldiv@b+2)^0,c
  9915  001C0A  0E00               	movlw	0
  9916  001C0C  6E1D               	movwf	(___fldiv@b+3)^0,c
  9917  001C0E                     
  9918                           ; BSR set to: 0
  9919  001C0E  0E00               	movlw	0
  9920  001C10  6F67               	movwf	___fldiv@grs& (0+255),b
  9921  001C12  0E00               	movlw	0
  9922  001C14  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  9923  001C16  0E00               	movlw	0
  9924  001C18  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  9925  001C1A  0E00               	movlw	0
  9926  001C1C  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  9927  001C1E                     
  9928                           ; BSR set to: 0
  9929  001C1E  0E00               	movlw	0
  9930  001C20  6F6C               	movwf	___fldiv@aexp& (0+255),b
  9931  001C22  EF4B  F00E         	goto	l1393
  9932  001C26                     l6950:
  9933                           
  9934                           ; BSR set to: 0
  9935  001C26  516C               	movf	___fldiv@aexp& (0+255),w,b
  9936  001C28  B4D8               	btfsc	status,2,c
  9937  001C2A  EF19  F00E         	goto	u6781
  9938  001C2E  EF1B  F00E         	goto	u6780
  9939  001C32                     u6781:
  9940  001C32  EF32  F00E         	goto	l6958
  9941  001C36                     u6780:
  9942  001C36                     
  9943                           ; BSR set to: 0
  9944  001C36  90D8               	bcf	status,0,c
  9945  001C38  3760               	rlcf	___fldiv@rem& (0+255),f,b
  9946  001C3A  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  9947  001C3C  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  9948  001C3E  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  9949  001C40  90D8               	bcf	status,0,c
  9950  001C42  361A               	rlcf	___fldiv@b^0,f,c
  9951  001C44  361B               	rlcf	(___fldiv@b+1)^0,f,c
  9952  001C46  361C               	rlcf	(___fldiv@b+2)^0,f,c
  9953  001C48  361D               	rlcf	(___fldiv@b+3)^0,f,c
  9954  001C4A                     
  9955                           ; BSR set to: 0
  9956  001C4A  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9957  001C4C  EF2A  F00E         	goto	u6791
  9958  001C50  EF2C  F00E         	goto	u6790
  9959  001C54                     u6791:
  9960  001C54  EF2D  F00E         	goto	l1396
  9961  001C58                     u6790:
  9962  001C58                     
  9963                           ; BSR set to: 0
  9964  001C58  801A               	bsf	___fldiv@b^0,0,c
  9965  001C5A                     l1396:
  9966                           
  9967                           ; BSR set to: 0
  9968  001C5A  90D8               	bcf	status,0,c
  9969  001C5C  3767               	rlcf	___fldiv@grs& (0+255),f,b
  9970  001C5E  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9971  001C60  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9972  001C62  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9973  001C64                     l6958:
  9974                           
  9975                           ; BSR set to: 0
  9976  001C64  501E               	movf	___fldiv@a^0,w,c
  9977  001C66  5D60               	subwf	___fldiv@rem& (0+255),w,b
  9978  001C68  501F               	movf	(___fldiv@a+1)^0,w,c
  9979  001C6A  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  9980  001C6C  5020               	movf	(___fldiv@a+2)^0,w,c
  9981  001C6E  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  9982  001C70  5021               	movf	(___fldiv@a+3)^0,w,c
  9983  001C72  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  9984  001C74  A0D8               	btfss	status,0,c
  9985  001C76  EF3F  F00E         	goto	u6801
  9986  001C7A  EF41  F00E         	goto	u6800
  9987  001C7E                     u6801:
  9988  001C7E  EF4A  F00E         	goto	l6964
  9989  001C82                     u6800:
  9990  001C82                     
  9991                           ; BSR set to: 0
  9992  001C82  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  9993  001C84                     
  9994                           ; BSR set to: 0
  9995  001C84  501E               	movf	___fldiv@a^0,w,c
  9996  001C86  5F60               	subwf	___fldiv@rem& (0+255),f,b
  9997  001C88  501F               	movf	(___fldiv@a+1)^0,w,c
  9998  001C8A  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  9999  001C8C  5020               	movf	(___fldiv@a+2)^0,w,c
 10000  001C8E  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10001  001C90  5021               	movf	(___fldiv@a+3)^0,w,c
 10002  001C92  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10003  001C94                     l6964:
 10004                           
 10005                           ; BSR set to: 0
 10006  001C94  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 10007  001C96                     l1393:
 10008                           
 10009                           ; BSR set to: 0
 10010  001C96  0E19               	movlw	25
 10011  001C98  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 10012  001C9A  EF51  F00E         	goto	u6811
 10013  001C9E  EF53  F00E         	goto	u6810
 10014  001CA2                     u6811:
 10015  001CA2  EF13  F00E         	goto	l6950
 10016  001CA6                     u6810:
 10017  001CA6                     
 10018                           ; BSR set to: 0
 10019  001CA6  5160               	movf	___fldiv@rem& (0+255),w,b
 10020  001CA8  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10021  001CAA  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10022  001CAC  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10023  001CAE  B4D8               	btfsc	status,2,c
 10024  001CB0  EF5C  F00E         	goto	u6821
 10025  001CB4  EF5E  F00E         	goto	u6820
 10026  001CB8                     u6821:
 10027  001CB8  EF76  F00E         	goto	l6976
 10028  001CBC                     u6820:
 10029  001CBC                     
 10030                           ; BSR set to: 0
 10031  001CBC  8167               	bsf	___fldiv@grs& (0+255),0,b
 10032  001CBE  EF76  F00E         	goto	l6976
 10033  001CC2                     l6970:
 10034                           
 10035                           ; BSR set to: 0
 10036  001CC2  90D8               	bcf	status,0,c
 10037  001CC4  361A               	rlcf	___fldiv@b^0,f,c
 10038  001CC6  361B               	rlcf	(___fldiv@b+1)^0,f,c
 10039  001CC8  361C               	rlcf	(___fldiv@b+2)^0,f,c
 10040  001CCA  361D               	rlcf	(___fldiv@b+3)^0,f,c
 10041  001CCC                     
 10042                           ; BSR set to: 0
 10043  001CCC  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10044  001CCE  EF6B  F00E         	goto	u6831
 10045  001CD2  EF6D  F00E         	goto	u6830
 10046  001CD6                     u6831:
 10047  001CD6  EF6E  F00E         	goto	l1402
 10048  001CDA                     u6830:
 10049  001CDA                     
 10050                           ; BSR set to: 0
 10051  001CDA  801A               	bsf	___fldiv@b^0,0,c
 10052  001CDC                     l1402:
 10053                           
 10054                           ; BSR set to: 0
 10055  001CDC  90D8               	bcf	status,0,c
 10056  001CDE  3767               	rlcf	___fldiv@grs& (0+255),f,b
 10057  001CE0  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10058  001CE2  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10059  001CE4  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10060  001CE6  0765               	decf	___fldiv@new_exp& (0+255),f,b
 10061  001CE8  A0D8               	btfss	status,0,c
 10062  001CEA  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10063  001CEC                     l6976:
 10064                           
 10065                           ; BSR set to: 0
 10066  001CEC  AE1C               	btfss	(___fldiv@b+2)^0,7,c
 10067  001CEE  EF7B  F00E         	goto	u6841
 10068  001CF2  EF7D  F00E         	goto	u6840
 10069  001CF6                     u6841:
 10070  001CF6  EF61  F00E         	goto	l6970
 10071  001CFA                     u6840:
 10072  001CFA                     
 10073                           ; BSR set to: 0
 10074  001CFA  0E00               	movlw	0
 10075  001CFC  6F6C               	movwf	___fldiv@aexp& (0+255),b
 10076  001CFE                     
 10077                           ; BSR set to: 0
 10078  001CFE  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10079  001D00  EF84  F00E         	goto	u6851
 10080  001D04  EF86  F00E         	goto	u6850
 10081  001D08                     u6851:
 10082  001D08  EFAA  F00E         	goto	l1404
 10083  001D0C                     u6850:
 10084  001D0C                     
 10085                           ; BSR set to: 0
 10086  001D0C  0EFF               	movlw	255
 10087  001D0E  1567               	andwf	___fldiv@grs& (0+255),w,b
 10088  001D10  6E22               	movwf	??___fldiv^0,c
 10089  001D12  0EFF               	movlw	255
 10090  001D14  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10091  001D16  6E23               	movwf	(??___fldiv+1)^0,c
 10092  001D18  0EFF               	movlw	255
 10093  001D1A  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10094  001D1C  6E24               	movwf	(??___fldiv+2)^0,c
 10095  001D1E  0E7F               	movlw	127
 10096  001D20  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10097  001D22  6E25               	movwf	(??___fldiv+3)^0,c
 10098  001D24  5022               	movf	??___fldiv^0,w,c
 10099  001D26  1023               	iorwf	(??___fldiv+1)^0,w,c
 10100  001D28  1024               	iorwf	(??___fldiv+2)^0,w,c
 10101  001D2A  1025               	iorwf	(??___fldiv+3)^0,w,c
 10102  001D2C  B4D8               	btfsc	status,2,c
 10103  001D2E  EF9B  F00E         	goto	u6861
 10104  001D32  EF9D  F00E         	goto	u6860
 10105  001D36                     u6861:
 10106  001D36  EFA1  F00E         	goto	l1405
 10107  001D3A                     u6860:
 10108  001D3A                     l6984:
 10109                           
 10110                           ; BSR set to: 0
 10111  001D3A  0E01               	movlw	1
 10112  001D3C  6F6C               	movwf	___fldiv@aexp& (0+255),b
 10113  001D3E  EFAA  F00E         	goto	l1404
 10114  001D42                     l1405:
 10115                           
 10116                           ; BSR set to: 0
 10117  001D42  A01A               	btfss	___fldiv@b^0,0,c
 10118  001D44  EFA6  F00E         	goto	u6871
 10119  001D48  EFA8  F00E         	goto	u6870
 10120  001D4C                     u6871:
 10121  001D4C  EFAA  F00E         	goto	l1404
 10122  001D50                     u6870:
 10123  001D50  EF9D  F00E         	goto	l6984
 10124  001D54                     l1404:
 10125                           
 10126                           ; BSR set to: 0
 10127  001D54  516C               	movf	___fldiv@aexp& (0+255),w,b
 10128  001D56  B4D8               	btfsc	status,2,c
 10129  001D58  EFB0  F00E         	goto	u6881
 10130  001D5C  EFB2  F00E         	goto	u6880
 10131  001D60                     u6881:
 10132  001D60  EFD6  F00E         	goto	l6996
 10133  001D64                     u6880:
 10134  001D64                     
 10135                           ; BSR set to: 0
 10136  001D64  0E01               	movlw	1
 10137  001D66  261A               	addwf	___fldiv@b^0,f,c
 10138  001D68  0E00               	movlw	0
 10139  001D6A  221B               	addwfc	(___fldiv@b+1)^0,f,c
 10140  001D6C  221C               	addwfc	(___fldiv@b+2)^0,f,c
 10141  001D6E  221D               	addwfc	(___fldiv@b+3)^0,f,c
 10142  001D70                     
 10143                           ; BSR set to: 0
 10144  001D70  A01D               	btfss	(___fldiv@b+3)^0,0,c
 10145  001D72  EFBD  F00E         	goto	u6891
 10146  001D76  EFBF  F00E         	goto	u6890
 10147  001D7A                     u6891:
 10148  001D7A  EFD6  F00E         	goto	l6996
 10149  001D7E                     u6890:
 10150  001D7E                     
 10151                           ; BSR set to: 0
 10152  001D7E  C01A  F022         	movff	___fldiv@b,??___fldiv
 10153  001D82  C01B  F023         	movff	___fldiv@b+1,??___fldiv+1
 10154  001D86  C01C  F024         	movff	___fldiv@b+2,??___fldiv+2
 10155  001D8A  C01D  F025         	movff	___fldiv@b+3,??___fldiv+3
 10156  001D8E  3425               	rlcf	(??___fldiv+3)^0,w,c
 10157  001D90  3225               	rrcf	(??___fldiv+3)^0,f,c
 10158  001D92  3224               	rrcf	(??___fldiv+2)^0,f,c
 10159  001D94  3223               	rrcf	(??___fldiv+1)^0,f,c
 10160  001D96  3222               	rrcf	??___fldiv^0,f,c
 10161  001D98  C022  F01A         	movff	??___fldiv,___fldiv@b
 10162  001D9C  C023  F01B         	movff	??___fldiv+1,___fldiv@b+1
 10163  001DA0  C024  F01C         	movff	??___fldiv+2,___fldiv@b+2
 10164  001DA4  C025  F01D         	movff	??___fldiv+3,___fldiv@b+3
 10165  001DA8                     
 10166                           ; BSR set to: 0
 10167  001DA8  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 10168  001DAA  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10169  001DAC                     l6996:
 10170                           
 10171                           ; BSR set to: 0
 10172  001DAC  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10173  001DAE  EFE1  F00E         	goto	u6901
 10174  001DB2  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10175  001DB4  E108               	bnz	u6900
 10176  001DB6  2965               	incf	___fldiv@new_exp& (0+255),w,b
 10177  001DB8  A0D8               	btfss	status,0,c
 10178  001DBA  EFE1  F00E         	goto	u6901
 10179  001DBE  EFE3  F00E         	goto	u6900
 10180  001DC2                     u6901:
 10181  001DC2  EFEE  F00E         	goto	l7000
 10182  001DC6                     u6900:
 10183  001DC6                     
 10184                           ; BSR set to: 0
 10185  001DC6  0E00               	movlw	0
 10186  001DC8  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10187  001DCA  6965               	setf	___fldiv@new_exp& (0+255),b
 10188  001DCC  0E00               	movlw	0
 10189  001DCE  6E1A               	movwf	___fldiv@b^0,c
 10190  001DD0  0E00               	movlw	0
 10191  001DD2  6E1B               	movwf	(___fldiv@b+1)^0,c
 10192  001DD4  0E00               	movlw	0
 10193  001DD6  6E1C               	movwf	(___fldiv@b+2)^0,c
 10194  001DD8  0E00               	movlw	0
 10195  001DDA  6E1D               	movwf	(___fldiv@b+3)^0,c
 10196  001DDC                     l7000:
 10197                           
 10198                           ; BSR set to: 0
 10199  001DDC  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10200  001DDE  EFFB  F00E         	goto	u6910
 10201  001DE2  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10202  001DE4  E106               	bnz	u6911
 10203  001DE6  0565               	decf	___fldiv@new_exp& (0+255),w,b
 10204  001DE8  B0D8               	btfsc	status,0,c
 10205  001DEA  EFF9  F00E         	goto	u6911
 10206  001DEE  EFFB  F00E         	goto	u6910
 10207  001DF2                     u6911:
 10208  001DF2  EF09  F00F         	goto	l7004
 10209  001DF6                     u6910:
 10210  001DF6                     
 10211                           ; BSR set to: 0
 10212  001DF6  0E00               	movlw	0
 10213  001DF8  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10214  001DFA  0E00               	movlw	0
 10215  001DFC  6F65               	movwf	___fldiv@new_exp& (0+255),b
 10216  001DFE  0E00               	movlw	0
 10217  001E00  6E1A               	movwf	___fldiv@b^0,c
 10218  001E02  0E00               	movlw	0
 10219  001E04  6E1B               	movwf	(___fldiv@b+1)^0,c
 10220  001E06  0E00               	movlw	0
 10221  001E08  6E1C               	movwf	(___fldiv@b+2)^0,c
 10222  001E0A  0E00               	movlw	0
 10223  001E0C  6E1D               	movwf	(___fldiv@b+3)^0,c
 10224  001E0E  0E00               	movlw	0
 10225  001E10  6F64               	movwf	___fldiv@sign& (0+255),b
 10226  001E12                     l7004:
 10227                           
 10228                           ; BSR set to: 0
 10229  001E12  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 10230  001E16                     
 10231                           ; BSR set to: 0
 10232  001E16  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 10233  001E18  EF10  F00F         	goto	u6921
 10234  001E1C  EF12  F00F         	goto	u6920
 10235  001E20                     u6921:
 10236  001E20  EF15  F00F         	goto	l7010
 10237  001E24                     u6920:
 10238  001E24                     
 10239                           ; BSR set to: 0
 10240  001E24  8E1C               	bsf	(___fldiv@b+2)^0,7,c
 10241  001E26  EF16  F00F         	goto	l7012
 10242  001E2A                     l7010:
 10243                           
 10244                           ; BSR set to: 0
 10245  001E2A  9E1C               	bcf	(___fldiv@b+2)^0,7,c
 10246  001E2C                     l7012:
 10247                           
 10248                           ; BSR set to: 0
 10249  001E2C  90D8               	bcf	status,0,c
 10250  001E2E  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 10251  001E30  6E1D               	movwf	(___fldiv@b+3)^0,c
 10252  001E32  EFCC  F00D         	goto	l6926
 10253  001E36                     l1391:
 10254                           
 10255                           ; BSR set to: 0
 10256  001E36  0012               	return		;funcret
 10257  001E38                     __end_of___fldiv:
 10258                           	callstack 0
 10259                           
 10260 ;; *************** function _I2C_Master_Write *****************
 10261 ;; Defined at:
 10262 ;;		line 97 in file "INA260.c"
 10263 ;; Parameters:    Size  Location     Type
 10264 ;;  d               2   26[COMRAM] unsigned int 
 10265 ;; Auto vars:     Size  Location     Type
 10266 ;;		None
 10267 ;; Return value:  Size  Location     Type
 10268 ;;                  1    wreg      void 
 10269 ;; Registers used:
 10270 ;;		wreg, status,2, status,0, cstack
 10271 ;; Tracked objects:
 10272 ;;		On entry : 0/0
 10273 ;;		On exit  : 0/0
 10274 ;;		Unchanged: 0/0
 10275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10276 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10279 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10280 ;;Total ram usage:        2 bytes
 10281 ;; Hardware stack levels used:    1
 10282 ;; Hardware stack levels required when called:    8
 10283 ;; This function calls:
 10284 ;;		_I2C_Master_Wait
 10285 ;; This function is called by:
 10286 ;;		_Voltage_ReadRegister
 10287 ;;		_Current_ReadRegister
 10288 ;;		_Power_ReadRegister
 10289 ;; This function uses a non-reentrant model
 10290 ;;
 10291                           
 10292                           	psect	text40
 10293  003A62                     __ptext40:
 10294                           	callstack 0
 10295  003A62                     _I2C_Master_Write:
 10296                           	callstack 21
 10297  003A62                     
 10298                           ;INA260.c: 97: void I2C_Master_Write(unsigned d);INA260.c: 98: {;INA260.c: 99:   I2C_Mas
      +                          ter_Wait();
 10299  003A62  ECBB  F01C         	call	_I2C_Master_Wait	;wreg free
 10300  003A66                     
 10301                           ;INA260.c: 100:   SSPBUF = d;
 10302  003A66  C01B  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
 10303  003A6A  0012               	return		;funcret
 10304  003A6C                     __end_of_I2C_Master_Write:
 10305                           	callstack 0
 10306                           
 10307 ;; *************** function _I2C_Master_Stop *****************
 10308 ;; Defined at:
 10309 ;;		line 91 in file "INA260.c"
 10310 ;; Parameters:    Size  Location     Type
 10311 ;;		None
 10312 ;; Auto vars:     Size  Location     Type
 10313 ;;		None
 10314 ;; Return value:  Size  Location     Type
 10315 ;;                  1    wreg      void 
 10316 ;; Registers used:
 10317 ;;		wreg, status,2, status,0, cstack
 10318 ;; Tracked objects:
 10319 ;;		On entry : 0/0
 10320 ;;		On exit  : 0/0
 10321 ;;		Unchanged: 0/0
 10322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10327 ;;Total ram usage:        0 bytes
 10328 ;; Hardware stack levels used:    1
 10329 ;; Hardware stack levels required when called:    8
 10330 ;; This function calls:
 10331 ;;		_I2C_Master_Wait
 10332 ;; This function is called by:
 10333 ;;		_Voltage_ReadRegister
 10334 ;;		_Current_ReadRegister
 10335 ;;		_Power_ReadRegister
 10336 ;; This function uses a non-reentrant model
 10337 ;;
 10338                           
 10339                           	psect	text41
 10340  003A6C                     __ptext41:
 10341                           	callstack 0
 10342  003A6C                     _I2C_Master_Stop:
 10343                           	callstack 21
 10344  003A6C                     
 10345                           ;INA260.c: 93:   I2C_Master_Wait();
 10346  003A6C  ECBB  F01C         	call	_I2C_Master_Wait	;wreg free
 10347  003A70                     
 10348                           ;INA260.c: 94:   PEN = 1;
 10349  003A70  84C5               	bsf	4037,2,c	;volatile
 10350  003A72  0012               	return		;funcret
 10351  003A74                     __end_of_I2C_Master_Stop:
 10352                           	callstack 0
 10353                           
 10354 ;; *************** function _I2C_Master_Start *****************
 10355 ;; Defined at:
 10356 ;;		line 79 in file "INA260.c"
 10357 ;; Parameters:    Size  Location     Type
 10358 ;;		None
 10359 ;; Auto vars:     Size  Location     Type
 10360 ;;		None
 10361 ;; Return value:  Size  Location     Type
 10362 ;;                  1    wreg      void 
 10363 ;; Registers used:
 10364 ;;		wreg, status,2, status,0, cstack
 10365 ;; Tracked objects:
 10366 ;;		On entry : 0/0
 10367 ;;		On exit  : 0/0
 10368 ;;		Unchanged: 0/0
 10369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10374 ;;Total ram usage:        0 bytes
 10375 ;; Hardware stack levels used:    1
 10376 ;; Hardware stack levels required when called:    8
 10377 ;; This function calls:
 10378 ;;		_I2C_Master_Wait
 10379 ;; This function is called by:
 10380 ;;		_Voltage_ReadRegister
 10381 ;;		_Current_ReadRegister
 10382 ;;		_Power_ReadRegister
 10383 ;; This function uses a non-reentrant model
 10384 ;;
 10385                           
 10386                           	psect	text42
 10387  003A74                     __ptext42:
 10388                           	callstack 0
 10389  003A74                     _I2C_Master_Start:
 10390                           	callstack 21
 10391  003A74                     
 10392                           ;INA260.c: 81:   I2C_Master_Wait();
 10393  003A74  ECBB  F01C         	call	_I2C_Master_Wait	;wreg free
 10394  003A78                     
 10395                           ;INA260.c: 82:   SEN = 1;
 10396  003A78  80C5               	bsf	4037,0,c	;volatile
 10397  003A7A  0012               	return		;funcret
 10398  003A7C                     __end_of_I2C_Master_Start:
 10399                           	callstack 0
 10400                           
 10401 ;; *************** function _I2C_Master_RepeatedStart *****************
 10402 ;; Defined at:
 10403 ;;		line 85 in file "INA260.c"
 10404 ;; Parameters:    Size  Location     Type
 10405 ;;		None
 10406 ;; Auto vars:     Size  Location     Type
 10407 ;;		None
 10408 ;; Return value:  Size  Location     Type
 10409 ;;                  1    wreg      void 
 10410 ;; Registers used:
 10411 ;;		wreg, status,2, status,0, cstack
 10412 ;; Tracked objects:
 10413 ;;		On entry : 0/0
 10414 ;;		On exit  : 0/0
 10415 ;;		Unchanged: 0/0
 10416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10421 ;;Total ram usage:        0 bytes
 10422 ;; Hardware stack levels used:    1
 10423 ;; Hardware stack levels required when called:    8
 10424 ;; This function calls:
 10425 ;;		_I2C_Master_Wait
 10426 ;; This function is called by:
 10427 ;;		_Voltage_ReadRegister
 10428 ;;		_Current_ReadRegister
 10429 ;;		_Power_ReadRegister
 10430 ;; This function uses a non-reentrant model
 10431 ;;
 10432                           
 10433                           	psect	text43
 10434  003A7C                     __ptext43:
 10435                           	callstack 0
 10436  003A7C                     _I2C_Master_RepeatedStart:
 10437                           	callstack 21
 10438  003A7C                     
 10439                           ;INA260.c: 87:   I2C_Master_Wait();
 10440  003A7C  ECBB  F01C         	call	_I2C_Master_Wait	;wreg free
 10441  003A80                     
 10442                           ;INA260.c: 88:   RSEN = 1;
 10443  003A80  82C5               	bsf	4037,1,c	;volatile
 10444  003A82  0012               	return		;funcret
 10445  003A84                     __end_of_I2C_Master_RepeatedStart:
 10446                           	callstack 0
 10447                           
 10448 ;; *************** function _I2C_Master_Read *****************
 10449 ;; Defined at:
 10450 ;;		line 103 in file "INA260.c"
 10451 ;; Parameters:    Size  Location     Type
 10452 ;;  a               2   26[COMRAM] unsigned short 
 10453 ;; Auto vars:     Size  Location     Type
 10454 ;;  temp            2   28[COMRAM] unsigned short 
 10455 ;; Return value:  Size  Location     Type
 10456 ;;                  2   26[COMRAM] unsigned short 
 10457 ;; Registers used:
 10458 ;;		wreg, status,2, status,0, cstack
 10459 ;; Tracked objects:
 10460 ;;		On entry : 0/0
 10461 ;;		On exit  : 0/0
 10462 ;;		Unchanged: 0/0
 10463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10464 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10465 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10467 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10468 ;;Total ram usage:        4 bytes
 10469 ;; Hardware stack levels used:    1
 10470 ;; Hardware stack levels required when called:    8
 10471 ;; This function calls:
 10472 ;;		_I2C_Master_Wait
 10473 ;; This function is called by:
 10474 ;;		_Voltage_ReadRegister
 10475 ;;		_Current_ReadRegister
 10476 ;;		_Power_ReadRegister
 10477 ;; This function uses a non-reentrant model
 10478 ;;
 10479                           
 10480                           	psect	text44
 10481  003794                     __ptext44:
 10482                           	callstack 0
 10483  003794                     _I2C_Master_Read:
 10484                           	callstack 21
 10485  003794                     
 10486                           ;INA260.c: 103: unsigned short I2C_Master_Read(unsigned short a);INA260.c: 104: {;INA260
      +                          .c: 105:   unsigned short temp;;INA260.c: 106:   I2C_Master_Wait();
 10487  003794  ECBB  F01C         	call	_I2C_Master_Wait	;wreg free
 10488  003798                     
 10489                           ;INA260.c: 107:   RCEN = 1;
 10490  003798  86C5               	bsf	4037,3,c	;volatile
 10491                           
 10492                           ;INA260.c: 108:   I2C_Master_Wait();
 10493  00379A  ECBB  F01C         	call	_I2C_Master_Wait	;wreg free
 10494  00379E                     
 10495                           ;INA260.c: 109:   temp = SSPBUF;
 10496  00379E  CFC9 F01D          	movff	4041,I2C_Master_Read@temp	;volatile
 10497  0037A2  6A1E               	clrf	(I2C_Master_Read@temp+1)^0,c
 10498                           
 10499                           ;INA260.c: 110:   I2C_Master_Wait();
 10500  0037A4  ECBB  F01C         	call	_I2C_Master_Wait	;wreg free
 10501  0037A8                     
 10502                           ;INA260.c: 111:   ACKDT = (a)?0:1;
 10503  0037A8  501B               	movf	I2C_Master_Read@a^0,w,c
 10504  0037AA  101C               	iorwf	(I2C_Master_Read@a+1)^0,w,c
 10505  0037AC  B4D8               	btfsc	status,2,c
 10506  0037AE  EFDB  F01B         	goto	u8521
 10507  0037B2  EFDE  F01B         	goto	u8520
 10508  0037B6                     u8521:
 10509  0037B6  8AC5               	bsf	4037,5,c	;volatile
 10510  0037B8  EFDF  F01B         	goto	u8535
 10511  0037BC                     u8520:
 10512  0037BC  9AC5               	bcf	4037,5,c	;volatile
 10513  0037BE                     u8535:
 10514  0037BE                     
 10515                           ;INA260.c: 112:   ACKEN = 1;
 10516  0037BE  88C5               	bsf	4037,4,c	;volatile
 10517  0037C0                     
 10518                           ;INA260.c: 113:   return temp;
 10519  0037C0  C01D  F01B         	movff	I2C_Master_Read@temp,?_I2C_Master_Read
 10520  0037C4  C01E  F01C         	movff	I2C_Master_Read@temp+1,?_I2C_Master_Read+1
 10521  0037C8  0012               	return		;funcret
 10522  0037CA                     __end_of_I2C_Master_Read:
 10523                           	callstack 0
 10524                           
 10525 ;; *************** function _I2C_Master_Wait *****************
 10526 ;; Defined at:
 10527 ;;		line 74 in file "INA260.c"
 10528 ;; Parameters:    Size  Location     Type
 10529 ;;		None
 10530 ;; Auto vars:     Size  Location     Type
 10531 ;;		None
 10532 ;; Return value:  Size  Location     Type
 10533 ;;                  1    wreg      void 
 10534 ;; Registers used:
 10535 ;;		wreg, status,2, status,0
 10536 ;; Tracked objects:
 10537 ;;		On entry : 0/0
 10538 ;;		On exit  : 0/0
 10539 ;;		Unchanged: 0/0
 10540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10543 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10544 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10545 ;;Total ram usage:        1 bytes
 10546 ;; Hardware stack levels used:    1
 10547 ;; Hardware stack levels required when called:    7
 10548 ;; This function calls:
 10549 ;;		Nothing
 10550 ;; This function is called by:
 10551 ;;		_I2C_Master_Start
 10552 ;;		_I2C_Master_RepeatedStart
 10553 ;;		_I2C_Master_Stop
 10554 ;;		_I2C_Master_Write
 10555 ;;		_I2C_Master_Read
 10556 ;; This function uses a non-reentrant model
 10557 ;;
 10558                           
 10559                           	psect	text45
 10560  003976                     __ptext45:
 10561                           	callstack 0
 10562  003976                     _I2C_Master_Wait:
 10563                           	callstack 21
 10564  003976                     l731:
 10565  003976  B4C7               	btfsc	199,2,c	;volatile
 10566  003978  EFC0  F01C         	goto	u8361
 10567  00397C  EFC2  F01C         	goto	u8360
 10568  003980                     u8361:
 10569  003980  EFBB  F01C         	goto	l731
 10570  003984                     u8360:
 10571  003984  CFC5 F01A          	movff	4037,??_I2C_Master_Wait	;volatile
 10572  003988  0E1F               	movlw	31
 10573  00398A  161A               	andwf	??_I2C_Master_Wait^0,f,c
 10574  00398C  A4D8               	btfss	status,2,c
 10575  00398E  EFCB  F01C         	goto	u8371
 10576  003992  EFCD  F01C         	goto	u8370
 10577  003996                     u8371:
 10578  003996  EFBB  F01C         	goto	l731
 10579  00399A                     u8370:
 10580  00399A  0012               	return		;funcret
 10581  00399C                     __end_of_I2C_Master_Wait:
 10582                           	callstack 0
 10583                           
 10584 ;; *************** function _INTERRUPT_InterruptManager *****************
 10585 ;; Defined at:
 10586 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 10587 ;; Parameters:    Size  Location     Type
 10588 ;;		None
 10589 ;; Auto vars:     Size  Location     Type
 10590 ;;		None
 10591 ;; Return value:  Size  Location     Type
 10592 ;;                  1    wreg      void 
 10593 ;; Registers used:
 10594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10595 ;; Tracked objects:
 10596 ;;		On entry : 0/0
 10597 ;;		On exit  : 0/0
 10598 ;;		Unchanged: 0/0
 10599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10602 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10603 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10604 ;;Total ram usage:       10 bytes
 10605 ;; Hardware stack levels used:    1
 10606 ;; Hardware stack levels required when called:    6
 10607 ;; This function calls:
 10608 ;;		Absolute function
 10609 ;;		_I2C_MasterIsr
 10610 ;; This function is called by:
 10611 ;;		Interrupt level 2
 10612 ;; This function uses a non-reentrant model
 10613 ;;
 10614                           
 10615                           	psect	intcode
 10616  000008                     __pintcode:
 10617                           	callstack 0
 10618  000008                     _INTERRUPT_InterruptManager:
 10619                           	callstack 16
 10620                           
 10621                           ;incstack = 0
 10622  000008  8246               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10623  00000A  CFFA F010          	movff	pclath,??_INTERRUPT_InterruptManager
 10624  00000E  CFFB F011          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 10625  000012  CFD9 F012          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 10626  000016  CFDA F013          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 10627  00001A  CFF3 F014          	movff	prodl,??_INTERRUPT_InterruptManager+4
 10628  00001E  CFF4 F015          	movff	prodh,??_INTERRUPT_InterruptManager+5
 10629  000022  CFF6 F016          	movff	tblptrl,??_INTERRUPT_InterruptManager+6
 10630  000026  CFF7 F017          	movff	tblptrh,??_INTERRUPT_InterruptManager+7
 10631  00002A  CFF8 F018          	movff	tblptru,??_INTERRUPT_InterruptManager+8
 10632  00002E  CFF5 F019          	movff	tablat,??_INTERRUPT_InterruptManager+9
 10633  000032                     
 10634                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 10635  000032  ACF2               	btfss	242,6,c	;volatile
 10636  000034  EF1E  F000         	goto	i2u611_41
 10637  000038  EF20  F000         	goto	i2u611_40
 10638  00003C                     i2u611_41:
 10639  00003C  EF4C  F000         	goto	i2l248
 10640  000040                     i2u611_40:
 10641  000040                     
 10642                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE2bits.BCLIE == 1 && PIR2bits.BCLIF == 1)
 10643  000040  A6A0               	btfss	160,3,c	;volatile
 10644  000042  EF25  F000         	goto	i2u612_41
 10645  000046  EF27  F000         	goto	i2u612_40
 10646  00004A                     i2u612_41:
 10647  00004A  EF3C  F000         	goto	i2l243
 10648  00004E                     i2u612_40:
 10649  00004E  A6A1               	btfss	161,3,c	;volatile
 10650  000050  EF2C  F000         	goto	i2u613_41
 10651  000054  EF2E  F000         	goto	i2u613_40
 10652  000058                     i2u613_41:
 10653  000058  EF3C  F000         	goto	i2l243
 10654  00005C                     i2u613_40:
 10655  00005C                     i2l6376:
 10656                           
 10657                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             MSSP_InterruptHandler();
 10658  00005C  D802               	call	i2u614_48
 10659  00005E  EF3A  F000         	goto	i2u614_49
 10660  000062                     i2u614_48:
 10661  000062  0005               	push	
 10662  000064  6EFA               	movwf	pclath,c
 10663  000066  5044               	movf	_MSSP_InterruptHandler^0,w,c
 10664  000068  6EFD               	movwf	tosl,c
 10665  00006A  5045               	movf	(_MSSP_InterruptHandler+1)^0,w,c
 10666  00006C  6EFE               	movwf	tosh,c
 10667  00006E  6AFF               	clrf	tosu,c
 10668  000070  50FA               	movf	pclath,w,c
 10669  000072  0012               	return		;indir
 10670  000074                     i2u614_49:
 10671                           
 10672                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 10673  000074  EF4C  F000         	goto	i2l248
 10674  000078                     i2l243:
 10675  000078  A69D               	btfss	157,3,c	;volatile
 10676  00007A  EF41  F000         	goto	i2u615_41
 10677  00007E  EF43  F000         	goto	i2u615_40
 10678  000082                     i2u615_41:
 10679  000082  EF4C  F000         	goto	i2l244
 10680  000086                     i2u615_40:
 10681  000086  A69E               	btfss	158,3,c	;volatile
 10682  000088  EF48  F000         	goto	i2u616_41
 10683  00008C  EF4A  F000         	goto	i2u616_40
 10684  000090                     i2u616_41:
 10685  000090  EF4C  F000         	goto	i2l244
 10686  000094                     i2u616_40:
 10687  000094  EF2E  F000         	goto	i2l6376
 10688  000098                     i2l244:
 10689  000098                     i2l248:
 10690  000098  C019  FFF5         	movff	??_INTERRUPT_InterruptManager+9,tablat
 10691  00009C  C018  FFF8         	movff	??_INTERRUPT_InterruptManager+8,tblptru
 10692  0000A0  C017  FFF7         	movff	??_INTERRUPT_InterruptManager+7,tblptrh
 10693  0000A4  C016  FFF6         	movff	??_INTERRUPT_InterruptManager+6,tblptrl
 10694  0000A8  C015  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
 10695  0000AC  C014  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
 10696  0000B0  C013  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 10697  0000B4  C012  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 10698  0000B8  C011  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 10699  0000BC  C010  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 10700  0000C0  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10701  0000C2  0011               	retfie		f
 10702  0000C4                     __end_of_INTERRUPT_InterruptManager:
 10703                           	callstack 0
 10704                           
 10705 ;; *************** function _I2C_MasterIsr *****************
 10706 ;; Defined at:
 10707 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
 10708 ;; Parameters:    Size  Location     Type
 10709 ;;		None
 10710 ;; Auto vars:     Size  Location     Type
 10711 ;;		None
 10712 ;; Return value:  Size  Location     Type
 10713 ;;                  1    wreg      void 
 10714 ;; Registers used:
 10715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10716 ;; Tracked objects:
 10717 ;;		On entry : 0/0
 10718 ;;		On exit  : 0/0
 10719 ;;		Unchanged: 0/0
 10720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10725 ;;Total ram usage:        0 bytes
 10726 ;; Hardware stack levels used:    1
 10727 ;; Hardware stack levels required when called:    5
 10728 ;; This function calls:
 10729 ;;		_I2C_MasterFsm
 10730 ;; This function is called by:
 10731 ;;		_I2C_Open
 10732 ;;		_INTERRUPT_InterruptManager
 10733 ;; This function uses a non-reentrant model
 10734 ;;
 10735                           
 10736                           	psect	text47
 10737  003AC4                     __ptext47:
 10738                           	callstack 0
 10739  003AC4                     _I2C_MasterIsr:
 10740                           	callstack 16
 10741  003AC4                     
 10742                           ;mcc_generated_files/i2c_master.c: 320:     I2C_MasterFsm();
 10743  003AC4  EC31  F019         	call	_I2C_MasterFsm	;wreg free
 10744  003AC8  0012               	return		;funcret
 10745  003ACA                     __end_of_I2C_MasterIsr:
 10746                           	callstack 0
 10747                           
 10748 ;; *************** function _I2C_MasterFsm *****************
 10749 ;; Defined at:
 10750 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
 10751 ;; Parameters:    Size  Location     Type
 10752 ;;		None
 10753 ;; Auto vars:     Size  Location     Type
 10754 ;;		None
 10755 ;; Return value:  Size  Location     Type
 10756 ;;                  1    wreg      void 
 10757 ;; Registers used:
 10758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10759 ;; Tracked objects:
 10760 ;;		On entry : 0/0
 10761 ;;		On exit  : 0/0
 10762 ;;		Unchanged: 0/0
 10763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10766 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10767 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10768 ;;Total ram usage:        2 bytes
 10769 ;; Hardware stack levels used:    1
 10770 ;; Hardware stack levels required when called:    4
 10771 ;; This function calls:
 10772 ;;		_I2C_DO_ADDRESS_NACK
 10773 ;;		_I2C_DO_IDLE
 10774 ;;		_I2C_DO_RCEN
 10775 ;;		_I2C_DO_RESET
 10776 ;;		_I2C_DO_RX
 10777 ;;		_I2C_DO_RX_ACK
 10778 ;;		_I2C_DO_RX_NACK_RESTART
 10779 ;;		_I2C_DO_RX_NACK_STOP
 10780 ;;		_I2C_DO_SEND_ADR_READ
 10781 ;;		_I2C_DO_SEND_ADR_WRITE
 10782 ;;		_I2C_DO_SEND_RESTART
 10783 ;;		_I2C_DO_SEND_RESTART_READ
 10784 ;;		_I2C_DO_SEND_RESTART_WRITE
 10785 ;;		_I2C_DO_SEND_STOP
 10786 ;;		_I2C_DO_TX
 10787 ;;		_I2C_DO_TX_EMPTY
 10788 ;;		_I2C_MasterClearIrq
 10789 ;;		_I2C_MasterIsNack
 10790 ;; This function is called by:
 10791 ;;		_I2C_MasterIsr
 10792 ;; This function uses a non-reentrant model
 10793 ;;
 10794                           
 10795                           	psect	text48
 10796  003262                     __ptext48:
 10797                           	callstack 0
 10798  003262                     _I2C_MasterFsm:
 10799                           	callstack 16
 10800  003262                     
 10801                           ;mcc_generated_files/i2c_master.c: 325:     I2C_MasterClearIrq();
 10802  003262  EC6D  F01D         	call	_I2C_MasterClearIrq	;wreg free
 10803  003266                     
 10804                           ;mcc_generated_files/i2c_master.c: 327:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
 10805  003266  0101               	movlb	1	; () banked
 10806  003268  A173               	btfss	(_I2C_Status+35)& (0+255),0,b
 10807  00326A  EF39  F019         	goto	i2u557_41
 10808  00326E  EF3B  F019         	goto	i2u557_40
 10809  003272                     i2u557_41:
 10810  003272  EF48  F019         	goto	i2l5912
 10811  003276                     i2u557_40:
 10812  003276                     
 10813                           ; BSR set to: 1
 10814  003276  ECEC  F01C         	call	_I2C_MasterIsNack	;wreg free
 10815  00327A  0900               	iorlw	0
 10816  00327C  B4D8               	btfsc	status,2,c
 10817  00327E  EF43  F019         	goto	i2u558_41
 10818  003282  EF45  F019         	goto	i2u558_40
 10819  003286                     i2u558_41:
 10820  003286  EF48  F019         	goto	i2l5912
 10821  00328A                     i2u558_40:
 10822  00328A                     
 10823                           ;mcc_generated_files/i2c_master.c: 328:     {;mcc_generated_files/i2c_master.c: 329:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
 10824  00328A  0E0F               	movlw	15
 10825  00328C  0101               	movlb	1	; () banked
 10826  00328E  6F71               	movwf	(_I2C_Status+33)& (0+255),b
 10827  003290                     i2l5912:
 10828                           
 10829                           ;mcc_generated_files/i2c_master.c: 331:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
 10830  003290  0101               	movlb	1	; () banked
 10831  003292  5171               	movf	(_I2C_Status+33)& (0+255),w,b
 10832  003294  0D02               	mullw	2
 10833  003296  0E3B               	movlw	low _i2c_fsmStateTable
 10834  003298  24F3               	addwf	243,w,c
 10835  00329A  6EF6               	movwf	tblptrl,c
 10836  00329C  0EFD               	movlw	high _i2c_fsmStateTable
 10837  00329E  20F4               	addwfc	244,w,c
 10838  0032A0  6EF7               	movwf	tblptrh,c
 10839  0032A2                     	if	1	;There are 3 active tblptr bytes
 10840  0032A2  6AF8               	clrf	tblptru,c
 10841  0032A4  0E00               	movlw	low (__mediumconst shr (0+16))
 10842  0032A6  22F8               	addwfc	tblptru,f,c
 10843  0032A8                     	endif
 10844  0032A8  0009               	tblrd		*+
 10845  0032AA  CFF5 F00E          	movff	tablat,??_I2C_MasterFsm
 10846  0032AE  0009               	tblrd		*+
 10847  0032B0  CFF5 F00F          	movff	tablat,??_I2C_MasterFsm+1
 10848  0032B4  D802               	call	i2u559_48
 10849  0032B6  EF66  F019         	goto	i2u559_49
 10850  0032BA                     i2u559_48:
 10851  0032BA  0005               	push	
 10852  0032BC  6EFA               	movwf	pclath,c
 10853  0032BE  500E               	movf	??_I2C_MasterFsm^0,w,c
 10854  0032C0  6EFD               	movwf	tosl,c
 10855  0032C2  500F               	movf	(??_I2C_MasterFsm+1)^0,w,c
 10856  0032C4  6EFE               	movwf	tosh,c
 10857  0032C6  6AFF               	clrf	tosu,c
 10858  0032C8  50FA               	movf	pclath,w,c
 10859  0032CA  0012               	return		;indir
 10860  0032CC                     i2u559_49:
 10861  0032CC  0101               	movlb	1	; () banked
 10862  0032CE  6F71               	movwf	(_I2C_Status+33)& (0+255),b
 10863  0032D0                     
 10864                           ; BSR set to: 1
 10865  0032D0  0012               	return		;funcret
 10866  0032D2                     __end_of_I2C_MasterFsm:
 10867                           	callstack 0
 10868                           
 10869 ;; *************** function _I2C_MasterClearIrq *****************
 10870 ;; Defined at:
 10871 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
 10872 ;; Parameters:    Size  Location     Type
 10873 ;;		None
 10874 ;; Auto vars:     Size  Location     Type
 10875 ;;		None
 10876 ;; Return value:  Size  Location     Type
 10877 ;;                  1    wreg      void 
 10878 ;; Registers used:
 10879 ;;		None
 10880 ;; Tracked objects:
 10881 ;;		On entry : 0/0
 10882 ;;		On exit  : 0/0
 10883 ;;		Unchanged: 0/0
 10884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10889 ;;Total ram usage:        0 bytes
 10890 ;; Hardware stack levels used:    1
 10891 ;; This function calls:
 10892 ;;		Nothing
 10893 ;; This function is called by:
 10894 ;;		_I2C_MasterFsm
 10895 ;;		_I2C_Open
 10896 ;;		_I2C_Close
 10897 ;; This function uses a non-reentrant model
 10898 ;;
 10899                           
 10900                           	psect	text49
 10901  003ADA                     __ptext49:
 10902                           	callstack 0
 10903  003ADA                     _I2C_MasterClearIrq:
 10904                           	callstack 19
 10905  003ADA                     
 10906                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
 10907  003ADA  969E               	bcf	158,3,c	;volatile
 10908  003ADC  0012               	return		;funcret
 10909  003ADE                     __end_of_I2C_MasterClearIrq:
 10910                           	callstack 0
 10911                           
 10912 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
 10913 ;; Defined at:
 10914 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
 10915 ;; Parameters:    Size  Location     Type
 10916 ;;		None
 10917 ;; Auto vars:     Size  Location     Type
 10918 ;;		None
 10919 ;; Return value:  Size  Location     Type
 10920 ;;                  1    wreg      enum E12583
 10921 ;; Registers used:
 10922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10923 ;; Tracked objects:
 10924 ;;		On entry : 0/0
 10925 ;;		On exit  : 0/0
 10926 ;;		Unchanged: 0/0
 10927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10930 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10931 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10932 ;;Total ram usage:        2 bytes
 10933 ;; Hardware stack levels used:    1
 10934 ;; Hardware stack levels required when called:    3
 10935 ;; This function calls:
 10936 ;;		Absolute function
 10937 ;;		_I2C_CallbackReturnReset
 10938 ;;		_I2C_CallbackReturnStop
 10939 ;;		_I2C_DO_SEND_RESTART
 10940 ;;		_I2C_DO_SEND_STOP
 10941 ;;		_rd1RegCompleteHandler
 10942 ;;		_rd1RegCompleteHandler@i2c_master_example$F148
 10943 ;;		_rd2RegCompleteHandler
 10944 ;;		_rd2RegCompleteHandler@i2c_master_example$F159
 10945 ;;		_rdBlkRegCompleteHandler
 10946 ;;		_rdBlkRegCompleteHandler@i2c_master_example$F182
 10947 ;;		_wr1RegCompleteHandler
 10948 ;;		_wr1RegCompleteHandler@i2c_master_example$F165
 10949 ;;		_wr2RegCompleteHandler
 10950 ;;		_wr2RegCompleteHandler@i2c_master_example$F171
 10951 ;; This function is called by:
 10952 ;;		_I2C_MasterFsm
 10953 ;; This function uses a non-reentrant model
 10954 ;;
 10955                           
 10956                           	psect	text50
 10957  0032D2                     __ptext50:
 10958                           	callstack 0
 10959  0032D2                     _I2C_DO_ADDRESS_NACK:
 10960                           	callstack 16
 10961  0032D2                     
 10962                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.addressNackCheck = 0;
 10963  0032D2  0101               	movlb	1	; () banked
 10964  0032D4  9173               	bcf	(_I2C_Status+35)& (0+255),0,b
 10965  0032D6                     
 10966                           ; BSR set to: 1
 10967                           ;mcc_generated_files/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
 10968  0032D6  0E02               	movlw	2
 10969  0032D8  6F72               	movwf	(_I2C_Status+34)& (0+255),b
 10970                           
 10971                           ;mcc_generated_files/i2c_master.c: 505:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
 10972  0032DA  EF77  F019         	goto	i2l5780
 10973  0032DE                     i2l5770:
 10974                           
 10975                           ;mcc_generated_files/i2c_master.c: 509:             return I2C_DO_SEND_RESTART();
 10976  0032DE  EC52  F01D         	call	_I2C_DO_SEND_RESTART	;wreg free
 10977  0032E2  EF9B  F019         	goto	i2l555
 10978  0032E6                     i2l5774:
 10979                           
 10980                           ;mcc_generated_files/i2c_master.c: 511:             return I2C_DO_SEND_STOP();
 10981  0032E6  EC4E  F01D         	call	_I2C_DO_SEND_STOP	;wreg free
 10982  0032EA  EF9B  F019         	goto	i2l555
 10983  0032EE                     i2l5780:
 10984                           
 10985                           ; BSR set to: 1
 10986  0032EE  C160  F00A         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
 10987  0032F2  C161  F00B         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
 10988  0032F6  D802               	call	i2u539_48
 10989  0032F8  EF87  F019         	goto	i2u539_49
 10990  0032FC                     i2u539_48:
 10991  0032FC  0005               	push	
 10992  0032FE  6EFA               	movwf	pclath,c
 10993  003300  5154               	movf	(_I2C_Status+4)& (0+255),w,b
 10994  003302  6EFD               	movwf	tosl,c
 10995  003304  5155               	movf	(_I2C_Status+5)& (0+255),w,b
 10996  003306  6EFE               	movwf	tosh,c
 10997  003308  6AFF               	clrf	tosu,c
 10998  00330A  50FA               	movf	pclath,w,c
 10999  00330C  0012               	return		;indir
 11000  00330E                     i2u539_49:
 11001  00330E  6E0C               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
 11002  003310  6A0D               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
 11003                           
 11004                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11005                           ; Switch size 1, requested type "simple"
 11006                           ; Number of cases is 1, Range of values is 0 to 0
 11007                           ; switch strategies available:
 11008                           ; Name         Instructions Cycles
 11009                           ; simple_byte            4     3 (average)
 11010                           ;	Chosen strategy is simple_byte
 11011  003312  500D               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
 11012  003314  0A00               	xorlw	0	; case 0
 11013  003316  B4D8               	btfsc	status,2,c
 11014  003318  EF90  F019         	goto	i2l8264
 11015  00331C  EF73  F019         	goto	i2l5774
 11016  003320                     i2l8264:
 11017                           
 11018                           ; Switch size 1, requested type "simple"
 11019                           ; Number of cases is 2, Range of values is 1 to 2
 11020                           ; switch strategies available:
 11021                           ; Name         Instructions Cycles
 11022                           ; simple_byte            7     4 (average)
 11023                           ;	Chosen strategy is simple_byte
 11024  003320  500C               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
 11025  003322  0A01               	xorlw	1	; case 1
 11026  003324  B4D8               	btfsc	status,2,c
 11027  003326  EF6F  F019         	goto	i2l5770
 11028  00332A  0A03               	xorlw	3	; case 2
 11029  00332C  B4D8               	btfsc	status,2,c
 11030  00332E  EF6F  F019         	goto	i2l5770
 11031  003332  EF73  F019         	goto	i2l5774
 11032  003336                     i2l555:
 11033  003336  0012               	return		;funcret
 11034  003338                     __end_of_I2C_DO_ADDRESS_NACK:
 11035                           	callstack 0
 11036                           
 11037 ;; *************** function _I2C_DO_RESET *****************
 11038 ;; Defined at:
 11039 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
 11040 ;; Parameters:    Size  Location     Type
 11041 ;;		None
 11042 ;; Auto vars:     Size  Location     Type
 11043 ;;		None
 11044 ;; Return value:  Size  Location     Type
 11045 ;;                  1    wreg      enum E12583
 11046 ;; Registers used:
 11047 ;;		wreg, status,2
 11048 ;; Tracked objects:
 11049 ;;		On entry : 0/0
 11050 ;;		On exit  : 0/0
 11051 ;;		Unchanged: 0/0
 11052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11057 ;;Total ram usage:        0 bytes
 11058 ;; Hardware stack levels used:    1
 11059 ;; This function calls:
 11060 ;;		Nothing
 11061 ;; This function is called by:
 11062 ;;		_I2C_MasterFsm
 11063 ;; This function uses a non-reentrant model
 11064 ;;
 11065                           
 11066                           	psect	text51
 11067  003A3E                     __ptext51:
 11068                           	callstack 0
 11069  003A3E                     _I2C_DO_RESET:
 11070                           	callstack 19
 11071  003A3E                     
 11072                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.busy = 0;
 11073  003A3E  0101               	movlb	1	; () banked
 11074  003A40  9373               	bcf	(_I2C_Status+35)& (0+255),1,b
 11075  003A42                     
 11076                           ; BSR set to: 1
 11077                           ;mcc_generated_files/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
 11078  003A42  0E00               	movlw	0
 11079  003A44  6F72               	movwf	(_I2C_Status+34)& (0+255),b
 11080  003A46                     
 11081                           ; BSR set to: 1
 11082                           ;mcc_generated_files/i2c_master.c: 499:     return I2C_RESET;
 11083  003A46  0E0E               	movlw	14
 11084  003A48                     
 11085                           ; BSR set to: 1
 11086  003A48  0012               	return		;funcret
 11087  003A4A                     __end_of_I2C_DO_RESET:
 11088                           	callstack 0
 11089                           
 11090 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
 11091 ;; Defined at:
 11092 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
 11093 ;; Parameters:    Size  Location     Type
 11094 ;;		None
 11095 ;; Auto vars:     Size  Location     Type
 11096 ;;		None
 11097 ;; Return value:  Size  Location     Type
 11098 ;;                  1    wreg      enum E12583
 11099 ;; Registers used:
 11100 ;;		wreg, cstack
 11101 ;; Tracked objects:
 11102 ;;		On entry : 0/0
 11103 ;;		On exit  : 0/0
 11104 ;;		Unchanged: 0/0
 11105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11110 ;;Total ram usage:        0 bytes
 11111 ;; Hardware stack levels used:    1
 11112 ;; Hardware stack levels required when called:    1
 11113 ;; This function calls:
 11114 ;;		_I2C_MasterSendNack
 11115 ;; This function is called by:
 11116 ;;		_I2C_DO_RX
 11117 ;;		_I2C_MasterFsm
 11118 ;; This function uses a non-reentrant model
 11119 ;;
 11120                           
 11121                           	psect	text52
 11122  003A84                     __ptext52:
 11123                           	callstack 0
 11124  003A84                     _I2C_DO_RX_NACK_RESTART:
 11125                           	callstack 18
 11126  003A84                     
 11127                           ;mcc_generated_files/i2c_master.c: 491:     I2C_MasterSendNack();
 11128  003A84  EC68  F01D         	call	_I2C_MasterSendNack	;wreg free
 11129  003A88                     
 11130                           ;mcc_generated_files/i2c_master.c: 492:     return I2C_SEND_RESTART;
 11131  003A88  0E09               	movlw	9
 11132  003A8A  0012               	return		;funcret
 11133  003A8C                     __end_of_I2C_DO_RX_NACK_RESTART:
 11134                           	callstack 0
 11135                           
 11136 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
 11137 ;; Defined at:
 11138 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
 11139 ;; Parameters:    Size  Location     Type
 11140 ;;		None
 11141 ;; Auto vars:     Size  Location     Type
 11142 ;;		None
 11143 ;; Return value:  Size  Location     Type
 11144 ;;                  1    wreg      enum E12583
 11145 ;; Registers used:
 11146 ;;		wreg, cstack
 11147 ;; Tracked objects:
 11148 ;;		On entry : 0/0
 11149 ;;		On exit  : 0/0
 11150 ;;		Unchanged: 0/0
 11151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11156 ;;Total ram usage:        0 bytes
 11157 ;; Hardware stack levels used:    1
 11158 ;; Hardware stack levels required when called:    1
 11159 ;; This function calls:
 11160 ;;		_I2C_MasterSendNack
 11161 ;; This function is called by:
 11162 ;;		_I2C_DO_RX
 11163 ;;		_I2C_MasterFsm
 11164 ;; This function uses a non-reentrant model
 11165 ;;
 11166                           
 11167                           	psect	text53
 11168  003A8C                     __ptext53:
 11169                           	callstack 0
 11170  003A8C                     _I2C_DO_RX_NACK_STOP:
 11171                           	callstack 18
 11172  003A8C                     
 11173                           ;mcc_generated_files/i2c_master.c: 485:     I2C_MasterSendNack();
 11174  003A8C  EC68  F01D         	call	_I2C_MasterSendNack	;wreg free
 11175  003A90                     
 11176                           ;mcc_generated_files/i2c_master.c: 486:     return I2C_SEND_STOP;
 11177  003A90  0E0A               	movlw	10
 11178  003A92  0012               	return		;funcret
 11179  003A94                     __end_of_I2C_DO_RX_NACK_STOP:
 11180                           	callstack 0
 11181                           
 11182 ;; *************** function _I2C_DO_RX_ACK *****************
 11183 ;; Defined at:
 11184 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
 11185 ;; Parameters:    Size  Location     Type
 11186 ;;		None
 11187 ;; Auto vars:     Size  Location     Type
 11188 ;;		None
 11189 ;; Return value:  Size  Location     Type
 11190 ;;                  1    wreg      enum E12583
 11191 ;; Registers used:
 11192 ;;		wreg, cstack
 11193 ;; Tracked objects:
 11194 ;;		On entry : 0/0
 11195 ;;		On exit  : 0/0
 11196 ;;		Unchanged: 0/0
 11197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11202 ;;Total ram usage:        0 bytes
 11203 ;; Hardware stack levels used:    1
 11204 ;; Hardware stack levels required when called:    1
 11205 ;; This function calls:
 11206 ;;		_I2C_MasterSendAck
 11207 ;; This function is called by:
 11208 ;;		_I2C_MasterFsm
 11209 ;; This function uses a non-reentrant model
 11210 ;;
 11211                           
 11212                           	psect	text54
 11213  003A94                     __ptext54:
 11214                           	callstack 0
 11215  003A94                     _I2C_DO_RX_ACK:
 11216                           	callstack 18
 11217  003A94                     
 11218                           ;mcc_generated_files/i2c_master.c: 478:     I2C_MasterSendAck();
 11219  003A94  EC65  F01D         	call	_I2C_MasterSendAck	;wreg free
 11220  003A98                     
 11221                           ;mcc_generated_files/i2c_master.c: 479:     return I2C_RCEN;
 11222  003A98  0E05               	movlw	5
 11223  003A9A  0012               	return		;funcret
 11224  003A9C                     __end_of_I2C_DO_RX_ACK:
 11225                           	callstack 0
 11226                           
 11227 ;; *************** function _I2C_DO_SEND_STOP *****************
 11228 ;; Defined at:
 11229 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
 11230 ;; Parameters:    Size  Location     Type
 11231 ;;		None
 11232 ;; Auto vars:     Size  Location     Type
 11233 ;;		None
 11234 ;; Return value:  Size  Location     Type
 11235 ;;                  1    wreg      enum E12583
 11236 ;; Registers used:
 11237 ;;		wreg, cstack
 11238 ;; Tracked objects:
 11239 ;;		On entry : 0/0
 11240 ;;		On exit  : 0/0
 11241 ;;		Unchanged: 0/0
 11242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11247 ;;Total ram usage:        0 bytes
 11248 ;; Hardware stack levels used:    1
 11249 ;; Hardware stack levels required when called:    1
 11250 ;; This function calls:
 11251 ;;		_I2C_MasterStop
 11252 ;; This function is called by:
 11253 ;;		_I2C_DO_TX
 11254 ;;		_I2C_DO_TX_EMPTY
 11255 ;;		_I2C_DO_ADDRESS_NACK
 11256 ;;		_I2C_MasterFsm
 11257 ;; This function uses a non-reentrant model
 11258 ;;
 11259                           
 11260                           	psect	text55
 11261  003A9C                     __ptext55:
 11262                           	callstack 0
 11263  003A9C                     _I2C_DO_SEND_STOP:
 11264                           	callstack 17
 11265  003A9C                     
 11266                           ;mcc_generated_files/i2c_master.c: 472:     I2C_MasterStop();
 11267  003A9C  EC79  F01D         	call	_I2C_MasterStop	;wreg free
 11268  003AA0                     
 11269                           ;mcc_generated_files/i2c_master.c: 473:     return I2C_IDLE;
 11270  003AA0  0E00               	movlw	0
 11271  003AA2  0012               	return		;funcret
 11272  003AA4                     __end_of_I2C_DO_SEND_STOP:
 11273                           	callstack 0
 11274                           
 11275 ;; *************** function _I2C_DO_SEND_RESTART *****************
 11276 ;; Defined at:
 11277 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
 11278 ;; Parameters:    Size  Location     Type
 11279 ;;		None
 11280 ;; Auto vars:     Size  Location     Type
 11281 ;;		None
 11282 ;; Return value:  Size  Location     Type
 11283 ;;                  1    wreg      enum E12583
 11284 ;; Registers used:
 11285 ;;		wreg, cstack
 11286 ;; Tracked objects:
 11287 ;;		On entry : 0/0
 11288 ;;		On exit  : 0/0
 11289 ;;		Unchanged: 0/0
 11290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11295 ;;Total ram usage:        0 bytes
 11296 ;; Hardware stack levels used:    1
 11297 ;; Hardware stack levels required when called:    1
 11298 ;; This function calls:
 11299 ;;		_I2C_MasterEnableRestart
 11300 ;; This function is called by:
 11301 ;;		_I2C_DO_TX_EMPTY
 11302 ;;		_I2C_DO_ADDRESS_NACK
 11303 ;;		_I2C_MasterFsm
 11304 ;; This function uses a non-reentrant model
 11305 ;;
 11306                           
 11307                           	psect	text56
 11308  003AA4                     __ptext56:
 11309                           	callstack 0
 11310  003AA4                     _I2C_DO_SEND_RESTART:
 11311                           	callstack 17
 11312  003AA4                     
 11313                           ;mcc_generated_files/i2c_master.c: 466:     I2C_MasterEnableRestart();
 11314  003AA4  EC7B  F01D         	call	_I2C_MasterEnableRestart	;wreg free
 11315  003AA8                     
 11316                           ;mcc_generated_files/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
 11317  003AA8  0E01               	movlw	1
 11318  003AAA  0012               	return		;funcret
 11319  003AAC                     __end_of_I2C_DO_SEND_RESTART:
 11320                           	callstack 0
 11321                           
 11322 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
 11323 ;; Defined at:
 11324 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
 11325 ;; Parameters:    Size  Location     Type
 11326 ;;		None
 11327 ;; Auto vars:     Size  Location     Type
 11328 ;;		None
 11329 ;; Return value:  Size  Location     Type
 11330 ;;                  1    wreg      enum E12583
 11331 ;; Registers used:
 11332 ;;		wreg, cstack
 11333 ;; Tracked objects:
 11334 ;;		On entry : 0/0
 11335 ;;		On exit  : 0/0
 11336 ;;		Unchanged: 0/0
 11337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11342 ;;Total ram usage:        0 bytes
 11343 ;; Hardware stack levels used:    1
 11344 ;; Hardware stack levels required when called:    1
 11345 ;; This function calls:
 11346 ;;		_I2C_MasterEnableRestart
 11347 ;; This function is called by:
 11348 ;;		_I2C_DO_TX
 11349 ;;		_I2C_MasterFsm
 11350 ;; This function uses a non-reentrant model
 11351 ;;
 11352                           
 11353                           	psect	text57
 11354  003AAC                     __ptext57:
 11355                           	callstack 0
 11356  003AAC                     _I2C_DO_SEND_RESTART_WRITE:
 11357                           	callstack 17
 11358  003AAC                     
 11359                           ;mcc_generated_files/i2c_master.c: 459:     I2C_MasterEnableRestart();
 11360  003AAC  EC7B  F01D         	call	_I2C_MasterEnableRestart	;wreg free
 11361  003AB0                     
 11362                           ;mcc_generated_files/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
 11363  003AB0  0E02               	movlw	2
 11364  003AB2  0012               	return		;funcret
 11365  003AB4                     __end_of_I2C_DO_SEND_RESTART_WRITE:
 11366                           	callstack 0
 11367                           
 11368 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
 11369 ;; Defined at:
 11370 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
 11371 ;; Parameters:    Size  Location     Type
 11372 ;;		None
 11373 ;; Auto vars:     Size  Location     Type
 11374 ;;		None
 11375 ;; Return value:  Size  Location     Type
 11376 ;;                  1    wreg      enum E12583
 11377 ;; Registers used:
 11378 ;;		wreg, cstack
 11379 ;; Tracked objects:
 11380 ;;		On entry : 0/0
 11381 ;;		On exit  : 0/0
 11382 ;;		Unchanged: 0/0
 11383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11388 ;;Total ram usage:        0 bytes
 11389 ;; Hardware stack levels used:    1
 11390 ;; Hardware stack levels required when called:    1
 11391 ;; This function calls:
 11392 ;;		_I2C_MasterEnableRestart
 11393 ;; This function is called by:
 11394 ;;		_I2C_DO_TX
 11395 ;;		_I2C_MasterFsm
 11396 ;; This function uses a non-reentrant model
 11397 ;;
 11398                           
 11399                           	psect	text58
 11400  003AB4                     __ptext58:
 11401                           	callstack 0
 11402  003AB4                     _I2C_DO_SEND_RESTART_READ:
 11403                           	callstack 17
 11404  003AB4                     
 11405                           ;mcc_generated_files/i2c_master.c: 453:     I2C_MasterEnableRestart();
 11406  003AB4  EC7B  F01D         	call	_I2C_MasterEnableRestart	;wreg free
 11407  003AB8                     
 11408                           ;mcc_generated_files/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
 11409  003AB8  0E01               	movlw	1
 11410  003ABA  0012               	return		;funcret
 11411  003ABC                     __end_of_I2C_DO_SEND_RESTART_READ:
 11412                           	callstack 0
 11413                           
 11414 ;; *************** function _I2C_DO_RCEN *****************
 11415 ;; Defined at:
 11416 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
 11417 ;; Parameters:    Size  Location     Type
 11418 ;;		None
 11419 ;; Auto vars:     Size  Location     Type
 11420 ;;		None
 11421 ;; Return value:  Size  Location     Type
 11422 ;;                  1    wreg      enum E12583
 11423 ;; Registers used:
 11424 ;;		wreg, cstack
 11425 ;; Tracked objects:
 11426 ;;		On entry : 0/0
 11427 ;;		On exit  : 0/0
 11428 ;;		Unchanged: 0/0
 11429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11434 ;;Total ram usage:        0 bytes
 11435 ;; Hardware stack levels used:    1
 11436 ;; Hardware stack levels required when called:    1
 11437 ;; This function calls:
 11438 ;;		_I2C_MasterStartRx
 11439 ;; This function is called by:
 11440 ;;		_I2C_MasterFsm
 11441 ;; This function uses a non-reentrant model
 11442 ;;
 11443                           
 11444                           	psect	text59
 11445  003A4A                     __ptext59:
 11446                           	callstack 0
 11447  003A4A                     _I2C_DO_RCEN:
 11448                           	callstack 18
 11449  003A4A                     
 11450                           ;mcc_generated_files/i2c_master.c: 406:     I2C_Status.addressNackCheck = 0;
 11451  003A4A  0101               	movlb	1	; () banked
 11452  003A4C  9173               	bcf	(_I2C_Status+35)& (0+255),0,b
 11453  003A4E                     
 11454                           ; BSR set to: 1
 11455                           ;mcc_generated_files/i2c_master.c: 407:     I2C_MasterStartRx();
 11456  003A4E  EC73  F01D         	call	_I2C_MasterStartRx	;wreg free
 11457  003A52                     
 11458                           ;mcc_generated_files/i2c_master.c: 408:     return I2C_RX;
 11459  003A52  0E04               	movlw	4
 11460  003A54  0012               	return		;funcret
 11461  003A56                     __end_of_I2C_DO_RCEN:
 11462                           	callstack 0
 11463                           
 11464 ;; *************** function _I2C_DO_RX *****************
 11465 ;; Defined at:
 11466 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
 11467 ;; Parameters:    Size  Location     Type
 11468 ;;		None
 11469 ;; Auto vars:     Size  Location     Type
 11470 ;;		None
 11471 ;; Return value:  Size  Location     Type
 11472 ;;                  1    wreg      enum E12583
 11473 ;; Registers used:
 11474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11475 ;; Tracked objects:
 11476 ;;		On entry : 0/0
 11477 ;;		On exit  : 0/0
 11478 ;;		Unchanged: 0/0
 11479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11482 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11483 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11484 ;;Total ram usage:        2 bytes
 11485 ;; Hardware stack levels used:    1
 11486 ;; Hardware stack levels required when called:    3
 11487 ;; This function calls:
 11488 ;;		Absolute function
 11489 ;;		_I2C_CallbackReturnReset
 11490 ;;		_I2C_CallbackReturnStop
 11491 ;;		_I2C_DO_RX_NACK_RESTART
 11492 ;;		_I2C_DO_RX_NACK_STOP
 11493 ;;		_I2C_MasterGetRxData
 11494 ;;		_I2C_MasterSendAck
 11495 ;;		_rd1RegCompleteHandler
 11496 ;;		_rd1RegCompleteHandler@i2c_master_example$F148
 11497 ;;		_rd2RegCompleteHandler
 11498 ;;		_rd2RegCompleteHandler@i2c_master_example$F159
 11499 ;;		_rdBlkRegCompleteHandler
 11500 ;;		_rdBlkRegCompleteHandler@i2c_master_example$F182
 11501 ;;		_wr1RegCompleteHandler
 11502 ;;		_wr1RegCompleteHandler@i2c_master_example$F165
 11503 ;;		_wr2RegCompleteHandler
 11504 ;;		_wr2RegCompleteHandler@i2c_master_example$F171
 11505 ;; This function is called by:
 11506 ;;		_I2C_MasterFsm
 11507 ;; This function uses a non-reentrant model
 11508 ;;
 11509                           
 11510                           	psect	text60
 11511  003022                     __ptext60:
 11512                           	callstack 0
 11513  003022                     _I2C_DO_RX:
 11514                           	callstack 16
 11515  003022                     
 11516                           ;mcc_generated_files/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 11517  003022  EC71  F01D         	call	_I2C_MasterGetRxData	;wreg free
 11518  003026  C16D  FFD9         	movff	_I2C_Status+29,fsr2l
 11519  00302A  C16E  FFDA         	movff	_I2C_Status+30,fsr2h
 11520  00302E  6EDF               	movwf	indf2,c
 11521  003030  0101               	movlb	1	; () banked
 11522  003032  4B6D               	infsnz	(_I2C_Status+29)& (0+255),f,b
 11523  003034  2B6E               	incf	(_I2C_Status+30)& (0+255),f,b
 11524  003036                     
 11525                           ; BSR set to: 1
 11526                           ;mcc_generated_files/i2c_master.c: 383:     if(--I2C_Status.data_length)
 11527  003036  076F               	decf	(_I2C_Status+31)& (0+255),f,b
 11528  003038  A0D8               	btfss	status,0,c
 11529  00303A  0770               	decf	(_I2C_Status+32)& (0+255),f,b
 11530  00303C  516F               	movf	(_I2C_Status+31)& (0+255),w,b
 11531  00303E  1170               	iorwf	(_I2C_Status+32)& (0+255),w,b
 11532  003040  B4D8               	btfsc	status,2,c
 11533  003042  EF25  F018         	goto	i2u536_41
 11534  003046  EF27  F018         	goto	i2u536_40
 11535  00304A                     i2u536_41:
 11536  00304A  EF2C  F018         	goto	i2l492
 11537  00304E                     i2u536_40:
 11538  00304E                     
 11539                           ; BSR set to: 1
 11540                           ;mcc_generated_files/i2c_master.c: 384:     {;mcc_generated_files/i2c_master.c: 385:    
      +                               I2C_MasterSendAck();
 11541  00304E  EC65  F01D         	call	_I2C_MasterSendAck	;wreg free
 11542  003052                     
 11543                           ;mcc_generated_files/i2c_master.c: 386:         return I2C_RCEN;
 11544  003052  0E05               	movlw	5
 11545  003054  EF63  F018         	goto	i2l493
 11546  003058                     i2l492:
 11547                           
 11548                           ; BSR set to: 1
 11549                           ;mcc_generated_files/i2c_master.c: 389:     {;mcc_generated_files/i2c_master.c: 390:    
      +                               I2C_Status.bufferFree = 1;
 11550  003058  8773               	bsf	(_I2C_Status+35)& (0+255),3,b
 11551                           
 11552                           ;mcc_generated_files/i2c_master.c: 391:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 11553  00305A  EF37  F018         	goto	i2l5710
 11554  00305E                     i2l5700:
 11555                           
 11556                           ;mcc_generated_files/i2c_master.c: 395:                 return I2C_DO_RX_NACK_RESTART();
 11557  00305E  EC42  F01D         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
 11558  003062  EF63  F018         	goto	i2l493
 11559  003066                     i2l5704:
 11560                           
 11561                           ;mcc_generated_files/i2c_master.c: 399:                 return I2C_DO_RX_NACK_STOP();
 11562  003066  EC46  F01D         	call	_I2C_DO_RX_NACK_STOP	;wreg free
 11563  00306A  EF63  F018         	goto	i2l493
 11564  00306E                     i2l5710:
 11565                           
 11566                           ; BSR set to: 1
 11567  00306E  C15C  F00A         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 11568  003072  C15D  F00B         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 11569  003076  D802               	call	i2u537_48
 11570  003078  EF47  F018         	goto	i2u537_49
 11571  00307C                     i2u537_48:
 11572  00307C  0005               	push	
 11573  00307E  6EFA               	movwf	pclath,c
 11574  003080  5150               	movf	_I2C_Status& (0+255),w,b
 11575  003082  6EFD               	movwf	tosl,c
 11576  003084  5151               	movf	(_I2C_Status+1)& (0+255),w,b
 11577  003086  6EFE               	movwf	tosh,c
 11578  003088  6AFF               	clrf	tosu,c
 11579  00308A  50FA               	movf	pclath,w,c
 11580  00308C  0012               	return		;indir
 11581  00308E                     i2u537_49:
 11582  00308E  6E0C               	movwf	??_I2C_DO_RX^0,c
 11583  003090  6A0D               	clrf	(??_I2C_DO_RX+1)^0,c
 11584                           
 11585                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11586                           ; Switch size 1, requested type "simple"
 11587                           ; Number of cases is 1, Range of values is 0 to 0
 11588                           ; switch strategies available:
 11589                           ; Name         Instructions Cycles
 11590                           ; simple_byte            4     3 (average)
 11591                           ;	Chosen strategy is simple_byte
 11592  003092  500D               	movf	(??_I2C_DO_RX+1)^0,w,c
 11593  003094  0A00               	xorlw	0	; case 0
 11594  003096  B4D8               	btfsc	status,2,c
 11595  003098  EF50  F018         	goto	i2l8266
 11596  00309C  EF33  F018         	goto	i2l5704
 11597  0030A0                     i2l8266:
 11598                           
 11599                           ; Switch size 1, requested type "simple"
 11600                           ; Number of cases is 4, Range of values is 0 to 3
 11601                           ; switch strategies available:
 11602                           ; Name         Instructions Cycles
 11603                           ; simple_byte           13     7 (average)
 11604                           ;	Chosen strategy is simple_byte
 11605  0030A0  500C               	movf	??_I2C_DO_RX^0,w,c
 11606  0030A2  0A00               	xorlw	0	; case 0
 11607  0030A4  B4D8               	btfsc	status,2,c
 11608  0030A6  EF33  F018         	goto	i2l5704
 11609  0030AA  0A01               	xorlw	1	; case 1
 11610  0030AC  B4D8               	btfsc	status,2,c
 11611  0030AE  EF2F  F018         	goto	i2l5700
 11612  0030B2  0A03               	xorlw	3	; case 2
 11613  0030B4  B4D8               	btfsc	status,2,c
 11614  0030B6  EF2F  F018         	goto	i2l5700
 11615  0030BA  0A01               	xorlw	1	; case 3
 11616  0030BC  B4D8               	btfsc	status,2,c
 11617  0030BE  EF33  F018         	goto	i2l5704
 11618  0030C2  EF33  F018         	goto	i2l5704
 11619  0030C6                     i2l493:
 11620  0030C6  0012               	return		;funcret
 11621  0030C8                     __end_of_I2C_DO_RX:
 11622                           	callstack 0
 11623                           
 11624 ;; *************** function _I2C_DO_TX *****************
 11625 ;; Defined at:
 11626 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
 11627 ;; Parameters:    Size  Location     Type
 11628 ;;		None
 11629 ;; Auto vars:     Size  Location     Type
 11630 ;;		None
 11631 ;; Return value:  Size  Location     Type
 11632 ;;                  1    wreg      enum E12583
 11633 ;; Registers used:
 11634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11635 ;; Tracked objects:
 11636 ;;		On entry : 0/0
 11637 ;;		On exit  : 0/0
 11638 ;;		Unchanged: 0/0
 11639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11642 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11643 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11644 ;;Total ram usage:        2 bytes
 11645 ;; Hardware stack levels used:    1
 11646 ;; Hardware stack levels required when called:    3
 11647 ;; This function calls:
 11648 ;;		Absolute function
 11649 ;;		_I2C_CallbackReturnReset
 11650 ;;		_I2C_CallbackReturnStop
 11651 ;;		_I2C_DO_SEND_RESTART_READ
 11652 ;;		_I2C_DO_SEND_RESTART_WRITE
 11653 ;;		_I2C_DO_SEND_STOP
 11654 ;;		_I2C_MasterIsNack
 11655 ;;		_I2C_MasterSendTxData
 11656 ;;		_rd1RegCompleteHandler
 11657 ;;		_rd1RegCompleteHandler@i2c_master_example$F148
 11658 ;;		_rd2RegCompleteHandler
 11659 ;;		_rd2RegCompleteHandler@i2c_master_example$F159
 11660 ;;		_rdBlkRegCompleteHandler
 11661 ;;		_rdBlkRegCompleteHandler@i2c_master_example$F182
 11662 ;;		_wr1RegCompleteHandler
 11663 ;;		_wr1RegCompleteHandler@i2c_master_example$F165
 11664 ;;		_wr2RegCompleteHandler
 11665 ;;		_wr2RegCompleteHandler@i2c_master_example$F171
 11666 ;; This function is called by:
 11667 ;;		_I2C_MasterFsm
 11668 ;; This function uses a non-reentrant model
 11669 ;;
 11670                           
 11671                           	psect	text61
 11672  002E04                     __ptext61:
 11673                           	callstack 0
 11674  002E04                     _I2C_DO_TX:
 11675                           	callstack 16
 11676  002E04                     
 11677                           ;mcc_generated_files/i2c_master.c: 358:     if(I2C_MasterIsNack())
 11678  002E04  ECEC  F01C         	call	_I2C_MasterIsNack	;wreg free
 11679  002E08  0900               	iorlw	0
 11680  002E0A  B4D8               	btfsc	status,2,c
 11681  002E0C  EF0A  F017         	goto	i2u533_41
 11682  002E10  EF0C  F017         	goto	i2u533_40
 11683  002E14                     i2u533_41:
 11684  002E14  EF47  F017         	goto	i2l476
 11685  002E18                     i2u533_40:
 11686  002E18  EF1A  F017         	goto	i2l5670
 11687  002E1C                     i2l5656:
 11688                           
 11689                           ;mcc_generated_files/i2c_master.c: 363:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 11690  002E1C  EC5A  F01D         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
 11691  002E20  EF63  F017         	goto	i2l479
 11692  002E24                     i2l5660:
 11693                           
 11694                           ;mcc_generated_files/i2c_master.c: 365:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 11695  002E24  EC56  F01D         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
 11696  002E28  EF63  F017         	goto	i2l479
 11697  002E2C                     i2l5664:
 11698                           
 11699                           ;mcc_generated_files/i2c_master.c: 369:                 return I2C_DO_SEND_STOP();
 11700  002E2C  EC4E  F01D         	call	_I2C_DO_SEND_STOP	;wreg free
 11701  002E30  EF63  F017         	goto	i2l479
 11702  002E34                     i2l5670:
 11703  002E34  C162  F00A         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
 11704  002E38  C163  F00B         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
 11705  002E3C  D802               	call	i2u534_48
 11706  002E3E  EF2B  F017         	goto	i2u534_49
 11707  002E42                     i2u534_48:
 11708  002E42  0005               	push	
 11709  002E44  6EFA               	movwf	pclath,c
 11710  002E46  0101               	movlb	1	; () banked
 11711  002E48  5156               	movf	(_I2C_Status+6)& (0+255),w,b
 11712  002E4A  6EFD               	movwf	tosl,c
 11713  002E4C  5157               	movf	(_I2C_Status+7)& (0+255),w,b
 11714  002E4E  6EFE               	movwf	tosh,c
 11715  002E50  6AFF               	clrf	tosu,c
 11716  002E52  50FA               	movf	pclath,w,c
 11717  002E54  0012               	return		;indir
 11718  002E56                     i2u534_49:
 11719  002E56  6E0C               	movwf	??_I2C_DO_TX^0,c
 11720  002E58  6A0D               	clrf	(??_I2C_DO_TX+1)^0,c
 11721                           
 11722                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11723                           ; Switch size 1, requested type "simple"
 11724                           ; Number of cases is 1, Range of values is 0 to 0
 11725                           ; switch strategies available:
 11726                           ; Name         Instructions Cycles
 11727                           ; simple_byte            4     3 (average)
 11728                           ;	Chosen strategy is simple_byte
 11729  002E5A  500D               	movf	(??_I2C_DO_TX+1)^0,w,c
 11730  002E5C  0A00               	xorlw	0	; case 0
 11731  002E5E  B4D8               	btfsc	status,2,c
 11732  002E60  EF34  F017         	goto	i2l8268
 11733  002E64  EF16  F017         	goto	i2l5664
 11734  002E68                     i2l8268:
 11735                           
 11736                           ; Switch size 1, requested type "simple"
 11737                           ; Number of cases is 4, Range of values is 0 to 3
 11738                           ; switch strategies available:
 11739                           ; Name         Instructions Cycles
 11740                           ; simple_byte           13     7 (average)
 11741                           ;	Chosen strategy is simple_byte
 11742  002E68  500C               	movf	??_I2C_DO_TX^0,w,c
 11743  002E6A  0A00               	xorlw	0	; case 0
 11744  002E6C  B4D8               	btfsc	status,2,c
 11745  002E6E  EF16  F017         	goto	i2l5664
 11746  002E72  0A01               	xorlw	1	; case 1
 11747  002E74  B4D8               	btfsc	status,2,c
 11748  002E76  EF0E  F017         	goto	i2l5656
 11749  002E7A  0A03               	xorlw	3	; case 2
 11750  002E7C  B4D8               	btfsc	status,2,c
 11751  002E7E  EF12  F017         	goto	i2l5660
 11752  002E82  0A01               	xorlw	1	; case 3
 11753  002E84  B4D8               	btfsc	status,2,c
 11754  002E86  EF16  F017         	goto	i2l5664
 11755  002E8A  EF16  F017         	goto	i2l5664
 11756  002E8E                     i2l476:
 11757                           
 11758                           ;mcc_generated_files/i2c_master.c: 373:     {;mcc_generated_files/i2c_master.c: 374:    
      +                               I2C_Status.addressNackCheck = 0;
 11759  002E8E  0101               	movlb	1	; () banked
 11760  002E90  9173               	bcf	(_I2C_Status+35)& (0+255),0,b
 11761  002E92                     
 11762                           ; BSR set to: 1
 11763                           ;mcc_generated_files/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 11764  002E92  C16D  FFD9         	movff	_I2C_Status+29,fsr2l
 11765  002E96  C16E  FFDA         	movff	_I2C_Status+30,fsr2h
 11766  002E9A  4B6D               	infsnz	(_I2C_Status+29)& (0+255),f,b
 11767  002E9C  2B6E               	incf	(_I2C_Status+30)& (0+255),f,b
 11768  002E9E  50DF               	movf	indf2,w,c
 11769  002EA0  EC5E  F01D         	call	_I2C_MasterSendTxData
 11770  002EA4                     
 11771                           ;mcc_generated_files/i2c_master.c: 376:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 11772  002EA4  0101               	movlb	1	; () banked
 11773  002EA6  076F               	decf	(_I2C_Status+31)& (0+255),f,b
 11774  002EA8  A0D8               	btfss	status,0,c
 11775  002EAA  0770               	decf	(_I2C_Status+32)& (0+255),f,b
 11776  002EAC  516F               	movf	(_I2C_Status+31)& (0+255),w,b
 11777  002EAE  1170               	iorwf	(_I2C_Status+32)& (0+255),w,b
 11778  002EB0  A4D8               	btfss	status,2,c
 11779  002EB2  EF5D  F017         	goto	i2u535_41
 11780  002EB6  EF5F  F017         	goto	i2u535_40
 11781  002EBA                     i2u535_41:
 11782  002EBA  EF62  F017         	goto	i2l5678
 11783  002EBE                     i2u535_40:
 11784  002EBE                     
 11785                           ; BSR set to: 1
 11786  002EBE  0E06               	movlw	6
 11787  002EC0  EF63  F017         	goto	i2l479
 11788  002EC4                     i2l5678:
 11789                           
 11790                           ; BSR set to: 1
 11791  002EC4  0E03               	movlw	3
 11792  002EC6                     i2l479:
 11793  002EC6  0012               	return		;funcret
 11794  002EC8                     __end_of_I2C_DO_TX:
 11795                           	callstack 0
 11796                           
 11797 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 11798 ;; Defined at:
 11799 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
 11800 ;; Parameters:    Size  Location     Type
 11801 ;;		None
 11802 ;; Auto vars:     Size  Location     Type
 11803 ;;		None
 11804 ;; Return value:  Size  Location     Type
 11805 ;;                  1    wreg      enum E12583
 11806 ;; Registers used:
 11807 ;;		wreg, status,2, status,0, cstack
 11808 ;; Tracked objects:
 11809 ;;		On entry : 0/0
 11810 ;;		On exit  : 0/0
 11811 ;;		Unchanged: 0/0
 11812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11817 ;;Total ram usage:        0 bytes
 11818 ;; Hardware stack levels used:    1
 11819 ;; Hardware stack levels required when called:    1
 11820 ;; This function calls:
 11821 ;;		_I2C_MasterSendTxData
 11822 ;; This function is called by:
 11823 ;;		_I2C_MasterFsm
 11824 ;; This function uses a non-reentrant model
 11825 ;;
 11826                           
 11827                           	psect	text62
 11828  003A10                     __ptext62:
 11829                           	callstack 0
 11830  003A10                     _I2C_DO_SEND_ADR_WRITE:
 11831                           	callstack 18
 11832  003A10                     
 11833                           ;mcc_generated_files/i2c_master.c: 351:     I2C_Status.addressNackCheck = 1;
 11834  003A10  0101               	movlb	1	; () banked
 11835  003A12  8173               	bsf	(_I2C_Status+35)& (0+255),0,b
 11836  003A14                     
 11837                           ; BSR set to: 1
 11838                           ;mcc_generated_files/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
 11839  003A14  516C               	movf	(_I2C_Status+28)& (0+255),w,b
 11840  003A16  256C               	addwf	(_I2C_Status+28)& (0+255),w,b
 11841  003A18  EC5E  F01D         	call	_I2C_MasterSendTxData
 11842  003A1C                     
 11843                           ;mcc_generated_files/i2c_master.c: 353:     return I2C_TX;
 11844  003A1C  0E03               	movlw	3
 11845  003A1E  0012               	return		;funcret
 11846  003A20                     __end_of_I2C_DO_SEND_ADR_WRITE:
 11847                           	callstack 0
 11848                           
 11849 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 11850 ;; Defined at:
 11851 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
 11852 ;; Parameters:    Size  Location     Type
 11853 ;;		None
 11854 ;; Auto vars:     Size  Location     Type
 11855 ;;		None
 11856 ;; Return value:  Size  Location     Type
 11857 ;;                  1    wreg      enum E12583
 11858 ;; Registers used:
 11859 ;;		wreg, status,0, cstack
 11860 ;; Tracked objects:
 11861 ;;		On entry : 0/0
 11862 ;;		On exit  : 0/0
 11863 ;;		Unchanged: 0/0
 11864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11869 ;;Total ram usage:        0 bytes
 11870 ;; Hardware stack levels used:    1
 11871 ;; Hardware stack levels required when called:    1
 11872 ;; This function calls:
 11873 ;;		_I2C_MasterSendTxData
 11874 ;; This function is called by:
 11875 ;;		_I2C_MasterFsm
 11876 ;; This function uses a non-reentrant model
 11877 ;;
 11878                           
 11879                           	psect	text63
 11880  003A20                     __ptext63:
 11881                           	callstack 0
 11882  003A20                     _I2C_DO_SEND_ADR_READ:
 11883                           	callstack 18
 11884  003A20                     
 11885                           ;mcc_generated_files/i2c_master.c: 344:     I2C_Status.addressNackCheck = 1;
 11886  003A20  0101               	movlb	1	; () banked
 11887  003A22  8173               	bsf	(_I2C_Status+35)& (0+255),0,b
 11888  003A24                     
 11889                           ; BSR set to: 1
 11890                           ;mcc_generated_files/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
 11891  003A24  80D8               	bsf	status,0,c
 11892  003A26  356C               	rlcf	(_I2C_Status+28)& (0+255),w,b
 11893  003A28  EC5E  F01D         	call	_I2C_MasterSendTxData
 11894  003A2C                     
 11895                           ;mcc_generated_files/i2c_master.c: 346:     return I2C_RCEN;
 11896  003A2C  0E05               	movlw	5
 11897  003A2E  0012               	return		;funcret
 11898  003A30                     __end_of_I2C_DO_SEND_ADR_READ:
 11899                           	callstack 0
 11900                           
 11901 ;; *************** function _I2C_DO_IDLE *****************
 11902 ;; Defined at:
 11903 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
 11904 ;; Parameters:    Size  Location     Type
 11905 ;;		None
 11906 ;; Auto vars:     Size  Location     Type
 11907 ;;		None
 11908 ;; Return value:  Size  Location     Type
 11909 ;;                  1    wreg      enum E12583
 11910 ;; Registers used:
 11911 ;;		wreg, status,2
 11912 ;; Tracked objects:
 11913 ;;		On entry : 0/0
 11914 ;;		On exit  : 0/0
 11915 ;;		Unchanged: 0/0
 11916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11921 ;;Total ram usage:        0 bytes
 11922 ;; Hardware stack levels used:    1
 11923 ;; This function calls:
 11924 ;;		Nothing
 11925 ;; This function is called by:
 11926 ;;		_I2C_MasterFsm
 11927 ;; This function uses a non-reentrant model
 11928 ;;
 11929                           
 11930                           	psect	text64
 11931  003A56                     __ptext64:
 11932                           	callstack 0
 11933  003A56                     _I2C_DO_IDLE:
 11934                           	callstack 19
 11935  003A56                     
 11936                           ;mcc_generated_files/i2c_master.c: 337:     I2C_Status.busy = 0;
 11937  003A56  0101               	movlb	1	; () banked
 11938  003A58  9373               	bcf	(_I2C_Status+35)& (0+255),1,b
 11939  003A5A                     
 11940                           ; BSR set to: 1
 11941                           ;mcc_generated_files/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
 11942  003A5A  0E00               	movlw	0
 11943  003A5C  6F72               	movwf	(_I2C_Status+34)& (0+255),b
 11944  003A5E                     
 11945                           ; BSR set to: 1
 11946                           ;mcc_generated_files/i2c_master.c: 339:     return I2C_RESET;
 11947  003A5E  0E0E               	movlw	14
 11948  003A60                     
 11949                           ; BSR set to: 1
 11950  003A60  0012               	return		;funcret
 11951  003A62                     __end_of_I2C_DO_IDLE:
 11952                           	callstack 0
 11953                           
 11954 ;; *************** function _I2C_DO_TX_EMPTY *****************
 11955 ;; Defined at:
 11956 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
 11957 ;; Parameters:    Size  Location     Type
 11958 ;;		None
 11959 ;; Auto vars:     Size  Location     Type
 11960 ;;		None
 11961 ;; Return value:  Size  Location     Type
 11962 ;;                  1    wreg      enum E12583
 11963 ;; Registers used:
 11964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11965 ;; Tracked objects:
 11966 ;;		On entry : 0/0
 11967 ;;		On exit  : 0/0
 11968 ;;		Unchanged: 0/0
 11969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11972 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11973 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11974 ;;Total ram usage:        2 bytes
 11975 ;; Hardware stack levels used:    1
 11976 ;; Hardware stack levels required when called:    3
 11977 ;; This function calls:
 11978 ;;		Absolute function
 11979 ;;		_I2C_CallbackReturnReset
 11980 ;;		_I2C_CallbackReturnStop
 11981 ;;		_I2C_DO_SEND_RESTART
 11982 ;;		_I2C_DO_SEND_STOP
 11983 ;;		_I2C_MasterSetIrq
 11984 ;;		_rd1RegCompleteHandler
 11985 ;;		_rd1RegCompleteHandler@i2c_master_example$F148
 11986 ;;		_rd2RegCompleteHandler
 11987 ;;		_rd2RegCompleteHandler@i2c_master_example$F159
 11988 ;;		_rdBlkRegCompleteHandler
 11989 ;;		_rdBlkRegCompleteHandler@i2c_master_example$F182
 11990 ;;		_wr1RegCompleteHandler
 11991 ;;		_wr1RegCompleteHandler@i2c_master_example$F165
 11992 ;;		_wr2RegCompleteHandler
 11993 ;;		_wr2RegCompleteHandler@i2c_master_example$F171
 11994 ;; This function is called by:
 11995 ;;		_I2C_MasterFsm
 11996 ;; This function uses a non-reentrant model
 11997 ;;
 11998                           
 11999                           	psect	text65
 12000  00316C                     __ptext65:
 12001                           	callstack 0
 12002  00316C                     _I2C_DO_TX_EMPTY:
 12003                           	callstack 16
 12004  00316C                     
 12005                           ;mcc_generated_files/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
 12006  00316C  0101               	movlb	1	; () banked
 12007  00316E  8773               	bsf	(_I2C_Status+35)& (0+255),3,b
 12008                           
 12009                           ;mcc_generated_files/i2c_master.c: 414:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 12010  003170  EFC7  F018         	goto	i2l5744
 12011  003174                     i2l5728:
 12012                           
 12013                           ;mcc_generated_files/i2c_master.c: 418:             return I2C_DO_SEND_RESTART();
 12014  003174  EC52  F01D         	call	_I2C_DO_SEND_RESTART	;wreg free
 12015  003178  EFF3  F018         	goto	i2l510
 12016  00317C                     i2l5732:
 12017                           
 12018                           ;mcc_generated_files/i2c_master.c: 420:             I2C_MasterSetIrq();
 12019  00317C  EC6F  F01D         	call	_I2C_MasterSetIrq	;wreg free
 12020  003180                     
 12021                           ;mcc_generated_files/i2c_master.c: 421:             return I2C_TX;
 12022  003180  0E03               	movlw	3
 12023  003182  EFF3  F018         	goto	i2l510
 12024  003186                     i2l5738:
 12025                           
 12026                           ;mcc_generated_files/i2c_master.c: 424:             return I2C_DO_SEND_STOP();
 12027  003186  EC4E  F01D         	call	_I2C_DO_SEND_STOP	;wreg free
 12028  00318A  EFF3  F018         	goto	i2l510
 12029  00318E                     i2l5744:
 12030                           
 12031                           ; BSR set to: 1
 12032  00318E  C15C  F00A         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 12033  003192  C15D  F00B         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 12034  003196  D802               	call	i2u538_48
 12035  003198  EFD7  F018         	goto	i2u538_49
 12036  00319C                     i2u538_48:
 12037  00319C  0005               	push	
 12038  00319E  6EFA               	movwf	pclath,c
 12039  0031A0  5150               	movf	_I2C_Status& (0+255),w,b
 12040  0031A2  6EFD               	movwf	tosl,c
 12041  0031A4  5151               	movf	(_I2C_Status+1)& (0+255),w,b
 12042  0031A6  6EFE               	movwf	tosh,c
 12043  0031A8  6AFF               	clrf	tosu,c
 12044  0031AA  50FA               	movf	pclath,w,c
 12045  0031AC  0012               	return		;indir
 12046  0031AE                     i2u538_49:
 12047  0031AE  6E0C               	movwf	??_I2C_DO_TX_EMPTY^0,c
 12048  0031B0  6A0D               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
 12049                           
 12050                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12051                           ; Switch size 1, requested type "simple"
 12052                           ; Number of cases is 1, Range of values is 0 to 0
 12053                           ; switch strategies available:
 12054                           ; Name         Instructions Cycles
 12055                           ; simple_byte            4     3 (average)
 12056                           ;	Chosen strategy is simple_byte
 12057  0031B2  500D               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
 12058  0031B4  0A00               	xorlw	0	; case 0
 12059  0031B6  B4D8               	btfsc	status,2,c
 12060  0031B8  EFE0  F018         	goto	i2l8270
 12061  0031BC  EFC3  F018         	goto	i2l5738
 12062  0031C0                     i2l8270:
 12063                           
 12064                           ; Switch size 1, requested type "simple"
 12065                           ; Number of cases is 4, Range of values is 0 to 3
 12066                           ; switch strategies available:
 12067                           ; Name         Instructions Cycles
 12068                           ; simple_byte           13     7 (average)
 12069                           ;	Chosen strategy is simple_byte
 12070  0031C0  500C               	movf	??_I2C_DO_TX_EMPTY^0,w,c
 12071  0031C2  0A00               	xorlw	0	; case 0
 12072  0031C4  B4D8               	btfsc	status,2,c
 12073  0031C6  EFC3  F018         	goto	i2l5738
 12074  0031CA  0A01               	xorlw	1	; case 1
 12075  0031CC  B4D8               	btfsc	status,2,c
 12076  0031CE  EFBA  F018         	goto	i2l5728
 12077  0031D2  0A03               	xorlw	3	; case 2
 12078  0031D4  B4D8               	btfsc	status,2,c
 12079  0031D6  EFBA  F018         	goto	i2l5728
 12080  0031DA  0A01               	xorlw	1	; case 3
 12081  0031DC  B4D8               	btfsc	status,2,c
 12082  0031DE  EFBE  F018         	goto	i2l5732
 12083  0031E2  EFC3  F018         	goto	i2l5738
 12084  0031E6                     i2l510:
 12085  0031E6  0012               	return		;funcret
 12086  0031E8                     __end_of_I2C_DO_TX_EMPTY:
 12087                           	callstack 0
 12088                           
 12089 ;; *************** function _I2C_MasterSetIrq *****************
 12090 ;; Defined at:
 12091 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
 12092 ;; Parameters:    Size  Location     Type
 12093 ;;		None
 12094 ;; Auto vars:     Size  Location     Type
 12095 ;;		None
 12096 ;; Return value:  Size  Location     Type
 12097 ;;                  1    wreg      void 
 12098 ;; Registers used:
 12099 ;;		None
 12100 ;; Tracked objects:
 12101 ;;		On entry : 0/0
 12102 ;;		On exit  : 0/0
 12103 ;;		Unchanged: 0/0
 12104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12109 ;;Total ram usage:        0 bytes
 12110 ;; Hardware stack levels used:    1
 12111 ;; This function calls:
 12112 ;;		Nothing
 12113 ;; This function is called by:
 12114 ;;		_I2C_DO_TX_EMPTY
 12115 ;; This function uses a non-reentrant model
 12116 ;;
 12117                           
 12118                           	psect	text66
 12119  003ADE                     __ptext66:
 12120                           	callstack 0
 12121  003ADE                     _I2C_MasterSetIrq:
 12122                           	callstack 18
 12123  003ADE                     
 12124                           ;mcc_generated_files/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
 12125  003ADE  869E               	bsf	158,3,c	;volatile
 12126  003AE0  0012               	return		;funcret
 12127  003AE2                     __end_of_I2C_MasterSetIrq:
 12128                           	callstack 0
 12129                           
 12130 ;; *************** function _I2C_MasterIsNack *****************
 12131 ;; Defined at:
 12132 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
 12133 ;; Parameters:    Size  Location     Type
 12134 ;;		None
 12135 ;; Auto vars:     Size  Location     Type
 12136 ;;		None
 12137 ;; Return value:  Size  Location     Type
 12138 ;;                  1    wreg      _Bool 
 12139 ;; Registers used:
 12140 ;;		wreg
 12141 ;; Tracked objects:
 12142 ;;		On entry : 0/0
 12143 ;;		On exit  : 0/0
 12144 ;;		Unchanged: 0/0
 12145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12150 ;;Total ram usage:        0 bytes
 12151 ;; Hardware stack levels used:    1
 12152 ;; This function calls:
 12153 ;;		Nothing
 12154 ;; This function is called by:
 12155 ;;		_I2C_MasterFsm
 12156 ;;		_I2C_DO_TX
 12157 ;; This function uses a non-reentrant model
 12158 ;;
 12159                           
 12160                           	psect	text67
 12161  0039D8                     __ptext67:
 12162                           	callstack 0
 12163  0039D8                     _I2C_MasterIsNack:
 12164                           	callstack 19
 12165  0039D8                     
 12166                           ;mcc_generated_files/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
 12167  0039D8  BCC5               	btfsc	197,6,c	;volatile
 12168  0039DA  EFF1  F01C         	goto	i2u465_41
 12169  0039DE  EFF4  F01C         	goto	i2u465_40
 12170  0039E2                     i2u465_41:
 12171  0039E2  0E01               	movlw	1
 12172  0039E4  EFF5  F01C         	goto	i2u465_46
 12173  0039E8                     i2u465_40:
 12174  0039E8  0E00               	movlw	0
 12175  0039EA                     i2u465_46:
 12176  0039EA  0012               	return		;funcret
 12177  0039EC                     __end_of_I2C_MasterIsNack:
 12178                           	callstack 0
 12179                           
 12180 ;; *************** function _I2C_MasterSendTxData *****************
 12181 ;; Defined at:
 12182 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
 12183 ;; Parameters:    Size  Location     Type
 12184 ;;  data            1    wreg     unsigned char 
 12185 ;; Auto vars:     Size  Location     Type
 12186 ;;  data            1    0[COMRAM] unsigned char 
 12187 ;; Return value:  Size  Location     Type
 12188 ;;                  1    wreg      void 
 12189 ;; Registers used:
 12190 ;;		wreg
 12191 ;; Tracked objects:
 12192 ;;		On entry : 0/0
 12193 ;;		On exit  : 0/0
 12194 ;;		Unchanged: 0/0
 12195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12197 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12199 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12200 ;;Total ram usage:        1 bytes
 12201 ;; Hardware stack levels used:    1
 12202 ;; This function calls:
 12203 ;;		Nothing
 12204 ;; This function is called by:
 12205 ;;		_I2C_DO_SEND_ADR_READ
 12206 ;;		_I2C_DO_SEND_ADR_WRITE
 12207 ;;		_I2C_DO_TX
 12208 ;; This function uses a non-reentrant model
 12209 ;;
 12210                           
 12211                           	psect	text68
 12212  003ABC                     __ptext68:
 12213                           	callstack 0
 12214  003ABC                     _I2C_MasterSendTxData:
 12215                           	callstack 18
 12216                           
 12217                           ;incstack = 0
 12218                           ;I2C_MasterSendTxData@data stored from wreg
 12219  003ABC  6E01               	movwf	I2C_MasterSendTxData@data^0,c
 12220  003ABE                     
 12221                           ;mcc_generated_files/i2c_master.c: 569: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 570: {;mcc_generated_files/i2c_
      +                          master.c: 571:     SSPBUF = data;
 12222  003ABE  C001  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
 12223  003AC2  0012               	return		;funcret
 12224  003AC4                     __end_of_I2C_MasterSendTxData:
 12225                           	callstack 0
 12226                           
 12227 ;; *************** function _I2C_MasterSendAck *****************
 12228 ;; Defined at:
 12229 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
 12230 ;; Parameters:    Size  Location     Type
 12231 ;;		None
 12232 ;; Auto vars:     Size  Location     Type
 12233 ;;		None
 12234 ;; Return value:  Size  Location     Type
 12235 ;;                  1    wreg      void 
 12236 ;; Registers used:
 12237 ;;		None
 12238 ;; Tracked objects:
 12239 ;;		On entry : 0/0
 12240 ;;		On exit  : 0/0
 12241 ;;		Unchanged: 0/0
 12242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12247 ;;Total ram usage:        0 bytes
 12248 ;; Hardware stack levels used:    1
 12249 ;; This function calls:
 12250 ;;		Nothing
 12251 ;; This function is called by:
 12252 ;;		_I2C_DO_RX
 12253 ;;		_I2C_DO_RX_ACK
 12254 ;; This function uses a non-reentrant model
 12255 ;;
 12256                           
 12257                           	psect	text69
 12258  003ACA                     __ptext69:
 12259                           	callstack 0
 12260  003ACA                     _I2C_MasterSendAck:
 12261                           	callstack 18
 12262  003ACA                     
 12263                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
 12264  003ACA  9AC5               	bcf	197,5,c	;volatile
 12265                           
 12266                           ;mcc_generated_files/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
 12267  003ACC  88C5               	bsf	197,4,c	;volatile
 12268  003ACE  0012               	return		;funcret
 12269  003AD0                     __end_of_I2C_MasterSendAck:
 12270                           	callstack 0
 12271                           
 12272 ;; *************** function _I2C_MasterGetRxData *****************
 12273 ;; Defined at:
 12274 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
 12275 ;; Parameters:    Size  Location     Type
 12276 ;;		None
 12277 ;; Auto vars:     Size  Location     Type
 12278 ;;		None
 12279 ;; Return value:  Size  Location     Type
 12280 ;;                  1    wreg      unsigned char 
 12281 ;; Registers used:
 12282 ;;		wreg, status,2
 12283 ;; Tracked objects:
 12284 ;;		On entry : 0/0
 12285 ;;		On exit  : 0/0
 12286 ;;		Unchanged: 0/0
 12287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12292 ;;Total ram usage:        0 bytes
 12293 ;; Hardware stack levels used:    1
 12294 ;; This function calls:
 12295 ;;		Nothing
 12296 ;; This function is called by:
 12297 ;;		_I2C_DO_RX
 12298 ;; This function uses a non-reentrant model
 12299 ;;
 12300                           
 12301                           	psect	text70
 12302  003AE2                     __ptext70:
 12303                           	callstack 0
 12304  003AE2                     _I2C_MasterGetRxData:
 12305                           	callstack 18
 12306  003AE2                     
 12307                           ;mcc_generated_files/i2c_master.c: 566:     return SSPBUF;
 12308  003AE2  50C9               	movf	201,w,c	;volatile
 12309  003AE4  0012               	return		;funcret
 12310  003AE6                     __end_of_I2C_MasterGetRxData:
 12311                           	callstack 0
 12312                           
 12313 ;; *************** function _I2C_MasterSendNack *****************
 12314 ;; Defined at:
 12315 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
 12316 ;; Parameters:    Size  Location     Type
 12317 ;;		None
 12318 ;; Auto vars:     Size  Location     Type
 12319 ;;		None
 12320 ;; Return value:  Size  Location     Type
 12321 ;;                  1    wreg      void 
 12322 ;; Registers used:
 12323 ;;		None
 12324 ;; Tracked objects:
 12325 ;;		On entry : 0/0
 12326 ;;		On exit  : 0/0
 12327 ;;		Unchanged: 0/0
 12328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12333 ;;Total ram usage:        0 bytes
 12334 ;; Hardware stack levels used:    1
 12335 ;; This function calls:
 12336 ;;		Nothing
 12337 ;; This function is called by:
 12338 ;;		_I2C_DO_RX_NACK_STOP
 12339 ;;		_I2C_DO_RX_NACK_RESTART
 12340 ;; This function uses a non-reentrant model
 12341 ;;
 12342                           
 12343                           	psect	text71
 12344  003AD0                     __ptext71:
 12345                           	callstack 0
 12346  003AD0                     _I2C_MasterSendNack:
 12347                           	callstack 18
 12348  003AD0                     
 12349                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
 12350  003AD0  8AC5               	bsf	197,5,c	;volatile
 12351                           
 12352                           ;mcc_generated_files/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
 12353  003AD2  88C5               	bsf	197,4,c	;volatile
 12354  003AD4  0012               	return		;funcret
 12355  003AD6                     __end_of_I2C_MasterSendNack:
 12356                           	callstack 0
 12357                           
 12358 ;; *************** function _I2C_MasterStartRx *****************
 12359 ;; Defined at:
 12360 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
 12361 ;; Parameters:    Size  Location     Type
 12362 ;;		None
 12363 ;; Auto vars:     Size  Location     Type
 12364 ;;		None
 12365 ;; Return value:  Size  Location     Type
 12366 ;;                  1    wreg      void 
 12367 ;; Registers used:
 12368 ;;		None
 12369 ;; Tracked objects:
 12370 ;;		On entry : 0/0
 12371 ;;		On exit  : 0/0
 12372 ;;		Unchanged: 0/0
 12373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12378 ;;Total ram usage:        0 bytes
 12379 ;; Hardware stack levels used:    1
 12380 ;; This function calls:
 12381 ;;		Nothing
 12382 ;; This function is called by:
 12383 ;;		_I2C_DO_RCEN
 12384 ;; This function uses a non-reentrant model
 12385 ;;
 12386                           
 12387                           	psect	text72
 12388  003AE6                     __ptext72:
 12389                           	callstack 0
 12390  003AE6                     _I2C_MasterStartRx:
 12391                           	callstack 18
 12392  003AE6                     
 12393                           ;mcc_generated_files/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
 12394  003AE6  86C5               	bsf	197,3,c	;volatile
 12395  003AE8  0012               	return		;funcret
 12396  003AEA                     __end_of_I2C_MasterStartRx:
 12397                           	callstack 0
 12398                           
 12399 ;; *************** function _I2C_CallbackReturnReset *****************
 12400 ;; Defined at:
 12401 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
 12402 ;; Parameters:    Size  Location     Type
 12403 ;;  funPtr          2    9[COMRAM] PTR void 
 12404 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12405 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
 12406 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 12407 ;; Auto vars:     Size  Location     Type
 12408 ;;		None
 12409 ;; Return value:  Size  Location     Type
 12410 ;;                  1    wreg      enum E360
 12411 ;; Registers used:
 12412 ;;		wreg
 12413 ;; Tracked objects:
 12414 ;;		On entry : 0/0
 12415 ;;		On exit  : 0/0
 12416 ;;		Unchanged: 0/0
 12417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12418 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12421 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12422 ;;Total ram usage:        2 bytes
 12423 ;; Hardware stack levels used:    1
 12424 ;; This function calls:
 12425 ;;		Nothing
 12426 ;; This function is called by:
 12427 ;;		_I2C_Open
 12428 ;;		_I2C_DO_TX
 12429 ;;		_I2C_DO_RX
 12430 ;;		_I2C_DO_TX_EMPTY
 12431 ;;		_I2C_DO_ADDRESS_NACK
 12432 ;;		_I2C_DO_RX_EMPTY
 12433 ;; This function uses a non-reentrant model
 12434 ;;
 12435                           
 12436                           	psect	text73
 12437  003AEA                     __ptext73:
 12438                           	callstack 0
 12439  003AEA                     _I2C_CallbackReturnReset:
 12440                           	callstack 18
 12441  003AEA                     
 12442                           ;mcc_generated_files/i2c_master.c: 526: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_master.c: 528:  
      +                             return I2C_RESET_LINK;
 12443  003AEA  0E04               	movlw	4
 12444  003AEC  0012               	return		;funcret
 12445  003AEE                     __end_of_I2C_CallbackReturnReset:
 12446                           	callstack 0
 12447                           
 12448 ;; *************** function _I2C_CallbackReturnStop *****************
 12449 ;; Defined at:
 12450 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
 12451 ;; Parameters:    Size  Location     Type
 12452 ;;  funPtr          2    9[COMRAM] PTR void 
 12453 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12454 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
 12455 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 12456 ;; Auto vars:     Size  Location     Type
 12457 ;;		None
 12458 ;; Return value:  Size  Location     Type
 12459 ;;                  1    wreg      enum E360
 12460 ;; Registers used:
 12461 ;;		wreg
 12462 ;; Tracked objects:
 12463 ;;		On entry : 0/0
 12464 ;;		On exit  : 0/0
 12465 ;;		Unchanged: 0/0
 12466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12467 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12470 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12471 ;;Total ram usage:        2 bytes
 12472 ;; Hardware stack levels used:    1
 12473 ;; This function calls:
 12474 ;;		Nothing
 12475 ;; This function is called by:
 12476 ;;		_I2C_SetCallback
 12477 ;;		_I2C_Open
 12478 ;;		_I2C_DO_TX
 12479 ;;		_I2C_DO_RX
 12480 ;;		_I2C_DO_TX_EMPTY
 12481 ;;		_I2C_DO_ADDRESS_NACK
 12482 ;;		_I2C_DO_RX_EMPTY
 12483 ;; This function uses a non-reentrant model
 12484 ;;
 12485                           
 12486                           	psect	text74
 12487  003AEE                     __ptext74:
 12488                           	callstack 0
 12489  003AEE                     _I2C_CallbackReturnStop:
 12490                           	callstack 18
 12491  003AEE                     
 12492                           ;mcc_generated_files/i2c_master.c: 521: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 522: {;mcc_generated_files/i2c_master.c: 523:   
      +                            return I2C_STOP_O;
 12493  003AEE  0E00               	movlw	0
 12494  003AF0  0012               	return		;funcret
 12495  003AF2                     __end_of_I2C_CallbackReturnStop:
 12496                           	callstack 0
 12497                           
 12498 ;; *************** function _rdBlkRegCompleteHandler@i2c_master_example$F182 *****************
 12499 ;; Defined at:
 12500 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 12501 ;; Parameters:    Size  Location     Type
 12502 ;;  ptr             2    9[COMRAM] PTR void 
 12503 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12504 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
 12505 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 12506 ;; Auto vars:     Size  Location     Type
 12507 ;;		None
 12508 ;; Return value:  Size  Location     Type
 12509 ;;                  1    wreg      enum E360
 12510 ;; Registers used:
 12511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12512 ;; Tracked objects:
 12513 ;;		On entry : 0/0
 12514 ;;		On exit  : 0/0
 12515 ;;		Unchanged: 0/0
 12516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12520 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12521 ;;Total ram usage:        2 bytes
 12522 ;; Hardware stack levels used:    1
 12523 ;; Hardware stack levels required when called:    2
 12524 ;; This function calls:
 12525 ;;		_I2C_SetBuffer
 12526 ;;		_I2C_SetDataCompleteCallback
 12527 ;; This function is called by:
 12528 ;;		_I2C_ReadDataBlock
 12529 ;;		_I2C_DO_TX
 12530 ;;		_I2C_DO_RX
 12531 ;;		_I2C_DO_TX_EMPTY
 12532 ;;		_I2C_DO_ADDRESS_NACK
 12533 ;;		_I2C_DO_RX_EMPTY
 12534 ;; This function uses a non-reentrant model
 12535 ;;
 12536                           
 12537                           	psect	text75
 12538  003636                     __ptext75:
 12539                           	callstack 0
 12540  003636                     _rdBlkRegCompleteHandler@i2c_master_example$F182:
 12541                           	callstack 16
 12542  003636                     
 12543                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 12544  003636  EE20 F002          	lfsr	2,2
 12545  00363A  500A               	movf	rdBlkRegCompleteHandler@i2c_master_example$F182@ptr^0,w,c
 12546  00363C  26D9               	addwf	fsr2l,f,c
 12547  00363E  500B               	movf	(rdBlkRegCompleteHandler@i2c_master_example$F182@ptr+1)^0,w,c
 12548  003640  22DA               	addwfc	fsr2h,f,c
 12549  003642  CFDE F001          	movff	postinc2,I2C_SetBuffer@buffer
 12550  003646  CFDD F002          	movff	postdec2,I2C_SetBuffer@buffer+1
 12551  00364A  C00A  FFD9         	movff	rdBlkRegCompleteHandler@i2c_master_example$F182@ptr,fsr2l
 12552  00364E  C00B  FFDA         	movff	rdBlkRegCompleteHandler@i2c_master_example$F182@ptr+1,fsr2h
 12553  003652  CFDE F003          	movff	postinc2,I2C_SetBuffer@bufferSize
 12554  003656  CFDD F004          	movff	postdec2,I2C_SetBuffer@bufferSize+1
 12555  00365A  ECCE  F01C         	call	_I2C_SetBuffer	;wreg free
 12556  00365E                     
 12557                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12558  00365E  0E00               	movlw	0
 12559  003660  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12560  003662  0E00               	movlw	0
 12561  003664  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12562  003666  0E00               	movlw	0
 12563  003668  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12564  00366A  0E00               	movlw	0
 12565  00366C  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12566  00366E  ECE0  F01C         	call	_I2C_SetDataCompleteCallback	;wreg free
 12567  003672                     
 12568                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 12569  003672  0E01               	movlw	1
 12570  003674  0012               	return		;funcret
 12571  003676                     __end_of_rdBlkRegCompleteHandler@i2c_master_example$F182:
 12572                           	callstack 0
 12573                           
 12574 ;; *************** function _wr1RegCompleteHandler@i2c_master_example$F165 *****************
 12575 ;; Defined at:
 12576 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 12577 ;; Parameters:    Size  Location     Type
 12578 ;;  ptr             2    9[COMRAM] PTR void 
 12579 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12580 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
 12581 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 12582 ;; Auto vars:     Size  Location     Type
 12583 ;;		None
 12584 ;; Return value:  Size  Location     Type
 12585 ;;                  1    wreg      enum E360
 12586 ;; Registers used:
 12587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12588 ;; Tracked objects:
 12589 ;;		On entry : 0/0
 12590 ;;		On exit  : 0/0
 12591 ;;		Unchanged: 0/0
 12592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12596 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12597 ;;Total ram usage:        2 bytes
 12598 ;; Hardware stack levels used:    1
 12599 ;; Hardware stack levels required when called:    2
 12600 ;; This function calls:
 12601 ;;		_I2C_SetBuffer
 12602 ;;		_I2C_SetDataCompleteCallback
 12603 ;; This function is called by:
 12604 ;;		_I2C_Write1ByteRegister
 12605 ;;		_I2C_DO_TX
 12606 ;;		_I2C_DO_RX
 12607 ;;		_I2C_DO_TX_EMPTY
 12608 ;;		_I2C_DO_ADDRESS_NACK
 12609 ;;		_I2C_DO_RX_EMPTY
 12610 ;; This function uses a non-reentrant model
 12611 ;;
 12612                           
 12613                           	psect	text76
 12614  0037CA                     __ptext76:
 12615                           	callstack 0
 12616  0037CA                     _wr1RegCompleteHandler@i2c_master_example$F165:
 12617                           	callstack 16
 12618  0037CA                     
 12619                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 12620  0037CA  C00A  F001         	movff	wr1RegCompleteHandler@i2c_master_example$F165@ptr,I2C_SetBuffer@buffer
 12621  0037CE  C00B  F002         	movff	wr1RegCompleteHandler@i2c_master_example$F165@ptr+1,I2C_SetBuffer@buffer+1
 12622  0037D2  0E00               	movlw	0
 12623  0037D4  6E04               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12624  0037D6  0E01               	movlw	1
 12625  0037D8  6E03               	movwf	I2C_SetBuffer@bufferSize^0,c
 12626  0037DA  ECCE  F01C         	call	_I2C_SetBuffer	;wreg free
 12627  0037DE                     
 12628                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12629  0037DE  0E00               	movlw	0
 12630  0037E0  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12631  0037E2  0E00               	movlw	0
 12632  0037E4  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12633  0037E6  0E00               	movlw	0
 12634  0037E8  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12635  0037EA  0E00               	movlw	0
 12636  0037EC  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12637  0037EE  ECE0  F01C         	call	_I2C_SetDataCompleteCallback	;wreg free
 12638  0037F2                     
 12639                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 12640  0037F2  0E03               	movlw	3
 12641  0037F4  0012               	return		;funcret
 12642  0037F6                     __end_of_wr1RegCompleteHandler@i2c_master_example$F165:
 12643                           	callstack 0
 12644                           
 12645 ;; *************** function _rd2RegCompleteHandler@i2c_master_example$F159 *****************
 12646 ;; Defined at:
 12647 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 12648 ;; Parameters:    Size  Location     Type
 12649 ;;  ptr             2    9[COMRAM] PTR void 
 12650 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12651 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
 12652 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 12653 ;; Auto vars:     Size  Location     Type
 12654 ;;		None
 12655 ;; Return value:  Size  Location     Type
 12656 ;;                  1    wreg      enum E360
 12657 ;; Registers used:
 12658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12659 ;; Tracked objects:
 12660 ;;		On entry : 0/0
 12661 ;;		On exit  : 0/0
 12662 ;;		Unchanged: 0/0
 12663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12664 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12667 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12668 ;;Total ram usage:        2 bytes
 12669 ;; Hardware stack levels used:    1
 12670 ;; Hardware stack levels required when called:    2
 12671 ;; This function calls:
 12672 ;;		_I2C_SetBuffer
 12673 ;;		_I2C_SetDataCompleteCallback
 12674 ;; This function is called by:
 12675 ;;		_I2C_Read2ByteRegister
 12676 ;;		_I2C_DO_TX
 12677 ;;		_I2C_DO_RX
 12678 ;;		_I2C_DO_TX_EMPTY
 12679 ;;		_I2C_DO_ADDRESS_NACK
 12680 ;;		_I2C_DO_RX_EMPTY
 12681 ;; This function uses a non-reentrant model
 12682 ;;
 12683                           
 12684                           	psect	text77
 12685  0037F6                     __ptext77:
 12686                           	callstack 0
 12687  0037F6                     _rd2RegCompleteHandler@i2c_master_example$F159:
 12688                           	callstack 16
 12689  0037F6                     
 12690                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 12691  0037F6  C00A  F001         	movff	rd2RegCompleteHandler@i2c_master_example$F159@ptr,I2C_SetBuffer@buffer
 12692  0037FA  C00B  F002         	movff	rd2RegCompleteHandler@i2c_master_example$F159@ptr+1,I2C_SetBuffer@buffer+1
 12693  0037FE  0E00               	movlw	0
 12694  003800  6E04               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12695  003802  0E02               	movlw	2
 12696  003804  6E03               	movwf	I2C_SetBuffer@bufferSize^0,c
 12697  003806  ECCE  F01C         	call	_I2C_SetBuffer	;wreg free
 12698  00380A                     
 12699                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12700  00380A  0E00               	movlw	0
 12701  00380C  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12702  00380E  0E00               	movlw	0
 12703  003810  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12704  003812  0E00               	movlw	0
 12705  003814  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12706  003816  0E00               	movlw	0
 12707  003818  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12708  00381A  ECE0  F01C         	call	_I2C_SetDataCompleteCallback	;wreg free
 12709  00381E                     
 12710                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 12711  00381E  0E01               	movlw	1
 12712  003820  0012               	return		;funcret
 12713  003822                     __end_of_rd2RegCompleteHandler@i2c_master_example$F159:
 12714                           	callstack 0
 12715                           
 12716 ;; *************** function _rd1RegCompleteHandler@i2c_master_example$F148 *****************
 12717 ;; Defined at:
 12718 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 12719 ;; Parameters:    Size  Location     Type
 12720 ;;  ptr             2    9[COMRAM] PTR void 
 12721 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12722 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
 12723 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 12724 ;; Auto vars:     Size  Location     Type
 12725 ;;		None
 12726 ;; Return value:  Size  Location     Type
 12727 ;;                  1    wreg      enum E360
 12728 ;; Registers used:
 12729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12730 ;; Tracked objects:
 12731 ;;		On entry : 0/0
 12732 ;;		On exit  : 0/0
 12733 ;;		Unchanged: 0/0
 12734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12735 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12738 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12739 ;;Total ram usage:        2 bytes
 12740 ;; Hardware stack levels used:    1
 12741 ;; Hardware stack levels required when called:    2
 12742 ;; This function calls:
 12743 ;;		_I2C_SetBuffer
 12744 ;;		_I2C_SetDataCompleteCallback
 12745 ;; This function is called by:
 12746 ;;		_I2C_Read1ByteRegister
 12747 ;;		_I2C_DO_TX
 12748 ;;		_I2C_DO_RX
 12749 ;;		_I2C_DO_TX_EMPTY
 12750 ;;		_I2C_DO_ADDRESS_NACK
 12751 ;;		_I2C_DO_RX_EMPTY
 12752 ;; This function uses a non-reentrant model
 12753 ;;
 12754                           
 12755                           	psect	text78
 12756  003822                     __ptext78:
 12757                           	callstack 0
 12758  003822                     _rd1RegCompleteHandler@i2c_master_example$F148:
 12759                           	callstack 16
 12760  003822                     
 12761                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 12762  003822  C00A  F001         	movff	rd1RegCompleteHandler@i2c_master_example$F148@ptr,I2C_SetBuffer@buffer
 12763  003826  C00B  F002         	movff	rd1RegCompleteHandler@i2c_master_example$F148@ptr+1,I2C_SetBuffer@buffer+1
 12764  00382A  0E00               	movlw	0
 12765  00382C  6E04               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12766  00382E  0E01               	movlw	1
 12767  003830  6E03               	movwf	I2C_SetBuffer@bufferSize^0,c
 12768  003832  ECCE  F01C         	call	_I2C_SetBuffer	;wreg free
 12769  003836                     
 12770                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12771  003836  0E00               	movlw	0
 12772  003838  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12773  00383A  0E00               	movlw	0
 12774  00383C  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12775  00383E  0E00               	movlw	0
 12776  003840  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12777  003842  0E00               	movlw	0
 12778  003844  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12779  003846  ECE0  F01C         	call	_I2C_SetDataCompleteCallback	;wreg free
 12780  00384A                     
 12781                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 12782  00384A  0E01               	movlw	1
 12783  00384C  0012               	return		;funcret
 12784  00384E                     __end_of_rd1RegCompleteHandler@i2c_master_example$F148:
 12785                           	callstack 0
 12786                           
 12787 ;; *************** function _rdBlkRegCompleteHandler *****************
 12788 ;; Defined at:
 12789 ;;		line 185 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 12790 ;; Parameters:    Size  Location     Type
 12791 ;;  p               2    9[COMRAM] PTR void 
 12792 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12793 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
 12794 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 12795 ;; Auto vars:     Size  Location     Type
 12796 ;;		None
 12797 ;; Return value:  Size  Location     Type
 12798 ;;                  1    wreg      enum E360
 12799 ;; Registers used:
 12800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12801 ;; Tracked objects:
 12802 ;;		On entry : 0/0
 12803 ;;		On exit  : 0/0
 12804 ;;		Unchanged: 0/0
 12805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12809 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12810 ;;Total ram usage:        2 bytes
 12811 ;; Hardware stack levels used:    1
 12812 ;; Hardware stack levels required when called:    2
 12813 ;; This function calls:
 12814 ;;		_I2C_SetBuffer
 12815 ;;		_I2C_SetDataCompleteCallback
 12816 ;; This function is called by:
 12817 ;;		_i2c_readDataBlock
 12818 ;;		_I2C_DO_TX
 12819 ;;		_I2C_DO_RX
 12820 ;;		_I2C_DO_TX_EMPTY
 12821 ;;		_I2C_DO_ADDRESS_NACK
 12822 ;;		_I2C_DO_RX_EMPTY
 12823 ;; This function uses a non-reentrant model
 12824 ;;
 12825                           
 12826                           	psect	text79
 12827  003676                     __ptext79:
 12828                           	callstack 0
 12829  003676                     _rdBlkRegCompleteHandler:
 12830                           	callstack 16
 12831  003676                     
 12832                           ;mcc_generated_files/drivers/i2c_simple_master.c: 185: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 186: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 187:     I2C_SetBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 12833  003676  EE20 F002          	lfsr	2,2
 12834  00367A  500A               	movf	rdBlkRegCompleteHandler@p^0,w,c
 12835  00367C  26D9               	addwf	fsr2l,f,c
 12836  00367E  500B               	movf	(rdBlkRegCompleteHandler@p+1)^0,w,c
 12837  003680  22DA               	addwfc	fsr2h,f,c
 12838  003682  CFDE F001          	movff	postinc2,I2C_SetBuffer@buffer
 12839  003686  CFDD F002          	movff	postdec2,I2C_SetBuffer@buffer+1
 12840  00368A  C00A  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
 12841  00368E  C00B  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
 12842  003692  CFDE F003          	movff	postinc2,I2C_SetBuffer@bufferSize
 12843  003696  CFDD F004          	movff	postdec2,I2C_SetBuffer@bufferSize+1
 12844  00369A  ECCE  F01C         	call	_I2C_SetBuffer	;wreg free
 12845  00369E                     
 12846                           ;mcc_generated_files/drivers/i2c_simple_master.c: 188:     I2C_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 12847  00369E  0E00               	movlw	0
 12848  0036A0  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12849  0036A2  0E00               	movlw	0
 12850  0036A4  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12851  0036A6  0E00               	movlw	0
 12852  0036A8  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12853  0036AA  0E00               	movlw	0
 12854  0036AC  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12855  0036AE  ECE0  F01C         	call	_I2C_SetDataCompleteCallback	;wreg free
 12856  0036B2                     
 12857                           ;mcc_generated_files/drivers/i2c_simple_master.c: 189:     return I2C_RESTART_READ;
 12858  0036B2  0E01               	movlw	1
 12859  0036B4  0012               	return		;funcret
 12860  0036B6                     __end_of_rdBlkRegCompleteHandler:
 12861                           	callstack 0
 12862                           
 12863 ;; *************** function _wr2RegCompleteHandler *****************
 12864 ;; Defined at:
 12865 ;;		line 151 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 12866 ;; Parameters:    Size  Location     Type
 12867 ;;  p               2    9[COMRAM] PTR void 
 12868 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12869 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
 12870 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 12871 ;; Auto vars:     Size  Location     Type
 12872 ;;		None
 12873 ;; Return value:  Size  Location     Type
 12874 ;;                  1    wreg      enum E360
 12875 ;; Registers used:
 12876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12877 ;; Tracked objects:
 12878 ;;		On entry : 0/0
 12879 ;;		On exit  : 0/0
 12880 ;;		Unchanged: 0/0
 12881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12885 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12886 ;;Total ram usage:        2 bytes
 12887 ;; Hardware stack levels used:    1
 12888 ;; Hardware stack levels required when called:    2
 12889 ;; This function calls:
 12890 ;;		_I2C_SetBuffer
 12891 ;;		_I2C_SetDataCompleteCallback
 12892 ;; This function is called by:
 12893 ;;		_i2c_write2ByteRegister
 12894 ;;		_I2C_DO_TX
 12895 ;;		_I2C_DO_RX
 12896 ;;		_I2C_DO_TX_EMPTY
 12897 ;;		_I2C_DO_ADDRESS_NACK
 12898 ;;		_I2C_DO_RX_EMPTY
 12899 ;; This function uses a non-reentrant model
 12900 ;;
 12901                           
 12902                           	psect	text80
 12903  00384E                     __ptext80:
 12904                           	callstack 0
 12905  00384E                     _wr2RegCompleteHandler:
 12906                           	callstack 16
 12907  00384E                     
 12908                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 152: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 153:     I2C_SetBuffer(p,2);
 12909  00384E  C00A  F001         	movff	wr2RegCompleteHandler@p,I2C_SetBuffer@buffer
 12910  003852  C00B  F002         	movff	wr2RegCompleteHandler@p+1,I2C_SetBuffer@buffer+1
 12911  003856  0E00               	movlw	0
 12912  003858  6E04               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12913  00385A  0E02               	movlw	2
 12914  00385C  6E03               	movwf	I2C_SetBuffer@bufferSize^0,c
 12915  00385E  ECCE  F01C         	call	_I2C_SetBuffer	;wreg free
 12916  003862                     
 12917                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 12918  003862  0E00               	movlw	0
 12919  003864  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12920  003866  0E00               	movlw	0
 12921  003868  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12922  00386A  0E00               	movlw	0
 12923  00386C  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12924  00386E  0E00               	movlw	0
 12925  003870  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12926  003872  ECE0  F01C         	call	_I2C_SetDataCompleteCallback	;wreg free
 12927  003876                     
 12928                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     return I2C_CONTINUE;
 12929  003876  0E03               	movlw	3
 12930  003878  0012               	return		;funcret
 12931  00387A                     __end_of_wr2RegCompleteHandler:
 12932                           	callstack 0
 12933                           
 12934 ;; *************** function _rd2RegCompleteHandler *****************
 12935 ;; Defined at:
 12936 ;;		line 119 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 12937 ;; Parameters:    Size  Location     Type
 12938 ;;  p               2    9[COMRAM] PTR void 
 12939 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12940 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
 12941 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 12942 ;; Auto vars:     Size  Location     Type
 12943 ;;		None
 12944 ;; Return value:  Size  Location     Type
 12945 ;;                  1    wreg      enum E360
 12946 ;; Registers used:
 12947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12948 ;; Tracked objects:
 12949 ;;		On entry : 0/0
 12950 ;;		On exit  : 0/0
 12951 ;;		Unchanged: 0/0
 12952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12953 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12956 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12957 ;;Total ram usage:        2 bytes
 12958 ;; Hardware stack levels used:    1
 12959 ;; Hardware stack levels required when called:    2
 12960 ;; This function calls:
 12961 ;;		_I2C_SetBuffer
 12962 ;;		_I2C_SetDataCompleteCallback
 12963 ;; This function is called by:
 12964 ;;		_i2c_read2ByteRegister
 12965 ;;		_I2C_DO_TX
 12966 ;;		_I2C_DO_RX
 12967 ;;		_I2C_DO_TX_EMPTY
 12968 ;;		_I2C_DO_ADDRESS_NACK
 12969 ;;		_I2C_DO_RX_EMPTY
 12970 ;; This function uses a non-reentrant model
 12971 ;;
 12972                           
 12973                           	psect	text81
 12974  00387A                     __ptext81:
 12975                           	callstack 0
 12976  00387A                     _rd2RegCompleteHandler:
 12977                           	callstack 16
 12978  00387A                     
 12979                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119: static i2c_operations_t rd2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 120: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 121:     I2C_SetBuffer(p,2);
 12980  00387A  C00A  F001         	movff	rd2RegCompleteHandler@p,I2C_SetBuffer@buffer
 12981  00387E  C00B  F002         	movff	rd2RegCompleteHandler@p+1,I2C_SetBuffer@buffer+1
 12982  003882  0E00               	movlw	0
 12983  003884  6E04               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12984  003886  0E02               	movlw	2
 12985  003888  6E03               	movwf	I2C_SetBuffer@bufferSize^0,c
 12986  00388A  ECCE  F01C         	call	_I2C_SetBuffer	;wreg free
 12987  00388E                     
 12988                           ;mcc_generated_files/drivers/i2c_simple_master.c: 122:     I2C_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 12989  00388E  0E00               	movlw	0
 12990  003890  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12991  003892  0E00               	movlw	0
 12992  003894  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12993  003896  0E00               	movlw	0
 12994  003898  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12995  00389A  0E00               	movlw	0
 12996  00389C  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12997  00389E  ECE0  F01C         	call	_I2C_SetDataCompleteCallback	;wreg free
 12998  0038A2                     
 12999                           ;mcc_generated_files/drivers/i2c_simple_master.c: 123:     return I2C_RESTART_READ;
 13000  0038A2  0E01               	movlw	1
 13001  0038A4  0012               	return		;funcret
 13002  0038A6                     __end_of_rd2RegCompleteHandler:
 13003                           	callstack 0
 13004                           
 13005 ;; *************** function _rd1RegCompleteHandler *****************
 13006 ;; Defined at:
 13007 ;;		line 81 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 13008 ;; Parameters:    Size  Location     Type
 13009 ;;  p               2    9[COMRAM] PTR void 
 13010 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 13011 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
 13012 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 13013 ;; Auto vars:     Size  Location     Type
 13014 ;;		None
 13015 ;; Return value:  Size  Location     Type
 13016 ;;                  1    wreg      enum E360
 13017 ;; Registers used:
 13018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13019 ;; Tracked objects:
 13020 ;;		On entry : 0/0
 13021 ;;		On exit  : 0/0
 13022 ;;		Unchanged: 0/0
 13023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13024 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13027 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13028 ;;Total ram usage:        2 bytes
 13029 ;; Hardware stack levels used:    1
 13030 ;; Hardware stack levels required when called:    2
 13031 ;; This function calls:
 13032 ;;		_I2C_SetBuffer
 13033 ;;		_I2C_SetDataCompleteCallback
 13034 ;; This function is called by:
 13035 ;;		_i2c_read1ByteRegister
 13036 ;;		_I2C_DO_TX
 13037 ;;		_I2C_DO_RX
 13038 ;;		_I2C_DO_TX_EMPTY
 13039 ;;		_I2C_DO_ADDRESS_NACK
 13040 ;;		_I2C_DO_RX_EMPTY
 13041 ;; This function uses a non-reentrant model
 13042 ;;
 13043                           
 13044                           	psect	text82
 13045  0038A6                     __ptext82:
 13046                           	callstack 0
 13047  0038A6                     _rd1RegCompleteHandler:
 13048                           	callstack 16
 13049  0038A6                     
 13050                           ;mcc_generated_files/drivers/i2c_simple_master.c: 81: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 82: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 83:     I2C_SetBuffer(p,1);
 13051  0038A6  C00A  F001         	movff	rd1RegCompleteHandler@p,I2C_SetBuffer@buffer
 13052  0038AA  C00B  F002         	movff	rd1RegCompleteHandler@p+1,I2C_SetBuffer@buffer+1
 13053  0038AE  0E00               	movlw	0
 13054  0038B0  6E04               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 13055  0038B2  0E01               	movlw	1
 13056  0038B4  6E03               	movwf	I2C_SetBuffer@bufferSize^0,c
 13057  0038B6  ECCE  F01C         	call	_I2C_SetBuffer	;wreg free
 13058  0038BA                     
 13059                           ;mcc_generated_files/drivers/i2c_simple_master.c: 84:     I2C_SetDataCompleteCallback(((
      +                          void*)0),((void*)0));
 13060  0038BA  0E00               	movlw	0
 13061  0038BC  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 13062  0038BE  0E00               	movlw	0
 13063  0038C0  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 13064  0038C2  0E00               	movlw	0
 13065  0038C4  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 13066  0038C6  0E00               	movlw	0
 13067  0038C8  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 13068  0038CA  ECE0  F01C         	call	_I2C_SetDataCompleteCallback	;wreg free
 13069  0038CE                     
 13070                           ;mcc_generated_files/drivers/i2c_simple_master.c: 85:     return I2C_RESTART_READ;
 13071  0038CE  0E01               	movlw	1
 13072  0038D0  0012               	return		;funcret
 13073  0038D2                     __end_of_rd1RegCompleteHandler:
 13074                           	callstack 0
 13075                           
 13076 ;; *************** function _wr1RegCompleteHandler *****************
 13077 ;; Defined at:
 13078 ;;		line 34 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 13079 ;; Parameters:    Size  Location     Type
 13080 ;;  p               2    9[COMRAM] PTR void 
 13081 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 13082 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
 13083 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 13084 ;; Auto vars:     Size  Location     Type
 13085 ;;		None
 13086 ;; Return value:  Size  Location     Type
 13087 ;;                  1    wreg      enum E360
 13088 ;; Registers used:
 13089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13090 ;; Tracked objects:
 13091 ;;		On entry : 0/0
 13092 ;;		On exit  : 0/0
 13093 ;;		Unchanged: 0/0
 13094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13095 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13098 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13099 ;;Total ram usage:        2 bytes
 13100 ;; Hardware stack levels used:    1
 13101 ;; Hardware stack levels required when called:    2
 13102 ;; This function calls:
 13103 ;;		_I2C_SetBuffer
 13104 ;;		_I2C_SetDataCompleteCallback
 13105 ;; This function is called by:
 13106 ;;		_i2c_write1ByteRegister
 13107 ;;		_I2C_DO_TX
 13108 ;;		_I2C_DO_RX
 13109 ;;		_I2C_DO_TX_EMPTY
 13110 ;;		_I2C_DO_ADDRESS_NACK
 13111 ;;		_I2C_DO_RX_EMPTY
 13112 ;; This function uses a non-reentrant model
 13113 ;;
 13114                           
 13115                           	psect	text83
 13116  0038D2                     __ptext83:
 13117                           	callstack 0
 13118  0038D2                     _wr1RegCompleteHandler:
 13119                           	callstack 16
 13120  0038D2                     
 13121                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 35: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 36:     I2C_SetBuffer(p,1);
 13122  0038D2  C00A  F001         	movff	wr1RegCompleteHandler@p,I2C_SetBuffer@buffer
 13123  0038D6  C00B  F002         	movff	wr1RegCompleteHandler@p+1,I2C_SetBuffer@buffer+1
 13124  0038DA  0E00               	movlw	0
 13125  0038DC  6E04               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 13126  0038DE  0E01               	movlw	1
 13127  0038E0  6E03               	movwf	I2C_SetBuffer@bufferSize^0,c
 13128  0038E2  ECCE  F01C         	call	_I2C_SetBuffer	;wreg free
 13129  0038E6                     
 13130                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     I2C_SetDataCompleteCallback(((
      +                          void*)0),((void*)0));
 13131  0038E6  0E00               	movlw	0
 13132  0038E8  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 13133  0038EA  0E00               	movlw	0
 13134  0038EC  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 13135  0038EE  0E00               	movlw	0
 13136  0038F0  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 13137  0038F2  0E00               	movlw	0
 13138  0038F4  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 13139  0038F6  ECE0  F01C         	call	_I2C_SetDataCompleteCallback	;wreg free
 13140  0038FA                     
 13141                           ;mcc_generated_files/drivers/i2c_simple_master.c: 38:     return I2C_CONTINUE;
 13142  0038FA  0E03               	movlw	3
 13143  0038FC  0012               	return		;funcret
 13144  0038FE                     __end_of_wr1RegCompleteHandler:
 13145                           	callstack 0
 13146                           
 13147 ;; *************** function _wr2RegCompleteHandler@i2c_master_example$F171 *****************
 13148 ;; Defined at:
 13149 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 13150 ;; Parameters:    Size  Location     Type
 13151 ;;  ptr             2    9[COMRAM] PTR void 
 13152 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 13153 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
 13154 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 13155 ;; Auto vars:     Size  Location     Type
 13156 ;;		None
 13157 ;; Return value:  Size  Location     Type
 13158 ;;                  1    wreg      enum E360
 13159 ;; Registers used:
 13160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13161 ;; Tracked objects:
 13162 ;;		On entry : 0/0
 13163 ;;		On exit  : 0/0
 13164 ;;		Unchanged: 0/0
 13165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13166 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13169 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13170 ;;Total ram usage:        2 bytes
 13171 ;; Hardware stack levels used:    1
 13172 ;; Hardware stack levels required when called:    2
 13173 ;; This function calls:
 13174 ;;		_I2C_SetBuffer
 13175 ;;		_I2C_SetDataCompleteCallback
 13176 ;; This function is called by:
 13177 ;;		_I2C_Write2ByteRegister
 13178 ;;		_I2C_DO_TX
 13179 ;;		_I2C_DO_RX
 13180 ;;		_I2C_DO_TX_EMPTY
 13181 ;;		_I2C_DO_ADDRESS_NACK
 13182 ;;		_I2C_DO_RX_EMPTY
 13183 ;; This function uses a non-reentrant model
 13184 ;;
 13185                           
 13186                           	psect	text84
 13187  0038FE                     __ptext84:
 13188                           	callstack 0
 13189  0038FE                     _wr2RegCompleteHandler@i2c_master_example$F171:
 13190                           	callstack 16
 13191  0038FE                     
 13192                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 13193  0038FE  C00A  F001         	movff	wr2RegCompleteHandler@i2c_master_example$F171@ptr,I2C_SetBuffer@buffer
 13194  003902  C00B  F002         	movff	wr2RegCompleteHandler@i2c_master_example$F171@ptr+1,I2C_SetBuffer@buffer+1
 13195  003906  0E00               	movlw	0
 13196  003908  6E04               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 13197  00390A  0E02               	movlw	2
 13198  00390C  6E03               	movwf	I2C_SetBuffer@bufferSize^0,c
 13199  00390E  ECCE  F01C         	call	_I2C_SetBuffer	;wreg free
 13200  003912                     
 13201                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 13202  003912  0E00               	movlw	0
 13203  003914  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 13204  003916  0E00               	movlw	0
 13205  003918  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 13206  00391A  0E00               	movlw	0
 13207  00391C  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 13208  00391E  0E00               	movlw	0
 13209  003920  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 13210  003922  ECE0  F01C         	call	_I2C_SetDataCompleteCallback	;wreg free
 13211  003926                     
 13212                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 13213  003926  0E03               	movlw	3
 13214  003928  0012               	return		;funcret
 13215  00392A                     __end_of_wr2RegCompleteHandler@i2c_master_example$F171:
 13216                           	callstack 0
 13217                           
 13218 ;; *************** function _I2C_SetDataCompleteCallback *****************
 13219 ;; Defined at:
 13220 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
 13221 ;; Parameters:    Size  Location     Type
 13222 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
 13223 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c_master_example$F182(1), wr2RegCompleteHandler@i2c_master_examp
      +le$F171(1), wr1RegCompleteHandler@i2c_master_example$F165(1), 
 13224 ;;		 -> rd2RegCompleteHandler@i2c_master_example$F159(1), rd1RegCompleteHandler@i2c_master_example$F148(1), rdBlkRegComp
      +leteHandler(1), wr2RegCompleteHandler(1), 
 13225 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 13226 ;;  ptr             2    7[COMRAM] PTR void 
 13227 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 13228 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
 13229 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 13230 ;; Auto vars:     Size  Location     Type
 13231 ;;		None
 13232 ;; Return value:  Size  Location     Type
 13233 ;;                  1    wreg      void 
 13234 ;; Registers used:
 13235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13236 ;; Tracked objects:
 13237 ;;		On entry : 0/0
 13238 ;;		On exit  : 0/0
 13239 ;;		Unchanged: 0/0
 13240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13241 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13244 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13245 ;;Total ram usage:        4 bytes
 13246 ;; Hardware stack levels used:    1
 13247 ;; Hardware stack levels required when called:    1
 13248 ;; This function calls:
 13249 ;;		_I2C_SetCallback
 13250 ;; This function is called by:
 13251 ;;		_wr1RegCompleteHandler
 13252 ;;		_rd1RegCompleteHandler
 13253 ;;		_rd2RegCompleteHandler
 13254 ;;		_wr2RegCompleteHandler
 13255 ;;		_rdBlkRegCompleteHandler
 13256 ;;		_rd1RegCompleteHandler@i2c_master_example$F148
 13257 ;;		_rd2RegCompleteHandler@i2c_master_example$F159
 13258 ;;		_wr1RegCompleteHandler@i2c_master_example$F165
 13259 ;;		_wr2RegCompleteHandler@i2c_master_example$F171
 13260 ;;		_rdBlkRegCompleteHandler@i2c_master_example$F182
 13261 ;;		_i2c_write1ByteRegister
 13262 ;;		_i2c_read1ByteRegister
 13263 ;;		_i2c_read2ByteRegister
 13264 ;;		_i2c_write2ByteRegister
 13265 ;;		_i2c_readDataBlock
 13266 ;;		_I2C_Read1ByteRegister
 13267 ;;		_I2C_Read2ByteRegister
 13268 ;;		_I2C_Write1ByteRegister
 13269 ;;		_I2C_Write2ByteRegister
 13270 ;;		_I2C_ReadDataBlock
 13271 ;; This function uses a non-reentrant model
 13272 ;;
 13273                           
 13274                           	psect	text85
 13275  0039C0                     __ptext85:
 13276                           	callstack 0
 13277  0039C0                     _I2C_SetDataCompleteCallback:
 13278                           	callstack 16
 13279  0039C0                     
 13280                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 13281  0039C0  C006  F001         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
 13282  0039C4  C007  F002         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
 13283  0039C8  C008  F003         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
 13284  0039CC  C009  F004         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
 13285  0039D0  0E00               	movlw	0
 13286  0039D2  ECF4  F018         	call	_I2C_SetCallback
 13287  0039D6  0012               	return		;funcret
 13288  0039D8                     __end_of_I2C_SetDataCompleteCallback:
 13289                           	callstack 0
 13290                           
 13291 ;; *************** function _I2C_SetCallback *****************
 13292 ;; Defined at:
 13293 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
 13294 ;; Parameters:    Size  Location     Type
 13295 ;;  idx             1    wreg     enum E12601
 13296 ;;  cb              2    0[COMRAM] PTR FTN(PTR void ,)enum 
 13297 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c_master_example$F182(1), wr2RegCompleteHandler@i2c_master_examp
      +le$F171(1), wr1RegCompleteHandler@i2c_master_example$F165(1), 
 13298 ;;		 -> rd2RegCompleteHandler@i2c_master_example$F159(1), rd1RegCompleteHandler@i2c_master_example$F148(1), rdBlkRegComp
      +leteHandler(1), wr2RegCompleteHandler(1), 
 13299 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 13300 ;;  ptr             2    2[COMRAM] PTR void 
 13301 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 13302 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
 13303 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 13304 ;; Auto vars:     Size  Location     Type
 13305 ;;  idx             1    4[COMRAM] enum E12601
 13306 ;; Return value:  Size  Location     Type
 13307 ;;                  1    wreg      void 
 13308 ;; Registers used:
 13309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13310 ;; Tracked objects:
 13311 ;;		On entry : 0/0
 13312 ;;		On exit  : 0/0
 13313 ;;		Unchanged: 0/0
 13314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13315 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13316 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13318 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13319 ;;Total ram usage:        5 bytes
 13320 ;; Hardware stack levels used:    1
 13321 ;; This function calls:
 13322 ;;		Nothing
 13323 ;; This function is called by:
 13324 ;;		_I2C_SetDataCompleteCallback
 13325 ;;		_I2C_SetWriteCollisionCallback
 13326 ;;		_I2C_SetAddressNackCallback
 13327 ;;		_I2C_SetDataNackCallback
 13328 ;;		_I2C_SetTimeoutCallback
 13329 ;; This function uses a non-reentrant model
 13330 ;;
 13331                           
 13332                           	psect	text86
 13333  0031E8                     __ptext86:
 13334                           	callstack 0
 13335  0031E8                     _I2C_SetCallback:
 13336                           	callstack 16
 13337                           
 13338                           ;incstack = 0
 13339                           ;I2C_SetCallback@idx stored from wreg
 13340  0031E8  6E05               	movwf	I2C_SetCallback@idx^0,c
 13341  0031EA                     
 13342                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
 13343  0031EA  5001               	movf	I2C_SetCallback@cb^0,w,c
 13344  0031EC  1002               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
 13345  0031EE  B4D8               	btfsc	status,2,c
 13346  0031F0  EFFC  F018         	goto	i2u317_41
 13347  0031F4  EFFE  F018         	goto	i2u317_40
 13348  0031F8                     i2u317_41:
 13349  0031F8  EF18  F019         	goto	i2l4230
 13350  0031FC                     i2u317_40:
 13351  0031FC                     
 13352                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
 13353  0031FC  5005               	movf	I2C_SetCallback@idx^0,w,c
 13354  0031FE  0D02               	mullw	2
 13355  003200  0E50               	movlw	low _I2C_Status
 13356  003202  24F3               	addwf	243,w,c
 13357  003204  6ED9               	movwf	fsr2l,c
 13358  003206  0E01               	movlw	high _I2C_Status
 13359  003208  20F4               	addwfc	prodh,w,c
 13360  00320A  6EDA               	movwf	fsr2h,c
 13361  00320C  C001  FFDE         	movff	I2C_SetCallback@cb,postinc2
 13362  003210  C002  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
 13363                           
 13364                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
 13365  003214  5005               	movf	I2C_SetCallback@idx^0,w,c
 13366  003216  0D02               	mullw	2
 13367  003218  0E5C               	movlw	low (_I2C_Status+12)
 13368  00321A  24F3               	addwf	243,w,c
 13369  00321C  6ED9               	movwf	fsr2l,c
 13370  00321E  0E01               	movlw	high (_I2C_Status+12)
 13371  003220  20F4               	addwfc	prodh,w,c
 13372  003222  6EDA               	movwf	fsr2h,c
 13373  003224  C003  FFDE         	movff	I2C_SetCallback@ptr,postinc2
 13374  003228  C004  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
 13375                           
 13376                           ;mcc_generated_files/i2c_master.c: 310:     }
 13377  00322C  EF30  F019         	goto	i2l457
 13378  003230                     i2l4230:
 13379                           
 13380                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 13381  003230  5005               	movf	I2C_SetCallback@idx^0,w,c
 13382  003232  0D02               	mullw	2
 13383  003234  0E50               	movlw	low _I2C_Status
 13384  003236  24F3               	addwf	243,w,c
 13385  003238  6ED9               	movwf	fsr2l,c
 13386  00323A  0E01               	movlw	high _I2C_Status
 13387  00323C  20F4               	addwfc	prodh,w,c
 13388  00323E  6EDA               	movwf	fsr2h,c
 13389  003240  0EEE               	movlw	low _I2C_CallbackReturnStop
 13390  003242  6EDE               	movwf	postinc2,c
 13391  003244  0E3A               	movlw	high _I2C_CallbackReturnStop
 13392  003246  6EDD               	movwf	postdec2,c
 13393                           
 13394                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 13395  003248  5005               	movf	I2C_SetCallback@idx^0,w,c
 13396  00324A  0D02               	mullw	2
 13397  00324C  0E5C               	movlw	low (_I2C_Status+12)
 13398  00324E  24F3               	addwf	243,w,c
 13399  003250  6ED9               	movwf	fsr2l,c
 13400  003252  0E01               	movlw	high (_I2C_Status+12)
 13401  003254  20F4               	addwfc	prodh,w,c
 13402  003256  6EDA               	movwf	fsr2h,c
 13403  003258  0E00               	movlw	0
 13404  00325A  6EDE               	movwf	postinc2,c
 13405  00325C  0E00               	movlw	0
 13406  00325E  6EDD               	movwf	postdec2,c
 13407  003260                     i2l457:
 13408  003260  0012               	return		;funcret
 13409  003262                     __end_of_I2C_SetCallback:
 13410                           	callstack 0
 13411                           
 13412 ;; *************** function _I2C_SetBuffer *****************
 13413 ;; Defined at:
 13414 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
 13415 ;; Parameters:    Size  Location     Type
 13416 ;;  buffer          2    0[COMRAM] PTR void 
 13417 ;;		 -> Oled_Data@data_I2C(2), Oled_Command@data_I2C(2), I2CSIMPLE_example@receiveData(15), I2CSIMPLE_example@sendData(1
      +7), 
 13418 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
 13419 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
 13420 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@reg(1), i2c_readDataBlock@
      +d(4), 
 13421 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
 13422 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister
      +@data(1), 
 13423 ;;		 -> NULL(0), 
 13424 ;;  bufferSize      2    2[COMRAM] unsigned int 
 13425 ;; Auto vars:     Size  Location     Type
 13426 ;;		None
 13427 ;; Return value:  Size  Location     Type
 13428 ;;                  1    wreg      void 
 13429 ;; Registers used:
 13430 ;;		wreg, status,2, status,0
 13431 ;; Tracked objects:
 13432 ;;		On entry : 0/0
 13433 ;;		On exit  : 0/0
 13434 ;;		Unchanged: 0/0
 13435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13436 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13439 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13440 ;;Total ram usage:        4 bytes
 13441 ;; Hardware stack levels used:    1
 13442 ;; This function calls:
 13443 ;;		Nothing
 13444 ;; This function is called by:
 13445 ;;		_wr1RegCompleteHandler
 13446 ;;		_rd1RegCompleteHandler
 13447 ;;		_rd2RegCompleteHandler
 13448 ;;		_wr2RegCompleteHandler
 13449 ;;		_rdBlkRegCompleteHandler
 13450 ;;		_rd1RegCompleteHandler@i2c_master_example$F148
 13451 ;;		_rd2RegCompleteHandler@i2c_master_example$F159
 13452 ;;		_wr1RegCompleteHandler@i2c_master_example$F165
 13453 ;;		_wr2RegCompleteHandler@i2c_master_example$F171
 13454 ;;		_rdBlkRegCompleteHandler@i2c_master_example$F182
 13455 ;;		_i2c_write1ByteRegister
 13456 ;;		_i2c_writeNBytes
 13457 ;;		_i2c_read1ByteRegister
 13458 ;;		_i2c_read2ByteRegister
 13459 ;;		_i2c_write2ByteRegister
 13460 ;;		_i2c_readDataBlock
 13461 ;;		_i2c_readNBytes
 13462 ;;		_I2C_Read1ByteRegister
 13463 ;;		_I2C_Read2ByteRegister
 13464 ;;		_I2C_Write1ByteRegister
 13465 ;;		_I2C_Write2ByteRegister
 13466 ;;		_I2C_WriteNBytes
 13467 ;;		_I2C_ReadNBytes
 13468 ;;		_I2C_ReadDataBlock
 13469 ;; This function uses a non-reentrant model
 13470 ;;
 13471                           
 13472                           	psect	text87
 13473  00399C                     __ptext87:
 13474                           	callstack 0
 13475  00399C                     _I2C_SetBuffer:
 13476                           	callstack 17
 13477  00399C                     
 13478                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
 13479  00399C  0101               	movlb	1	; () banked
 13480  00399E  A773               	btfss	(_I2C_Status+35)& (0+255),3,b
 13481  0039A0  EFD4  F01C         	goto	i2u361_41
 13482  0039A4  EFD6  F01C         	goto	i2u361_40
 13483  0039A8                     i2u361_41:
 13484  0039A8  EFDF  F01C         	goto	i2l434
 13485  0039AC                     i2u361_40:
 13486  0039AC                     
 13487                           ; BSR set to: 1
 13488                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
 13489  0039AC  C001  F16D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
 13490  0039B0  C002  F16E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
 13491  0039B4                     
 13492                           ; BSR set to: 1
 13493                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
 13494  0039B4  C003  F16F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
 13495  0039B8  C004  F170         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
 13496  0039BC                     
 13497                           ; BSR set to: 1
 13498                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
 13499  0039BC  9773               	bcf	(_I2C_Status+35)& (0+255),3,b
 13500  0039BE                     i2l434:
 13501                           
 13502                           ; BSR set to: 1
 13503  0039BE  0012               	return		;funcret
 13504  0039C0                     __end_of_I2C_SetBuffer:
 13505                           	callstack 0
 13506                           
 13507 ;; *************** function _I2C_MasterStop *****************
 13508 ;; Defined at:
 13509 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
 13510 ;; Parameters:    Size  Location     Type
 13511 ;;		None
 13512 ;; Auto vars:     Size  Location     Type
 13513 ;;		None
 13514 ;; Return value:  Size  Location     Type
 13515 ;;                  1    wreg      void 
 13516 ;; Registers used:
 13517 ;;		None
 13518 ;; Tracked objects:
 13519 ;;		On entry : 0/0
 13520 ;;		On exit  : 0/0
 13521 ;;		Unchanged: 0/0
 13522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13527 ;;Total ram usage:        0 bytes
 13528 ;; Hardware stack levels used:    1
 13529 ;; This function calls:
 13530 ;;		Nothing
 13531 ;; This function is called by:
 13532 ;;		_I2C_DO_SEND_STOP
 13533 ;; This function uses a non-reentrant model
 13534 ;;
 13535                           
 13536                           	psect	text88
 13537  003AF2                     __ptext88:
 13538                           	callstack 0
 13539  003AF2                     _I2C_MasterStop:
 13540                           	callstack 17
 13541  003AF2                     
 13542                           ;mcc_generated_files/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
 13543  003AF2  84C5               	bsf	197,2,c	;volatile
 13544  003AF4  0012               	return		;funcret
 13545  003AF6                     __end_of_I2C_MasterStop:
 13546                           	callstack 0
 13547                           
 13548 ;; *************** function _I2C_MasterEnableRestart *****************
 13549 ;; Defined at:
 13550 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
 13551 ;; Parameters:    Size  Location     Type
 13552 ;;		None
 13553 ;; Auto vars:     Size  Location     Type
 13554 ;;		None
 13555 ;; Return value:  Size  Location     Type
 13556 ;;                  1    wreg      void 
 13557 ;; Registers used:
 13558 ;;		None
 13559 ;; Tracked objects:
 13560 ;;		On entry : 0/0
 13561 ;;		On exit  : 0/0
 13562 ;;		Unchanged: 0/0
 13563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13568 ;;Total ram usage:        0 bytes
 13569 ;; Hardware stack levels used:    1
 13570 ;; This function calls:
 13571 ;;		Nothing
 13572 ;; This function is called by:
 13573 ;;		_I2C_DO_SEND_RESTART_READ
 13574 ;;		_I2C_DO_SEND_RESTART_WRITE
 13575 ;;		_I2C_DO_SEND_RESTART
 13576 ;;		_I2C_DO_RX_EMPTY
 13577 ;; This function uses a non-reentrant model
 13578 ;;
 13579                           
 13580                           	psect	text89
 13581  003AF6                     __ptext89:
 13582                           	callstack 0
 13583  003AF6                     _I2C_MasterEnableRestart:
 13584                           	callstack 17
 13585  003AF6                     
 13586                           ;mcc_generated_files/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
 13587  003AF6  82C5               	bsf	197,1,c	;volatile
 13588  003AF8  0012               	return		;funcret
 13589  003AFA                     __end_of_I2C_MasterEnableRestart:
 13590                           	callstack 0
 13591                           
 13592                           	psect	text90
 13593  000000                     __ptext90:
 13594                           	callstack 0
 13595  000000                     
 13596                           	psect	rparam
 13597  0000                     
 13598                           	psect	temp
 13599  000046                     btemp:
 13600                           	callstack 0
 13601  000046                     	ds	1
 13602  0000                     int$flags	set	btemp
 13603  0000                     wtemp8	set	btemp+1
 13604  0000                     ttemp5	set	btemp+1
 13605  0000                     ttemp6	set	btemp+4
 13606  0000                     ttemp7	set	btemp+8
 13607                           
 13608                           	psect	idloc
 13609                           
 13610                           ;Config register IDLOC0 @ 0x200000
 13611                           ;	unspecified, using default values
 13612  200000                     	org	2097152
 13613  200000  FF                 	db	255
 13614                           
 13615                           ;Config register IDLOC1 @ 0x200001
 13616                           ;	unspecified, using default values
 13617  200001                     	org	2097153
 13618  200001  FF                 	db	255
 13619                           
 13620                           ;Config register IDLOC2 @ 0x200002
 13621                           ;	unspecified, using default values
 13622  200002                     	org	2097154
 13623  200002  FF                 	db	255
 13624                           
 13625                           ;Config register IDLOC3 @ 0x200003
 13626                           ;	unspecified, using default values
 13627  200003                     	org	2097155
 13628  200003  FF                 	db	255
 13629                           
 13630                           ;Config register IDLOC4 @ 0x200004
 13631                           ;	unspecified, using default values
 13632  200004                     	org	2097156
 13633  200004  FF                 	db	255
 13634                           
 13635                           ;Config register IDLOC5 @ 0x200005
 13636                           ;	unspecified, using default values
 13637  200005                     	org	2097157
 13638  200005  FF                 	db	255
 13639                           
 13640                           ;Config register IDLOC6 @ 0x200006
 13641                           ;	unspecified, using default values
 13642  200006                     	org	2097158
 13643  200006  FF                 	db	255
 13644                           
 13645                           ;Config register IDLOC7 @ 0x200007
 13646                           ;	unspecified, using default values
 13647  200007                     	org	2097159
 13648  200007  FF                 	db	255
 13649                           
 13650                           	psect	config
 13651                           
 13652                           ;Config register CONFIG1L @ 0x300000
 13653                           ;	VREG Sleep Enable bit
 13654                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
 13655                           ;	LF-INTOSC Low-power Enable bit
 13656                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
 13657                           ;	SOSC Power Selection and mode Configuration bits
 13658                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
 13659                           ;	Extended Instruction Set
 13660                           ;	XINST = OFF, Disabled
 13661  300000                     	org	3145728
 13662  300000  15                 	db	21
 13663                           
 13664                           ;Config register CONFIG1H @ 0x300001
 13665                           ;	Oscillator
 13666                           ;	FOSC = INTIO2, Internal RC oscillator
 13667                           ;	PLL x4 Enable bit
 13668                           ;	PLLCFG = OFF, Disabled
 13669                           ;	Fail-Safe Clock Monitor
 13670                           ;	FCMEN = OFF, Disabled
 13671                           ;	Internal External Oscillator Switch Over Mode
 13672                           ;	IESO = OFF, Disabled
 13673  300001                     	org	3145729
 13674  300001  08                 	db	8
 13675                           
 13676                           ;Config register CONFIG2L @ 0x300002
 13677                           ;	Power Up Timer
 13678                           ;	PWRTEN = OFF, Disabled
 13679                           ;	Brown Out Detect
 13680                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
 13681                           ;	Brown-out Reset Voltage bits
 13682                           ;	BORV = 3, 1.8V
 13683                           ;	BORMV Power level
 13684                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
 13685  300002                     	org	3145730
 13686  300002  7F                 	db	127
 13687                           
 13688                           ;Config register CONFIG2H @ 0x300003
 13689                           ;	Watchdog Timer
 13690                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
 13691                           ;	Watchdog Postscaler
 13692                           ;	WDTPS = 1048576, 1:1048576
 13693  300003                     	org	3145731
 13694  300003  7C                 	db	124
 13695                           
 13696                           ; Padding undefined space
 13697  300004                     	org	3145732
 13698  300004  FF                 	db	255
 13699                           
 13700                           ;Config register CONFIG3H @ 0x300005
 13701                           ;	ECAN Mux bit
 13702                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
 13703                           ;	MSSP address masking
 13704                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
 13705                           ;	Master Clear Enable
 13706                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
 13707  300005                     	org	3145733
 13708  300005  89                 	db	137
 13709                           
 13710                           ;Config register CONFIG4L @ 0x300006
 13711                           ;	Stack Overflow Reset
 13712                           ;	STVREN = ON, Enabled
 13713                           ;	Boot Block Size
 13714                           ;	BBSIZ = BB2K, 2K word Boot Block size
 13715  300006                     	org	3145734
 13716  300006  91                 	db	145
 13717                           
 13718                           ; Padding undefined space
 13719  300007                     	org	3145735
 13720  300007  FF                 	db	255
 13721                           
 13722                           ;Config register CONFIG5L @ 0x300008
 13723                           ;	Code Protect 00800-03FFF
 13724                           ;	CP0 = OFF, Disabled
 13725                           ;	Code Protect 04000-07FFF
 13726                           ;	CP1 = OFF, Disabled
 13727                           ;	Code Protect 08000-0BFFF
 13728                           ;	CP2 = OFF, Disabled
 13729                           ;	Code Protect 0C000-0FFFF
 13730                           ;	CP3 = OFF, Disabled
 13731  300008                     	org	3145736
 13732  300008  0F                 	db	15
 13733                           
 13734                           ;Config register CONFIG5H @ 0x300009
 13735                           ;	Code Protect Boot
 13736                           ;	CPB = OFF, Disabled
 13737                           ;	Data EE Read Protect
 13738                           ;	CPD = OFF, Disabled
 13739  300009                     	org	3145737
 13740  300009  C0                 	db	192
 13741                           
 13742                           ;Config register CONFIG6L @ 0x30000A
 13743                           ;	Table Write Protect 00800-03FFF
 13744                           ;	WRT0 = OFF, Disabled
 13745                           ;	Table Write Protect 04000-07FFF
 13746                           ;	WRT1 = OFF, Disabled
 13747                           ;	Table Write Protect 08000-0BFFF
 13748                           ;	WRT2 = OFF, Disabled
 13749                           ;	Table Write Protect 0C000-0FFFF
 13750                           ;	WRT3 = OFF, Disabled
 13751  30000A                     	org	3145738
 13752  30000A  0F                 	db	15
 13753                           
 13754                           ;Config register CONFIG6H @ 0x30000B
 13755                           ;	Config. Write Protect
 13756                           ;	WRTC = OFF, Disabled
 13757                           ;	Table Write Protect Boot
 13758                           ;	WRTB = OFF, Disabled
 13759                           ;	Data EE Write Protect
 13760                           ;	WRTD = OFF, Disabled
 13761  30000B                     	org	3145739
 13762  30000B  E0                 	db	224
 13763                           
 13764                           ;Config register CONFIG7L @ 0x30000C
 13765                           ;	Table Read Protect 00800-03FFF
 13766                           ;	EBTR0 = OFF, Disabled
 13767                           ;	Table Read Protect 04000-07FFF
 13768                           ;	EBTR1 = OFF, Disabled
 13769                           ;	Table Read Protect 08000-0BFFF
 13770                           ;	EBTR2 = OFF, Disabled
 13771                           ;	Table Read Protect 0C000-0FFFF
 13772                           ;	EBTR3 = OFF, Disabled
 13773  30000C                     	org	3145740
 13774  30000C  0F                 	db	15
 13775                           
 13776                           ;Config register CONFIG7H @ 0x30000D
 13777                           ;	Table Read Protect Boot
 13778                           ;	EBTRB = OFF, Disabled
 13779  30000D                     	org	3145741
 13780  30000D  40                 	db	64
 13781                           tosu	equ	0xFFF
 13782                           tosh	equ	0xFFE
 13783                           tosl	equ	0xFFD
 13784                           stkptr	equ	0xFFC
 13785                           pclatu	equ	0xFFB
 13786                           pclath	equ	0xFFA
 13787                           pcl	equ	0xFF9
 13788                           tblptru	equ	0xFF8
 13789                           tblptrh	equ	0xFF7
 13790                           tblptrl	equ	0xFF6
 13791                           tablat	equ	0xFF5
 13792                           prodh	equ	0xFF4
 13793                           prodl	equ	0xFF3
 13794                           indf0	equ	0xFEF
 13795                           postinc0	equ	0xFEE
 13796                           postdec0	equ	0xFED
 13797                           preinc0	equ	0xFEC
 13798                           plusw0	equ	0xFEB
 13799                           fsr0h	equ	0xFEA
 13800                           fsr0l	equ	0xFE9
 13801                           wreg	equ	0xFE8
 13802                           indf1	equ	0xFE7
 13803                           postinc1	equ	0xFE6
 13804                           postdec1	equ	0xFE5
 13805                           preinc1	equ	0xFE4
 13806                           plusw1	equ	0xFE3
 13807                           fsr1h	equ	0xFE2
 13808                           fsr1l	equ	0xFE1
 13809                           bsr	equ	0xFE0
 13810                           indf2	equ	0xFDF
 13811                           postinc2	equ	0xFDE
 13812                           postdec2	equ	0xFDD
 13813                           preinc2	equ	0xFDC
 13814                           plusw2	equ	0xFDB
 13815                           fsr2h	equ	0xFDA
 13816                           fsr2l	equ	0xFD9
 13817                           status	equ	0xFD8

Data Sizes:
    Strings     196
    Constant    512
    Data        17
    BSS         238
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      69
    BANK0           160    129     159
    BANK1           256     24     237
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2538$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C_DO_RX$2544$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$2550$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C_DO_RX_EMPTY$2556$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$2555	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$2550	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c_master_example$F182(), 
		 -> wr2RegCompleteHandler@i2c_master_example$F171(), wr1RegCompleteHandler@i2c_master_example$F165(), rd2RegCompleteHandler@i2c_master_example$F159(), rd1RegCompleteHandler@i2c_master_example$F148(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C_DO_RX$2549	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C_DO_RX$2544	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c_master_example$F182(), 
		 -> wr2RegCompleteHandler@i2c_master_example$F171(), wr1RegCompleteHandler@i2c_master_example$F165(), rd2RegCompleteHandler@i2c_master_example$F159(), rd1RegCompleteHandler@i2c_master_example$F148(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C_DO_TX$2543	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C_DO_TX$2538	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c_master_example$F182(), 
		 -> wr2RegCompleteHandler@i2c_master_example$F171(), wr1RegCompleteHandler@i2c_master_example$F165(), rd2RegCompleteHandler@i2c_master_example$F159(), rd1RegCompleteHandler@i2c_master_example$F148(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C_MasterFsm$2537	const PTR FTN()enum E12583 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S748$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_23(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_23(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_18(CODE[4]), STR_17(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_18(CODE[4]), STR_17(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 4
		 -> power_str(BANK0[4]), current_str(BANK0[4]), voltage_str(BANK0[4]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_12(CODE[5]), STR_11(CODE[5]), STR_10(CODE[5]), STR_9(CODE[50]), 
		 -> STR_8(CODE[3]), STR_7(CODE[7]), STR_6(CODE[23]), STR_5(CODE[3]), 
		 -> STR_4(CODE[7]), STR_3(CODE[34]), STR_2(CODE[26]), STR_1(CODE[27]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_12(CODE[5]), STR_11(CODE[5]), STR_10(CODE[5]), STR_9(CODE[50]), 
		 -> STR_8(CODE[3]), STR_7(CODE[7]), STR_6(CODE[23]), STR_5(CODE[3]), 
		 -> STR_4(CODE[7]), STR_3(CODE[34]), STR_2(CODE[26]), STR_1(CODE[27]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 50
		 -> STR_12(CODE[5]), STR_11(CODE[5]), STR_10(CODE[5]), STR_9(CODE[50]), 
		 -> STR_8(CODE[3]), STR_7(CODE[7]), STR_6(CODE[23]), STR_5(CODE[3]), 
		 -> STR_4(CODE[7]), STR_3(CODE[34]), STR_2(CODE[26]), STR_1(CODE[27]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_12(CODE[5]), STR_11(CODE[5]), STR_10(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 4
		 -> power_str(BANK0[4]), current_str(BANK0[4]), voltage_str(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(BANK1[2]), 

    S1921_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 4
		 -> power_str(BANK0[4]), current_str(BANK0[4]), voltage_str(BANK0[4]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 4
		 -> power_str(BANK0[4]), current_str(BANK0[4]), voltage_str(BANK0[4]), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c_master_example$F182(), wr2RegCompleteHandler@i2c_master_example$F171(), wr1RegCompleteHandler@i2c_master_example$F165(), 
		 -> rd2RegCompleteHandler@i2c_master_example$F159(), rd1RegCompleteHandler@i2c_master_example$F148(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c_master_example$F182(), wr2RegCompleteHandler@i2c_master_example$F171(), wr1RegCompleteHandler@i2c_master_example$F165(), 
		 -> rd2RegCompleteHandler@i2c_master_example$F159(), rd1RegCompleteHandler@i2c_master_example$F148(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 17
		 -> Oled_Data@data_I2C(COMRAM[2]), Oled_Command@data_I2C(COMRAM[2]), I2CSIMPLE_example@receiveData(COMRAM[15]), I2CSIMPLE_example@sendData(COMRAM[17]), 
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), 
		 -> NULL(NULL[0]), 

    S748$data_ptr	PTR unsigned char  size(2) Largest target is 17
		 -> Oled_Data@data_I2C(COMRAM[2]), Oled_Command@data_I2C(COMRAM[2]), I2CSIMPLE_example@receiveData(COMRAM[15]), I2CSIMPLE_example@sendData(COMRAM[17]), 
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), 
		 -> NULL(NULL[0]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 17
		 -> Oled_Data@data_I2C(COMRAM[2]), Oled_Command@data_I2C(COMRAM[2]), I2CSIMPLE_example@receiveData(COMRAM[15]), I2CSIMPLE_example@sendData(COMRAM[17]), 
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), 
		 -> NULL(NULL[0]), 

    S748$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S748$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c_master_example$F182(), 
		 -> wr2RegCompleteHandler@i2c_master_example$F171(), wr1RegCompleteHandler@i2c_master_example$F165(), rd2RegCompleteHandler@i2c_master_example$F159(), rd1RegCompleteHandler@i2c_master_example$F148(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c_master_example$F182(), 
		 -> wr2RegCompleteHandler@i2c_master_example$F171(), wr1RegCompleteHandler@i2c_master_example$F165(), rd2RegCompleteHandler@i2c_master_example$F159(), rd1RegCompleteHandler@i2c_master_example$F148(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E12583[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), Absolute function(), 

    rdBlkRegCompleteHandler@i2c_master_example$F182@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@i2c_master_example$F182@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c_master_example$F171@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@i2c_master_example$F165@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c_master_example$F159@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c_master_example$F148@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0

    d.data	PTR unsigned char  size(2) Largest target is 0

    S77$data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    _atoi->_isspace
    _Voltage_ReadRegister->___xxtofl
    _Power_ReadRegister->___xxtofl
    _I2C_Master_Init->___lldiv
    _Current_ReadRegister->___xxtofl
    ___xxtofl->___wmul
    ___flmul->___xxtofl
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _I2C_MasterIsr->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c_master_example$F148
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c_master_example$F159
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c_master_example$F182
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c_master_example$F165
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c_master_example$F171
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd1RegCompleteHandler@i2c_master_example$F148
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler@i2c_master_example$F159
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler@i2c_master_example$F182
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler@i2c_master_example$F165
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler@i2c_master_example$F171
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd1RegCompleteHandler@i2c_master_example$F148
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler@i2c_master_example$F159
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler@i2c_master_example$F182
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler@i2c_master_example$F165
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler@i2c_master_example$F171
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c_master_example$F148
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c_master_example$F159
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c_master_example$F182
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c_master_example$F165
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c_master_example$F171
    _wr2RegCompleteHandler@i2c_master_example$F171->_I2C_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c_master_example$F165->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c_master_example$F182->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c_master_example$F159->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c_master_example$F148->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _Voltage_ReadRegister->___flmul
    _Power_ReadRegister->___fldiv
    _Current_ReadRegister->___flmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   68864
               _Current_ReadRegister
                    _I2C_Master_Init
                 _Power_ReadRegister
                  _SYSTEM_Initialize
               _Voltage_ReadRegister
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   41382
                                              6 BANK1     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   40518
                                            127 BANK0      2     2      0
                                              0 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   39769
                                            105 BANK0     22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                             25 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   30800
                                             37 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             31 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                             25 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                             25 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3957
                                             41 COMRAM     1     1      0
                                              0 BANK0     10     4      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             34 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                             25 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             37 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                             25 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                             25 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                             25 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                             25 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     986
                                             25 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                             25 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     973
                                             25 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                             25 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    3675
                                             32 COMRAM     6     4      2
                                              0 BANK0      9     9      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             25 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                             25 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Voltage_ReadRegister                                 9     5      4    9476
                                             25 BANK0      9     5      4
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Power_ReadRegister                                   9     5      4    8095
                                             13 BANK0      9     5      4
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fldiv
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2572
                                             25 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     435
                                             38 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                             25 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Current_ReadRegister                                 9     5      4    9476
                                             25 BANK0      9     5      4
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                             31 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3953
                                              0 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3263
                                             25 COMRAM    12     4      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     841
                                             26 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      4     2      2     605
                                             26 COMRAM     4     2      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                          10    10      0  309782
                                             15 COMRAM    10    10      0
                   Absolute function *
                      _I2C_MasterIsr *
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterIsr                                       0     0      0  309782
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterFsm                                       2     2      0  309782
                                             13 COMRAM     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_TX_EMPTY                                     2     2      0   77429
                                             11 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c_master_ex *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c_master_ex *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c_master_ *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c_master_ex *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c_master_ex *
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_TX                                           2     2      0   77451
                                             11 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c_master_ex *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c_master_ex *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c_master_ *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c_master_ex *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c_master_ex *
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C_DO_SEND_RESTART_WRITE                           0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (13) _I2C_DO_SEND_RESTART_READ                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_ADR_WRITE                               0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_ADR_READ                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterSendTxData                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_RX_ACK                                       0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_RX                                           2     2      0   77429
                                             11 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c_master_ex *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c_master_ex *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c_master_ *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c_master_ex *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c_master_ex *
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_RX_NACK_STOP                                 0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_RX_NACK_RESTART                              0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_RCEN                                         0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_ADDRESS_NACK                                 2     2      0   77429
                                             11 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c_master_ex *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c_master_ex *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c_master_ *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c_master_ex *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c_master_ex *
 ---------------------------------------------------------------------------------
 (13) _wr2RegCompleteHandler@i2c_master_example$F171       2     0      2    7712
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _wr2RegCompleteHandler                               2     0      2    7712
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _wr1RegCompleteHandler@i2c_master_example$F165       2     0      2    7712
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _wr1RegCompleteHandler                               2     0      2    7712
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _rdBlkRegCompleteHandler@i2c_master_example$F182     2     0      2    7734
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _rdBlkRegCompleteHandler                             2     0      2    7734
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _rd2RegCompleteHandler@i2c_master_example$F159       2     0      2    7712
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _rd2RegCompleteHandler                               2     0      2    7712
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _rd1RegCompleteHandler@i2c_master_example$F148       2     0      2    7712
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _rd1RegCompleteHandler                               2     0      2    7712
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _I2C_SetDataCompleteCallback                         4     0      4    3998
                                              5 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (15) _I2C_SetCallback                                     5     1      4     914
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (14) _I2C_SetBuffer                                       4     0      4    3692
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (13) _I2C_DO_SEND_STOP                                    0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (14) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C_DO_SEND_RESTART                                 0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (14) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C_CallbackReturnStop                              2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) _I2C_CallbackReturnReset                             2     0      2     265
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Current_ReadRegister
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___fldiv
     ___flmul
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___xxtofl
       ___wmul (ARG)
   _I2C_Master_Init
     ___lldiv
   _Power_ReadRegister
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___fldiv
     ___wmul
     ___xxtofl
       ___wmul (ARG)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _Voltage_ReadRegister
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___fldiv
     ___flmul
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___xxtofl
       ___wmul (ARG)
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd1RegCompleteHandler@i2c_master_example$F148 *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler@i2c_master_example$F159 *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rdBlkRegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rdBlkRegCompleteHandler@i2c_master_example$F182 *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr1RegCompleteHandler@i2c_master_example$F165 *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr2RegCompleteHandler@i2c_master_example$F171 *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd1RegCompleteHandler@i2c_master_example$F148 *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler@i2c_master_example$F159 *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rdBlkRegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rdBlkRegCompleteHandler@i2c_master_example$F182 *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr1RegCompleteHandler@i2c_master_example$F165 *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr2RegCompleteHandler@i2c_master_example$F171 *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
         _I2C_MasterSendNack
       _I2C_DO_RX_NACK_STOP *
         _I2C_MasterSendNack
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
         _I2C_MasterStop
       _I2C_DO_TX *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_RESTART_WRITE *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd1RegCompleteHandler@i2c_master_example$F148 *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler@i2c_master_example$F159 *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rdBlkRegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rdBlkRegCompleteHandler@i2c_master_example$F182 *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr1RegCompleteHandler@i2c_master_example$F165 *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr2RegCompleteHandler@i2c_master_example$F171 *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
       _I2C_DO_TX_EMPTY *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd1RegCompleteHandler@i2c_master_example$F148 *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler@i2c_master_example$F159 *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rdBlkRegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rdBlkRegCompleteHandler@i2c_master_example$F182 *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr1RegCompleteHandler@i2c_master_example$F165 *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _wr2RegCompleteHandler@i2c_master_example$F171 *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
       _I2C_MasterClearIrq *
       _I2C_MasterIsNack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     18      ED       8       92.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     81      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      45       1       73.4%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1D1       6        0.0%
DATA                 0      0     1D1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Aug 04 17:27:39 2021

                                  ??_I2C_DO_SEND_ADR_READ 0001  
                             __size_of_I2C_MasterSendNack 0006  
                                            ___fldiv@aexp 006C  
                                            ___fldiv@bexp 006B  
                              Current_ReadRegister@temp_c 0081  
                              Current_ReadRegister@temp_d 007F  
                                            ___fldiv@sign 0064  
                                 ??_I2C_DO_SEND_ADR_WRITE 0002  
                                             _SSPSTATbits 000FC7  
                                            ___awdiv@sign 001F  
                                                      _oi 0100  
                                     ___wmul@multiplicand 001C  
                                   ??_I2C_DO_SEND_RESTART 0001  
                           __size_of_I2C_MasterSendTxData 0008  
                                                     l237 3AD8  
                                                     l273 394E  
                                                     l295 3A3C  
                                                     l298 39FC  
                                                     l722 24C2  
                                                     l731 3976  
                                                     l740 3A82  
                                                     l725 25E6  
                                                     l734 399A  
                                                     l743 3A72  
                                                     l752 34B6  
                                                     l728 26F8  
                                                     l737 3A7A  
                                                     l809 3974  
                                                     l746 3A6A  
                                                     l843 316A  
                                                     l836 315A  
                                                     l749 37C8  
                                                     _PEN 007E2A  
                                                     _SEN 007E28  
                                                     _pad 2C78  
                                  fp__I2C_DO_RX_NACK_STOP 0000  
                                            ___awmod@sign 001F  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                            ___flmul@aexp 006D  
                                            ___flmul@bexp 0072  
                                            ___flmul@sign 006C  
                                            ___flmul@temp 0077  
                                            ___flmul@prod 0073  
                                ??_I2C_CallbackReturnStop 000C  
                                            _I2C_DO_RESET 3A3E  
                                            ___fltol@exp1 0023  
                                                    l1040 2E02  
                                                    l1106 27FE  
                                 ??_rd2RegCompleteHandler 000C  
                                                    l1053 2F76  
                                                    l1402 1CDC  
                                                    l1074 28BE  
                                                    l1083 3724  
                                                    l1404 1D54  
                                                    l1068 3020  
                                                    l1405 1D42  
                                                    l1430 192C  
                                                    l1423 1736  
                                                    l1079 2904  
                                                    l1440 1A5C  
                                                    l1432 19A4  
                                                    l1433 1992  
                                                    l1337 0F18  
                                                    l1354 1032  
                                                    l1346 11E8  
                                                    l1338 0F06  
                                                    l1427 1A9A  
                                                    l1363 1102  
                                                    l1339 0ECC  
                                                    l1531 2D02  
                                                    l1364 10F0  
                                                    l1533 2D3E  
                                                    l1391 1E36  
                                                    l1471 213C  
                                                    l1551 0D28  
                                                    l1464 20A4  
                                                    l1528 2CBE  
                                                    l1393 1C96  
                                                    l1705 204C  
                                                    l1650 15B0  
                                                    l1467 2200  
                                                    l1715 375C  
                                                    l1723 355A  
                                                    l1379 35F0  
                                                    l1643 166E  
                                                    l1396 1C5A  
                                                    l1708 1F90  
                                                    l1478 2198  
                                                    l1487 3508  
                                                    l1744 2C76  
                                                    l1752 3634  
                                                    l1656 3392  
                                                    l1729 36EC  
                                                    l1569 04BC  
                                                    l1657 339A  
                                                    l1762 3AFA  
                                                    l1667 2A02  
                                                    l1597 08FC  
                                                    l1774 3792  
                                                    l7000 1DDC  
                                                    l1696 2396  
                                                    l1768 3458  
                                                    l1793 33FA  
                                                    l7010 1E2A  
                                                    l7002 1DF6  
                                                    l6042 3A30  
                                                    l1778 2ADE  
                                                    l1699 239E  
                                                    l7012 1E2C  
                                                    l7004 1E12  
                                                    l7100 18F4  
                                                    l7020 1670  
                                                    l6044 3A34  
                                                    l1788 33F2  
                                                    l7006 1E16  
                                                    l7110 194A  
                                                    l7102 1912  
                                                    l7030 16AE  
                                                    l7022 167E  
                                                    l6046 3A38  
                                                    ?_pad 0060  
                                                    l7008 1E24  
                                                    l7120 19B4  
                                                    l7112 194E  
                                                    l7104 191C  
                                                    l7040 16E0  
                                                    l7032 16BE  
                                                    l7024 168C  
                                                    l8000 24B2  
                                                    l7200 2EC8  
                                                    l7130 1A16  
                                                    l7122 19C0  
                                                    l7114 195C  
                                                    l7106 192A  
                                                    l7050 1720  
                                                    l7042 16EE  
                                                    l7034 16C4  
                                                    l7026 168E  
                                                    l8010 256E  
                                                    l7210 2EF4  
                                                    l7202 2ECC  
                                                    l7140 1A7E  
                                                    l7132 1A2A  
                                                    l7124 19CE  
                                                    l7116 198A  
                                                    l7108 193C  
                                                    l7060 176A  
                                                    l7052 1726  
                                                    l7044 16F0  
                                                    l7036 16D4  
                                                    l7028 169E  
                                                    l8012 25A2  
                                                    l8004 24C4  
                                                    l8020 25E8  
                                                    l7220 2F2C  
                                                    l7212 2EFC  
                                                    l7204 2EDA  
                                                    l7142 1A80  
                                                    l7134 1A44  
                                                    l7126 19F8  
                                                    l7070 17BA  
                                                    l7062 1776  
                                                    l7054 1746  
                                                    l7046 1700  
                                                    l7038 16DA  
                                                    l8014 25BC  
                                                    l8006 2522  
                                                    l8030 26CE  
                                                    l8022 2646  
                                                    l7230 2F66  
                                                    l7222 2F42  
                                                    l7214 2F0E  
                                                    l7206 2EE2  
                                                    l7150 35AA  
                                                    l8110 2AF8  
                                                    l7136 1A60  
                                                    l7144 1A86  
                                                    l7128 19FC  
                                                    l7080 17FC  
                                                    l7072 17C6  
                                                    l7064 1780  
                                                    l7056 1756  
                                                    l7048 1710  
                                                    l8016 25D6  
                                                    l8008 256A  
                                                    l8032 26E8  
                                                    l8024 267C  
                                                    l7160 2D52  
                                                    l7232 2F6E  
                                                    l7224 2F4A  
                                                    l7216 2F16  
                                                    l7208 2EE6  
                                                    l7240 2FB6  
                                                    l7152 35BC  
                                                    l7320 27DE  
                                                    l7304 278A  
                                                    l7400 1FB4  
                                                    l8040 34D2  
                                                    l8120 2B80  
                                                    l8112 2B0C  
                                                    l7146 1A8A  
                                                    l7138 1A70  
                                                    l7090 185E  
                                                    l7082 1808  
                                                    l7074 17D2  
                                                    l7066 1796  
                                                    l8026 2680  
                                                    l7170 2D78  
                                                    l7162 2D5A  
                                                    l7226 2F50  
                                                    l7218 2F1E  
                                                    l7242 2FE4  
                                                    l7322 27EE  
                                                    l7314 27B2  
                                                    l7306 2794  
                                                    l7402 1FF0  
                                                    l7330 2C9A  
                                                    l8042 34DA  
                                                    l8114 2B20  
                                                    l8106 2AE0  
                                                    l7092 186A  
                                                    l7084 1818  
                                                    l7076 17E0  
                                                    l7068 17A2  
                                                    l8028 26B4  
                                                    l5900 394C  
                                                    l7412 3726  
                                                    l7420 3522  
                                                    l7180 2DB0  
                                                    l7172 2D80  
                                                    l7164 2D5E  
                                                    l7156 2D40  
                                                    l7228 2F56  
                                                    l7244 2FF4  
                                                    l7236 2F78  
                                                    l7260 287E  
                                                    l7252 2800  
                                                    l6700 0E2E  
                                                    l7316 27BE  
                                                    l7308 279E  
                                                    l7404 2004  
                                                    l7340 2CE4  
                                                    l7332 2CAA  
                                                    l7500 034E  
                                                    l8044 34F6  
                                                    l8036 34B8  
                                                    l8116 2B34  
                                                    l8108 2AE4  
                                                    l7094 1886  
                                                    l7086 1832  
                                                    l7078 17EC  
                                                    l5902 39EC  
                                                    l7422 3550  
                                                    l7190 2DDC  
                                                    l7182 2DB6  
                                                    l7174 2D92  
                                                    l7166 2D6C  
                                                    l7158 2D44  
                                                    l7246 3018  
                                                    l7238 2FA6  
                                                    l7270 2902  
                                                    l7262 288C  
                                                    l7254 2830  
                                                    l6710 0E42  
                                                    l6702 0E32  
                                                    l7318 27CE  
                                                    l7350 2926  
                                                    l7406 202C  
                                                    l7342 2D10  
                                                    l7334 2CB6  
                                                    l7326 2C78  
                                                    l7510 0422  
                                                    l7502 0382  
                                                    l7430 00D2  
                                                    l8038 34CA  
                                                    l8118 2B5A  
                                                    l7096 18B0  
                                                    l7088 1842  
                                                    l7424 3554  
                                                    l7416 350A  
                                                    l7184 2DCC  
                                                    l7176 2D9A  
                                                    l7192 2DE2  
                                                    l7168 2D74  
                                                    l7248 301E  
                                                    l7264 289E  
                                                    l7256 2840  
                                                    l6800 1086  
                                                    l6720 0E56  
                                                    l6712 0E46  
                                                    l6704 0E36  
                                                    l7352 2964  
                                                    l7360 29A4  
                                                    l7408 203C  
                                                    l6640 2BC0  
                                                    l7344 2D24  
                                                    l7336 2CCA  
                                                    l7328 2C86  
                                                    l7600 08C2  
                                                    l7520 048E  
                                                    l7504 0388  
                                                    l7512 0456  
                                                    l7440 0126  
                                                    l7432 00E2  
                                                    l7098 18E6  
                                                    l7418 350E  
                                                    l7194 2DF2  
                                                    l7186 2DD4  
                                                    l7178 2DA2  
                                                    l7266 28AC  
                                                    l7258 286E  
                                                    l7274 36EE  
                                                    l6802 1094  
                                                    l6810 10B2  
                                                    l6722 0E5A  
                                                    l6714 0E4A  
                                                    l6706 0E3A  
                                                    l6730 0E6A  
                                                    l7290 274E  
                                                    l7282 26FA  
                                                    l7362 29B6  
                                                    l7354 298C  
                                                    l6642 2BD2  
                                                    l7338 2CDE  
                                                    l7370 33FC  
                                                    l7610 0918  
                                                    l7602 08C6  
                                                    l7522 0496  
                                                    l7514 0466  
                                                    l7506 03E6  
                                                    l7450 016C  
                                                    l7442 012E  
                                                    l7434 00F0  
                                                    l6900 1B04  
                                                    l7196 2DFA  
                                                    l7188 2DD6  
                                                    l7268 28FC  
                                                    l7276 3704  
                                                    l6804 109C  
                                                    l6812 10C0  
                                                    l6740 0EDA  
                                                    l6732 0E6E  
                                                    l6724 0E5E  
                                                    l6716 0E4E  
                                                    l6708 0E3E  
                                                    l6660 0D56  
                                                    l6652 0D2A  
                                                    l7292 2750  
                                                    l7284 2710  
                                                    l7356 2998  
                                                    l7348 2906  
                                                    l6644 2BDC  
                                                    l7372 340C  
                                                    l7380 33E4  
                                                    l7700 0C36  
                                                    l7620 09BE  
                                                    l7612 097C  
                                                    l7604 08D6  
                                                    l7540 0546  
                                                    l7532 04DA  
                                                    l7524 04B0  
                                                    l7516 046A  
                                                    l7508 041A  
                                                    l7460 01A8  
                                                    l7452 0174  
                                                    l7444 0140  
                                                    l7436 00F8  
                                                    l7428 00C8  
                                                    l6910 1B30  
                                                    l6902 1B0A  
                                                    l5950 30F6  
                                                    l8262 22C6  
                                                    l7278 3714  
                                                    l6822 1112  
                                                    l6830 1168  
                                                    l6814 10C4  
                                                    l6806 10A0  
                                                    l6750 0F04  
                                                    l6742 0EE6  
                                                    l6734 0E98  
                                                    l6726 0E62  
                                                    l6718 0E52  
                                                    l6670 0D90  
                                                    l6662 0D66  
                                                    l6654 0D36  
                                                    l7294 2760  
                                                    l7366 29FA  
                                                    l7390 1EC4  
                                                    l6646 2BFA  
                                                    l6638 2BAE  
                                                    l7374 339C  
                                                    l7710 0C7C  
                                                    l7702 0C50  
                                                    l7630 09FC  
                                                    l7614 098A  
                                                    l7622 09C6  
                                                    l7606 08E8  
                                                    l7550 0584  
                                                    l7534 04EC  
                                                    l7542 054A  
                                                    l7518 047C  
                                                    l7526 04C8  
                                                    l7470 0224  
                                                    l7454 0178  
                                                    l7446 014E  
                                                    l7438 011C  
                                                    l7800 3976  
                                                    l6920 1B6A  
                                                    l6912 1B40  
                                                    l6904 1B10  
                                                    l5960 3148  
                                                    l5952 3102  
                                                    l5944 30C8  
                                                    l6840 11BA  
                                                    l6832 1178  
                                                    l6824 111E  
                                                    l6816 10D2  
                                                    l6808 10B0  
                                                    l6760 0F5A  
                                                    l6752 0F26  
                                                    l6744 0EEA  
                                                    l6736 0EB4  
                                                    l6728 0E66  
                                                    l6680 0DBE  
                                                    l6672 0D96  
                                                    l6664 0D76  
                                                    l6656 0D44  
                                                    l7296 2764  
                                                    l7288 2724  
                                                    l7392 1ED2  
                                                    l7384 1E38  
                                                    l6648 2C30  
                                                    l7720 0CCC  
                                                    l7712 0C8C  
                                                    l7704 0C56  
                                                    l7640 0A28  
                                                    l7632 0A02  
                                                    l7624 09DA  
                                                    l7616 099E  
                                                    l7608 08F4  
                                                    l7560 05D2  
                                                    l7552 0588  
                                                    l7544 0552  
                                                    l7536 0508  
                                                    l7472 022E  
                                                    l7464 01DE  
                                                    l7456 017C  
                                                    l7448 0160  
                                                    l7802 3984  
                                                    l6922 1B80  
                                                    l6914 1B50  
                                                    l6906 1B1E  
                                                    l5962 314A  
                                                    l5954 3110  
                                                    l5946 30D8  
                                                    l6850 11D8  
                                                    l6842 11C0  
                                                    l6834 1188  
                                                    l6826 112C  
                                                    l6818 10E8  
                                                    l6770 0F94  
                                                    l6762 0F68  
                                                    l6754 0F36  
                                                    l6746 0EF8  
                                                    l6738 0EC4  
                                                    l6690 0DF2  
                                                    l6682 0DC0  
                                                    l6674 0DA8  
                                                    l6666 0D78  
                                                    l6658 0D46  
                                                    l7298 2772  
                                                    l7386 1E58  
                                                    l7378 33D2  
                                                    l7730 0D08  
                                                    l7722 0CDE  
                                                    l7714 0C92  
                                                    l7706 0C68  
                                                    l7634 0A0E  
                                                    l7626 09E8  
                                                    l7642 0A2E  
                                                    l7650 0A5C  
                                                    l7618 09B0  
                                                    l7570 066A  
                                                    l7554 059A  
                                                    l7562 05DA  
                                                    l7546 0564  
                                                    l7538 053E  
                                                    l7482 02B4  
                                                    l7466 01F0  
                                                    l7458 0182  
                                                    l7810 1230  
                                                    l7900 3A66  
                                                    l6940 1BD4  
                                                    l6924 1B90  
                                                    l6932 1BB0  
                                                    l6916 1B52  
                                                    l6908 1B20  
                                                    l5964 3154  
                                                    l5956 311A  
                                                    l5948 30EE  
                                                    l5892 3AD6  
                                                    l7740 221C  
                                                    l6844 11C2  
                                                    l6836 11A8  
                                                    l6828 1166  
                                                    l6780 1000  
                                                    l6772 0F96  
                                                    l6764 0F76  
                                                    l6748 0EFA  
                                                    l6684 0DD0  
                                                    l6692 0DFA  
                                                    l6676 0DAA  
                                                    l6668 0D80  
                                                    l7396 1F44  
                                                    l7388 1EB0  
                                                    l6860 3614  
                                                    l7724 0CEA  
                                                    l7716 0C98  
                                                    l7708 0C74  
                                                    l7660 0B12  
                                                    l7652 0AB4  
                                                    l7644 0A40  
                                                    l7636 0A1E  
                                                    l7628 09F8  
                                                    l7580 074E  
                                                    l7572 06C2  
                                                    l7564 05E2  
                                                    l7556 05A8  
                                                    l7548 0576  
                                                    l7484 02C6  
                                                    l7468 020C  
                                                    l7476 0258  
                                                    l7820 1296  
                                                    l7812 1234  
                                                    l7804 11EA  
                                                    l7910 379E  
                                                    l7902 3A7C  
                                                    l6950 1C26  
                                                    l6942 1BEE  
                                                    l6934 1BC0  
                                                    l6926 1B98  
                                                    l6918 1B5A  
                                                    l5958 3138  
                                                    l5894 392A  
                                                    l7742 2220  
                                                    l6846 11C8  
                                                    l6838 11AC  
                                                    l6790 1058  
                                                    l6782 1002  
                                                    l6774 0FA0  
                                                    l6766 0F82  
                                                    l6758 0F4A  
                                                    l6694 0E0A  
                                                    l6686 0DE0  
                                                    l6678 0DB0  
                                                    l7398 1F80  
                                                    l6854 35F2  
                                                    l6862 375E  
                                                    l7726 0CF2  
                                                    l7670 0B62  
                                                    l7662 0B2E  
                                                    l7654 0AE8  
                                                    l7646 0A52  
                                                    l7638 0A22  
                                                    l7590 07E8  
                                                    l7582 0782  
                                                    l7574 06F6  
                                                    l7566 05F2  
                                                    l7558 05C0  
                                                    l7486 02E2  
                                                    l7478 027E  
                                                    l7494 02FE  
                                                    l7830 1348  
                                                    l7822 12D0  
                                                    l7814 125A  
                                                    l7806 1210  
                                                    l7912 37A8  
                                                    l7904 3A80  
                                                    l7920 3A6C  
                                                    l6960 1C82  
                                                    l6952 1C36  
                                                    l6944 1BFE  
                                                    l6936 1BC0  
                                                    l6928 1B9C  
                                                    l5896 393A  
                                                    l7760 22DC  
                                                    l7752 2280  
                                                    l7744 223E  
                                                    l7736 2202  
                                                    l6848 11D6  
                                                    l6784 1012  
                                                    l6768 0F86  
                                                    l6776 0FA6  
                                                    l6696 0E1C  
                                                    l6688 0DF0  
                                                    l6856 35FE  
                                                    l6864 376A  
                                                    l6872 36B6  
                                                    l7728 0D02  
                                                    l7680 0BA4  
                                                    l7672 0B72  
                                                    l7664 0B40  
                                                    l7656 0AF0  
                                                    l7648 0A56  
                                                    l7592 081C  
                                                    l7584 0796  
                                                    l7568 0606  
                                                    l7576 06FC  
                                                    l7496 0318  
                                                    l7840 13D2  
                                                    l7824 12F0  
                                                    l7816 1262  
                                                    l7832 135A  
                                                    l7808 121E  
                                                    l7914 37BE  
                                                    l7906 3794  
                                                    l7922 3A70  
                                                    l6970 1CC2  
                                                    l6962 1C84  
                                                    l6954 1C4A  
                                                    l6946 1C0E  
                                                    l6890 1ACA  
                                                    l6882 1A9C  
                                                    l7930 20B4  
                                                    l5898 393C  
                                                    l7770 2368  
                                                    l7754 2296  
                                                    l7746 2276  
                                                    l7738 2218  
                                                    l6794 106C  
                                                    l6778 0FCC  
                                                    l6786 1022  
                                                    l6698 0E2A  
                                                    l6858 3610  
                                                    l6866 376E  
                                                    l7690 0BD4  
                                                    l7682 0BB2  
                                                    l7674 0B84  
                                                    l7666 0B4E  
                                                    l7658 0AF4  
                                                    l7594 0876  
                                                    l7586 07C8  
                                                    l7578 071A  
                                                    l7850 146E  
                                                    l7842 1406  
                                                    l7834 137E  
                                                    l7826 12FE  
                                                    l7818 1270  
                                                    l7916 37C0  
                                                    l7908 3798  
                                                    l6980 1CFE  
                                                    l6972 1CCC  
                                                    l6964 1C94  
                                                    l6956 1C58  
                                                    l6948 1C1E  
                                                    l6892 1ADA  
                                                    l6884 1AAA  
                                                    l7940 20F2  
                                                    l7932 20CA  
                                                    l7924 2050  
                                                    l6876 3950  
                                                    l7772 237A  
                                                    l7764 2316  
                                                    l7756 229E  
                                                    l7748 227A  
                                                    l6796 1076  
                                                    l6788 1048  
                                                    l6868 3786  
                                                    l7692 0BFA  
                                                    l7684 0BBA  
                                                    l7676 0B8C  
                                                    l7668 0B5E  
                                                    l7596 087A  
                                                    l7588 07D8  
                                                    l7780 2A04  
                                                    l7860 153A  
                                                    l7844 1418  
                                                    l7836 138E  
                                                    l6990 1D70  
                                                    l6982 1D0C  
                                                    l6974 1CDA  
                                                    l6966 1CA6  
                                                    l6958 1C64  
                                                    l6894 1AEA  
                                                    l6886 1AB8  
                                                    l7950 217A  
                                                    l7942 2124  
                                                    l7926 2060  
                                                    l6878 396C  
                                                    l7758 22A6  
                                                    l6798 1084  
                                                    l7694 0C16  
                                                    l7686 0BC2  
                                                    l7678 0B9C  
                                                    l7598 08AE  
                                                    l7790 2A60  
                                                    l7782 2A2E  
                                                    l7862 154C  
                                                    l7870 15C4  
                                                    l7846 1430  
                                                    l7854 149A  
                                                    l7838 13C2  
                                                    l6992 1D7E  
                                                    l6984 1D3A  
                                                    l6968 1CBC  
                                                    l6976 1CEC  
                                                    l6896 1AEC  
                                                    l6888 1ABA  
                                                    l7960 21D0  
                                                    l7952 2188  
                                                    l7944 2126  
                                                    l7936 20DE  
                                                    l7928 206E  
                                                    l7768 2356  
                                                    l7696 0C1E  
                                                    l7688 0BCE  
                                                    l7792 2A7E  
                                                    l7872 15EA  
                                                    l7880 161A  
                                                    l7864 1580  
                                                    l7856 14C8  
                                                    l7848 143E  
                                                    l6994 1DA8  
                                                    l6978 1CFA  
                                                    l6898 1AF4  
                                                    l7962 21E0  
                                                    l7954 21A6  
                                                    l7946 2132  
                                                    l7938 20E6  
                                                    l7698 0C24  
                                                    l7794 2A90  
                                                    l7786 2A3A  
                                                    l7882 1628  
                                                    l7874 15F8  
                                                    l7970 3338  
                                                    l6988 1D64  
                                                    l6996 1DAC  
                                                    l7964 21EE  
                                                    l7956 21A8  
                                                    l7948 216E  
                                                    l7980 3462  
                                                    l7796 2ABA  
                                                    l7788 2A48  
                                                    l7876 160C  
                                                    l7972 3340  
                                                    l7894 3A74  
                                                    l6998 1DC6  
                                                    l7966 21F0  
                                                    l7958 21AC  
                                                    l7982 34AE  
                                                    l7990 23FE  
                                                    l7886 1636  
                                                    l7974 334E  
                                                    l7896 3A78  
                                                    l7984 34B2  
                                                    l7992 2446  
                                                    l7888 165C  
                                                    l7976 3374  
                                                    l7898 3A62  
                                                    l7986 34B4  
                                                    l7978 345A  
                                                    l7994 244A  
                                                    l7996 247E  
                                                    l7988 23A0  
                                                    l7998 2498  
                                                    STR_1 FF8F  
                                                    STR_2 FFAA  
                                                    STR_3 FF6D  
                                                    STR_4 FFDB  
                                                    STR_6 FFC4  
                                                    STR_9 FF3B  
                                                    _LATA 000F89  
                                                    _LATB 000F8A  
                                                    _LATC 000F8B  
                                                    u7000 1756  
                                                    u7001 1752  
                                                    u7010 18D0  
                                                    u7100 1A44  
                                                    u7020 192A  
                                                    u6300 0DA8  
                                                    u7101 1A40  
                                                    u7021 1926  
                                                    u6301 0DA4  
                                                    u7110 1A7E  
                                                    u7030 194A  
                                                    u6310 0DBE  
                                                    u6230 2BC0  
                                                    u7111 1A7A  
                                                    u7031 1946  
                                                    u7015 18C6  
                                                    u6311 0DBA  
                                                    u6231 2BBC  
                                                    u7040 195C  
                                                    u7120 2D52  
                                                    u7200 2F0E  
                                                    u6400 0EF8  
                                                    u6320 0DD0  
                                                    u6240 2BD2  
                                                    u8000 07C8  
                                                    u7041 1958  
                                                    u7121 2D4E  
                                                    u7201 2F0A  
                                                    u6401 0EF4  
                                                    u6321 0DCC  
                                                    u6241 2BCE  
                                                    u8001 07C4  
                                                    u7050 198A  
                                                    u7130 2D6C  
                                                    u7210 2F2C  
                                                    u6410 0F18  
                                                    u6330 0DE0  
                                                    u6250 2BFA  
                                                    u8010 07D8  
                                                    u7051 1986  
                                                    u7131 2D68  
                                                    u7211 2F28  
                                                    u6411 0F14  
                                                    u6331 0DDC  
                                                    u6251 2BF6  
                                                    u8011 07D4  
                                                    u7060 19A0  
                                                    u5620 30EE  
                                                    u7140 2D92  
                                                    u7220 2F42  
                                                    u7300 28AC  
                                                    u6500 1058  
                                                    u6420 0F26  
                                                    u6340 0E1C  
                                                    u6260 2C30  
                                                    u8100 09E8  
                                                    u8020 0876  
                                                    _RCEN 007E2B  
                                                    u7061 199C  
                                                    u5621 30EA  
                                                    u7141 2D8E  
                                                    u7221 2F3E  
                                                    u7301 28A8  
                                                    u6501 1054  
                                                    u6421 0F22  
                                                    u6341 0E18  
                                                    u6261 2C2C  
                                                    u8101 09E4  
                                                    u8021 0872  
                                                    u7070 19B4  
                                                    u5630 3110  
                                                    u7150 2DB0  
                                                    u7230 2F66  
                                                    u7310 28FC  
                                                    u6510 1084  
                                                    u6430 0F36  
                                                    u6350 0E2A  
                                                    u6270 0D44  
                                                    u8110 0A40  
                                                    u8030 08C2  
                                                    u7071 19B0  
                                                    u5631 310C  
                                                    u7151 2DAC  
                                                    u7231 2F62  
                                                    u7311 28F8  
                                                    u6511 1080  
                                                    u6431 0F32  
                                                    u6351 0E26  
                                                    u6271 0D40  
                                                    u8111 0A3C  
                                                    u8031 08BE  
                                                    i2l40 38D0  
                                                    u7080 19CE  
                                                    u5640 3138  
                                                    u7160 2DCC  
                                                    u7240 2FA6  
                                                    u7320 3704  
                                                    u6600 1166  
                                                    u6520 1094  
                                                    u6440 0F68  
                                                    u6360 0E98  
                                                    u6280 0D56  
                                                    u7400 2C86  
                                                    u8200 0C68  
                                                    u8120 0B12  
                                                    u8040 08E8  
                                                    u7081 19CA  
                                                    u5641 3134  
                                                    u7161 2DC8  
                                                    u7241 2FA2  
                                                    u7321 3700  
                                                    u6601 1162  
                                                    u6521 1090  
                                                    u6441 0F64  
                                                    u6361 0E94  
                                                    u6281 0D52  
                                                    u7401 2C82  
                                                    u8201 0C64  
                                                    u8121 0B0E  
                                                    u8041 08E4  
                                                    u7090 1A16  
                                                    u7170 2DF2  
                                                    u7250 2FE4  
                                                    u6610 1178  
                                                    u6530 10B0  
                                                    u6450 0F76  
                                                    u6370 0EB0  
                                                    u6290 0D66  
                                                    u7330 2710  
                                                    u7410 2CAA  
                                                    u8210 0CC6  
                                                    u8130 0B2E  
                                                    u8050 098A  
                                                    i2l19 38FC  
                                                    u7091 1A12  
                                                    u7171 2DEE  
                                                    u7251 2FE0  
                                                    u6611 1174  
                                                    u6531 10AC  
                                                    u6451 0F72  
                                                    u6371 0EAA  
                                                    u6291 0D62  
                                                    u7331 270C  
                                                    u7411 2CA6  
                                                    u8211 0CC0  
                                                    u8131 0B2A  
                                                    u8051 0986  
                                                    u6700 1AB8  
                                                    u8300 237A  
                                                    u7180 2EDA  
                                                    u7260 3018  
                                                    u6620 1188  
                                                    u6540 10C0  
                                                    u6460 0F94  
                                                    u6380 0EB2  
                                                    u7340 2744  
                                                    u7500 29F2  
                                                    u7420 2D02  
                                                    u8220 0CC8  
                                                    u8140 0B40  
                                                    u8060 099E  
                                                    u6701 1AB4  
                                                    u8301 2376  
                                                    u7181 2ED6  
                                                    u7261 3014  
                                                    u6621 1184  
                                                    u6541 10BC  
                                                    u6461 0F90  
                                                    u7421 2CFE  
                                                    u8141 0B3C  
                                                    u8061 099A  
                                                    u6710 1ACA  
                                                    u7190 2EF4  
                                                    u7270 2830  
                                                    u6630 11A8  
                                                    u6550 10D2  
                                                    u6470 0FCC  
                                                    u6390 0EDA  
                                                    u7350 2772  
                                                    u7430 2D10  
                                                    u7510 3446  
                                                    u8230 0CDE  
                                                    u8150 0B4E  
                                                    u8070 09B0  
                                                    u8310 2A2E  
                                                    i2l55 38A4  
                                                    u6711 1AC6  
                                                    u7191 2EF0  
                                                    u7271 282C  
                                                    u6631 11A4  
                                                    u6551 10CE  
                                                    u6471 0FC8  
                                                    u6391 0ED6  
                                                    u7351 276E  
                                                    u7431 2D0C  
                                                    u8231 0CDA  
                                                    u8151 0B4A  
                                                    u8071 09AC  
                                                    u8311 2A2A  
                                                    u6800 1C82  
                                                    u6720 1ADA  
                                                    u8240 223E  
                                                    u7280 286E  
                                                    u6640 11BA  
                                                    u6560 10E8  
                                                    u6480 1012  
                                                    u7360 2786  
                                                    u7440 2946  
                                                    u7600 1F40  
                                                    u7520 3458  
                                                    u8160 0B84  
                                                    u8080 09BE  
                                                    u8320 2A60  
                                                    u8400 1296  
                                                    u6801 1C7E  
                                                    u6721 1AD6  
                                                    u8241 223A  
                                                    u7281 286A  
                                                    u6641 11B6  
                                                    u6561 10E4  
                                                    u6481 100E  
                                                    u7361 2782  
                                                    u7345 273A  
                                                    u7601 1F3C  
                                                    u7521 3454  
                                                    u8161 0B80  
                                                    u8081 09BA  
                                                    u8321 2A5C  
                                                    u8401 1292  
                                                    u6810 1CA6  
                                                    u6730 1B1E  
                                                    u8250 2276  
                                                    u7290 288C  
                                                    u6650 11D6  
                                                    u6570 10FE  
                                                    u6490 1048  
                                                    u7370 27AE  
                                                    u7450 2964  
                                                    u7610 1F64  
                                                    u7530 33CC  
                                                    u8170 0BB2  
                                                    u8090 09DA  
                                                    u8330 2A7E  
                                                    u8410 1342  
                                                    i2l67 3878  
                                                    u6811 1CA2  
                                                    u6731 1B1A  
                                                    u8251 2272  
                                                    u7291 2888  
                                                    u6651 11D2  
                                                    u6571 10FA  
                                                    u6491 1044  
                                                    u7371 27AA  
                                                    u7451 2960  
                                                    u7531 33C6  
                                                    u8171 0BAE  
                                                    u8091 09D6  
                                                    u8331 2A7A  
                                                    u8411 133C  
                                                    u6900 1DC6  
                                                    u6820 1CBC  
                                                    u6740 1B30  
                                                    u8260 2292  
                                                    u6580 1112  
                                                    u7380 27CE  
                                                    u7460 298C  
                                                    u7620 1F80  
                                                    u6660 3634  
                                                    u7540 33CE  
                                                    u8180 0C36  
                                                    u7700 00F0  
                                                    u8340 2A90  
                                                    u8500 154C  
                                                    u8420 1344  
                                                    u6901 1DC2  
                                                    u6821 1CB8  
                                                    u6741 1B2C  
                                                    u8261 228E  
                                                    u6581 110E  
                                                    u7381 27CA  
                                                    u7461 2988  
                                                    u7445 293C  
                                                    u7621 1F7C  
                                                    u6661 3630  
                                                    u7517 343C  
                                                    u8181 0C32  
                                                    u7701 00EC  
                                                    u8341 2A8C  
                                                    u8501 1548  
                                                    u6910 1DF6  
                                                    u6830 1CDA  
                                                    u6750 1B40  
                                                    u8270 2350  
                                                    u6590 112C  
                                                    u7390 27DE  
                                                    u7470 29B6  
                                                    u7630 1FD4  
                                                    u6670 3786  
                                                    u7550 33E4  
                                                    u8190 0C50  
                                                    u7710 0140  
                                                    u8350 2ABA  
                                                    u8510 15EA  
                                                    u8430 135A  
                                                    i2l79 36B4  
                                                    u6911 1DF2  
                                                    u6831 1CD6  
                                                    u6751 1B3C  
                                                    u8271 234A  
                                                    u6591 1128  
                                                    u7391 27DA  
                                                    u7471 29B2  
                                                    u7615 1F5A  
                                                    u6671 3782  
                                                    u7551 33E0  
                                                    u8191 0C4C  
                                                    u7711 013C  
                                                    u8351 2AB6  
                                                    u8511 15E6  
                                                    u8431 1356  
                                                    u8360 3984  
                                                    u8520 37BC  
                                                    u6920 1E24  
                                                    u6840 1CFA  
                                                    u6760 1B80  
                                                    u8600 2198  
                                                    u8280 2352  
                                                    u7640 1FF0  
                                                    u7560 1E82  
                                                    u6680 36E6  
                                                    u7800 02B0  
                                                    u7720 014E  
                                                    u8440 138E  
                                                    u8361 3980  
                                                    u8521 37B6  
                                                    u6921 1E20  
                                                    u6841 1CF6  
                                                    u6761 1B7C  
                                                    u8601 2194  
                                                    u7641 1FEC  
                                                    u6681 36E0  
                                                    u7721 014A  
                                                    u8441 138A  
                                                    u8370 399A  
                                                    u6850 1D0C  
                                                    u6770 1BC0  
                                                    u6930 168C  
                                                    u8610 21A6  
                                                    u8290 2368  
                                                    u7490 29F0  
                                                    u7650 202C  
                                                    u7570 1EB0  
                                                    u6690 36E8  
                                                    u7810 02C6  
                                                    u7730 0160  
                                                    u8450 13D2  
                                                    u8371 3996  
                                                    u6851 1D08  
                                                    u6771 1BBC  
                                                    u6931 1688  
                                                    u8611 21A2  
                                                    u8291 2364  
                                                    u7491 29EA  
                                                    u7651 2028  
                                                    u7635 1FCA  
                                                    u7571 1EAC  
                                                    u7811 02C2  
                                                    u7731 015C  
                                                    u8451 13CE  
                                                    u6860 1D3A  
                                                    u6780 1C36  
                                                    u6940 169E  
                                                    u8620 21E0  
                                                    u8540 2060  
                                                    u7660 3756  
                                                    u7580 1ED2  
                                                    u7900 0508  
                                                    u7820 034A  
                                                    u7740 01A8  
                                                    u8460 1418  
                                                    u8380 1210  
                                                    u6861 1D36  
                                                    u6781 1C32  
                                                    u6941 169A  
                                                    u8621 21DC  
                                                    u8541 205C  
                                                    u7661 3750  
                                                    u7485 29C8  
                                                    u7581 1ECE  
                                                    u7565 1E78  
                                                    u7901 0504  
                                                    u7821 0346  
                                                    u7741 01A4  
                                                    u8461 1414  
                                                    u8381 120C  
                                                    u6870 1D50  
                                                    u6790 1C58  
                                                    u6950 16AE  
                                                    u8630 21EE  
                                                    u8550 206E  
                                                    u7670 3758  
                                                    u7910 053E  
                                                    u7830 03E2  
                                                    u7750 01D8  
                                                    u8470 14C8  
                                                    u8390 125A  
                                                    u8535 37BE  
                                                    u6871 1D4C  
                                                    u6791 1C54  
                                                    u6951 16AA  
                                                    u8631 21EA  
                                                    u8551 206A  
                                                    u7911 053A  
                                                    u7831 03DE  
                                                    u7751 01D2  
                                                    u8471 14C4  
                                                    u8391 1256  
                                                    u6880 1D64  
                                                    u6960 16EE  
                                                    u8560 20CA  
                                                    u7680 3522  
                                                    u7920 0564  
                                                    u7840 0456  
                                                    u7760 01DA  
                                                    u8480 1534  
                                                    u8640 3392  
                                                    u6881 1D60  
                                                    u6961 16EA  
                                                    u8561 20C6  
                                                    u7681 351E  
                                                    u7921 0560  
                                                    u7841 0452  
                                                    u8481 152E  
                                                    u8641 338E  
                                                    u6890 1D7E  
                                                    u6970 1700  
                                                    u8570 2120  
                                                    u7690 3550  
                                                    u7930 0576  
                                                    u7850 047C  
                                                    u7770 01F0  
                                                    u8490 1536  
                                                    u6891 1D7A  
                                                    u6971 16FC  
                                                    u8571 211C  
                                                    u7691 354C  
                                                    u7595 1EE6  
                                                    u7931 0572  
                                                    u7851 0478  
                                                    u7771 01EC  
                                                    u6980 1710  
                                                    u8580 216A  
                                                    u7596 1EF0  
                                                    u7940 0584  
                                                    u7860 048E  
                                                    u7780 027E  
                                                    u6981 170C  
                                                    u8581 2166  
                                                    u8717 248A  
                                                    u7597 1F00  
                                                    u7941 0580  
                                                    u7861 048A  
                                                    u7781 027A  
                                                    u6990 1746  
                                                    u8590 2188  
                                                    u7950 059A  
                                                    u7870 04B0  
                                                    u7790 02AE  
                                                    u6991 1742  
                                                    u8591 2184  
                                                    u8655 3484  
                                                    u8727 24A4  
                                                    u7951 0596  
                                                    u7871 04AC  
                                                    u7791 02A8  
                                                    u7960 05A8  
                                                    u7880 04D6  
                                                    u8737 26C0  
                                                    u7961 05A4  
                                                    u7881 04D2  
                                                    u7970 05D2  
                                                    u7890 04EC  
                                                    u8747 26DA  
                                                    u7971 05CE  
                                                    u7891 04E8  
                                                    u7980 071A  
                                                    u8757 25AE  
                                                    u7981 0716  
                                                    u7990 0782  
                                                    u8767 25C8  
                                                    u7991 077E  
                                                    _RSEN 007E29  
                                                    _WPUB 000F5B  
                                 ??_wr2RegCompleteHandler 000C  
                                                    _dbuf 0174  
                        __end_of_I2C_Master_RepeatedStart 3A84  
                                                    _atoi 2202  
                                                    _main 2AE0  
                                ?_I2C_CallbackReturnReset 000A  
                                                    _prec 00E5  
                                                    _nout 00E1  
                                                    pad@i 0066  
                                                    pad@p 0064  
                                                    fsr0h 000FEA  
                                                    fsr1h 000FE2  
                                                    indf0 000FEF  
                                                    fsr2h 000FDA  
                                                    fsr0l 000FE9  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    pad@w 0068  
                                                    fsr2l 000FD9  
                                                    btemp 0046  
                                           ___fpclassifyf 2906  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 00C4  
                                         ___fldiv@new_exp 0065  
        fp__wr2RegCompleteHandler@i2c_master_example$F171 0000  
   __end_of_wr2RegCompleteHandler@i2c_master_example$F171 392A  
  __size_of_wr2RegCompleteHandler@i2c_master_example$F171 002C  
           _wr2RegCompleteHandler@i2c_master_example$F171 38FE  
        fp__rd1RegCompleteHandler@i2c_master_example$F148 0000  
   __end_of_rd1RegCompleteHandler@i2c_master_example$F148 384E  
  __size_of_rd1RegCompleteHandler@i2c_master_example$F148 002C  
           _rd1RegCompleteHandler@i2c_master_example$F148 3822  
        fp__wr1RegCompleteHandler@i2c_master_example$F165 0000  
   __end_of_wr1RegCompleteHandler@i2c_master_example$F165 37F6  
  __size_of_wr1RegCompleteHandler@i2c_master_example$F165 002C  
           _wr1RegCompleteHandler@i2c_master_example$F165 37CA  
      fp__rdBlkRegCompleteHandler@i2c_master_example$F182 0000  
 __end_of_rdBlkRegCompleteHandler@i2c_master_example$F182 3676  
__size_of_rdBlkRegCompleteHandler@i2c_master_example$F182 0040  
         _rdBlkRegCompleteHandler@i2c_master_example$F182 3636  
        fp__rd2RegCompleteHandler@i2c_master_example$F159 0000  
   __end_of_rd2RegCompleteHandler@i2c_master_example$F159 3822  
  __size_of_rd2RegCompleteHandler@i2c_master_example$F159 002C  
           _rd2RegCompleteHandler@i2c_master_example$F159 37F6  
                            fp__I2C_DO_SEND_RESTART_WRITE 0000  
                                            _tolower$2215 0026  
                                             _voltage_str 00EF  
                                            ___param_bank 000000  
                        __size_of_rdBlkRegCompleteHandler 0040  
                                                   ??_pad 002A  
                                      _Power_ReadRegister 25E8  
                                        ?_I2C_Master_Init 0027  
                                        ?_I2C_Master_Read 001B  
                                        ?_I2C_Master_Wait 0001  
                                        ?_I2C_Master_Stop 0001  
                          __size_of_OSCILLATOR_Initialize 0012  
                                           _I2C_DO_RX_ACK 3A94  
                           __end_of_OSCILLATOR_Initialize 39FE  
                                           ___fltol@sign1 0022  
                                                   ?_atoi 0021  
                                         __end_of___fladd 11EA  
                                                   ?_main 0001  
                                                   _ACKEN 007E2C  
                                                   _ACKDT 007E2D  
                                         __end_of___fldiv 1E38  
                                         __end_of___awdiv 2E04  
                                         __end_of___flneg 3726  
                                                   STR_10 FFE7  
                                                   STR_11 FFE2  
                                                   STR_12 FFE2  
                                                   STR_21 FFFC  
                                                   STR_13 FFEC  
                                                   STR_14 FFF4  
                                                   STR_23 FFFC  
                                                   STR_17 FFF0  
                                                   STR_18 FFF8  
                                         __end_of___awmod 2F78  
                                         __end_of___flmul 1A9C  
                                         __end_of___flsub 35F2  
                                         __end_of___fltol 2800  
                                                   _ASCII FD5B  
                                         __end_of___lldiv 316C  
                                         ___awdiv@divisor 001C  
                                                   i2l243 0078  
                                                   i2l244 0098  
                                                   i2l510 31E6  
                                                   i2l600 3AF4  
                                                   i2l192 37F4  
                                                   i2l504 3A54  
                                                   i2l248 0098  
                                                   i2l434 39BE  
                                                   i2l186 384C  
                                                   i2l195 3928  
                                                   i2l603 39EA  
                                                   i2l531 3AB2  
                                                   i2l540 3A9A  
                                                   i2l460 3AC8  
                                                   i2l437 39D6  
                                                   i2l189 3820  
                                                   i2l198 3674  
                                                   i2l606 3ACE  
                                                   i2l630 3AE0  
                                                   i2l470 3A2E  
                                                   i2l534 3AAA  
                                                   i2l543 3A92  
                                                   i2l528 3ABA  
                                                   i2l464 32D0  
                                                   i2l457 3260  
                                                   i2l609 3AD4  
                                                   i2l473 3A1E  
                                                   i2l537 3AA2  
                                                   i2l546 3A8A  
                                                   i2l563 3AF0  
                                                   i2l467 3A60  
                                                   i2l555 3336  
                                                   i2l627 3ADC  
                                                   i2l476 2E8E  
                                                   i2l492 3058  
                                                   i2l493 30C6  
                                                   i2l549 3A48  
                                                   i2l566 3AEC  
                                                   i2l582 3AE4  
                                                   i2l479 2EC6  
                                                   i2l585 3AC2  
                                                   i2l594 3AE8  
                                                   i2l588 3AF8  
                                         ___awdiv@counter 001E  
                            __size_of_I2C_DO_RX_NACK_STOP 0008  
                                            vfpfcnvrt@fmt 00CB  
                                       ??_I2C_DO_TX_EMPTY 000C  
                                                   _TRISA 000F92  
                                                   _TRISB 000F93  
                                                   _TRISC 000F94  
                                     ?_Power_ReadRegister 006D  
                                                   _Power 00F3  
                                       __end_of_I2C_DO_RX 30C8  
                                       __end_of_I2C_DO_TX 2EC8  
                                                   _flags 0042  
                                                   _fputc 2BAE  
                                                   _fputs 35F2  
                                         __end_of_isdigit 375E  
                                  __size_of_I2C_MasterFsm 0070  
                                  __size_of_I2C_MasterIsr 0006  
                                        fp__I2C_MasterIsr 0000  
                                                   atoi@n 0067  
                                                   pad@fp 0060  
                                                   atoi@s 0021  
                                                   _power 0036  
                                                   _width 00E3  
                                                   _putch 3AFA  
                                 _I2C_MasterEnableRestart 3AF6  
                                         __end_of_isspace 355C  
                                         __end_of_isupper 36EE  
                                                   pclath 000FFA  
                                                   tablat 000FF5  
                                        ?_I2C_SetCallback 0001  
                                                   ttemp5 0047  
                                                   ttemp6 004A  
                                                   ttemp7 004E  
                                                   status 000FD8  
                                                   wtemp8 0047  
                                         __end_of_sprintf 350A  
                                          ?___fpclassifyf 001A  
                                         __end_of_tolower 33FC  
                                       ?_I2C_DO_SEND_STOP 0001  
                                  __size_of_I2C_SetBuffer 0024  
                                         __end_of_strncmp 2AE0  
                                    ??_Power_ReadRegister 0071  
                                      ??_I2C_DO_SEND_STOP 0001  
                                fp__rd1RegCompleteHandler 0000  
                                         __initialization 355C  
                                            __end_of_atoi 23A0  
                                            __end_of_main 2BAE  
                                fp__wr1RegCompleteHandler 0000  
                       __size_of_I2C_DO_SEND_RESTART_READ 0008  
                               ?_I2C_DO_SEND_RESTART_READ 0001  
                                          ?_I2C_DO_RX_ACK 0001  
                             ?_INTERRUPT_InterruptManager 0001  
                                                  ??_atoi 0023  
                                                  ??_main 002E  
                                       ?_I2C_MasterIsNack 0001  
                                           __activetblptr 000003  
                                Power_ReadRegister@temp_e 0075  
                                Power_ReadRegister@temp_f 0073  
                                       ?_I2C_MasterSetIrq 0001  
                                      ??_I2C_MasterIsNack 0001  
                                       ?_I2C_Master_Start 0001  
                                       ?_I2C_Master_Write 001B  
                                      ??_I2C_MasterSetIrq 0001  
                                      ??_I2C_Master_Start 001B  
                                      ??_I2C_Master_Write 001D  
                         __end_of_I2C_CallbackReturnReset 3AEE  
                                                  ?_fputc 001A  
                                                  ?_fputs 0023  
                                                  _ANCON0 000F5D  
                                                  _ANCON1 000F5C  
                         __size_of_I2C_CallbackReturnStop 0004  
                                        ___awdiv@dividend 001A  
                           I2C_SetDataCompleteCallback@cb 0006  
                                                  ?_putch 0001  
                                                  i2l5100 365E  
                                                  i2l4230 3230  
                                                  i2l5030 38FA  
                                                  i2l5102 3672  
                                                  i2l4226 31EA  
                                                  i2l5026 38D2  
                                                  i2l5034 38A6  
                                                  i2l5042 387A  
                                                  i2l5050 384E  
                                                  i2l4228 31FC  
                                                  i2l5028 38E6  
                                                  i2l5036 38BA  
                                                  i2l5044 388E  
                                                  i2l5052 3862  
                                                  i2l5060 369E  
                                                  i2l5038 38CE  
                                                  i2l5046 38A2  
                                                  i2l5054 3876  
                                                  i2l5062 36B2  
                                                  i2l5070 384A  
                                                  i2l5142 3ABE  
                                                  i2l5150 3AAC  
                                                  i2l5144 3AB4  
                                                  i2l5152 3AB0  
                                                  i2l5090 38FE  
                                                  i2l5058 3676  
                                                  i2l5066 3822  
                                                  i2l5074 37F6  
                                                  i2l5082 37CA  
                                                  i2l5162 3AE2  
                                                  i2l5138 39D8  
                                                  i2l5146 3AB8  
                                                  i2l5170 3A88  
                                                  i2l4460 39B4  
                                                  i2l5092 3912  
                                                  i2l5068 3836  
                                                  i2l5076 380A  
                                                  i2l5084 37DE  
                                                  i2l5180 3AE6  
                                                  i2l5156 3A9C  
                                                  i2l4470 3AF2  
                                                  i2l4462 39BC  
                                                  i2l5094 3926  
                                                  i2l5078 381E  
                                                  i2l5086 37F2  
                                                  i2l5190 3AEE  
                                                  i2l5166 3ACA  
                                                  i2l5182 3AA4  
                                                  i2l5158 3AA0  
                                                  i2l5174 3A8C  
                                                  i2l4456 399C  
                                                  i2l4464 39C0  
                                                  i2l4472 3AD0  
                                                  i2l5184 3AA8  
                                                  i2l5176 3A90  
                                                  i2l5168 3A84  
                                                  i2l6048 3AC4  
                                                  i2l4458 39AC  
                                                  i2l5098 3636  
                                                  i2l5194 3AEA  
                                                  i2l4468 3AF6  
                                                  i2l5188 3ADE  
                                                  i2l5700 305E  
                                                  i2l5630 3A5A  
                                                  i2l5710 306E  
                                                  i2l5632 3A5E  
                                                  i2l5640 3A2C  
                                                  i2l5704 3066  
                                                  i2l5720 3A4E  
                                                  i2l5722 3A52  
                                                  i2l5626 3ADA  
                                                  i2l6370 0032  
                                                  i2l5732 317C  
                                                  i2l5628 3A56  
                                                  i2l5636 3A20  
                                                  i2l5644 3A10  
                                                  i2l5660 2E24  
                                                  i2l5652 2E04  
                                                  i2l6372 0040  
                                                  i2l5734 3180  
                                                  i2l5726 316C  
                                                  i2l5638 3A24  
                                                  i2l5646 3A14  
                                                  i2l5670 2E34  
                                                  i2l5718 3A4A  
                                                  i2l5910 328A  
                                                  i2l6374 004E  
                                                  i2l5728 3174  
                                                  i2l5744 318E  
                                                  i2l5648 3A1C  
                                                  i2l5672 2E92  
                                                  i2l5664 2E2C  
                                                  i2l5656 2E1C  
                                                  i2l5752 3A94  
                                                  i2l5760 3A42  
                                                  i2l5912 3290  
                                                  i2l5904 3262  
                                                  i2l6376 005C  
                                                  i2l5738 3186  
                                                  i2l5674 2EA4  
                                                  i2l5690 3036  
                                                  i2l5754 3A98  
                                                  i2l5762 3A46  
                                                  i2l5770 32DE  
                                                  i2l5906 3266  
                                                  i2l6378 0086  
                                                  i2l5676 2EBE  
                                                  i2l5692 304E  
                                                  i2l5780 32EE  
                                                  i2l5908 3276  
                                                  i2l8270 31C0  
                                                  i2l5678 2EC4  
                                                  i2l5694 3052  
                                                  i2l5686 3022  
                                                  i2l5758 3A3E  
                                                  i2l5774 32E6  
                                                  i2l5766 32D2  
                                                  i2l5688 3030  
                                                  i2l8264 3320  
                                                  i2l5768 32D6  
                                                  i2l8266 30A0  
                                                  i2l8268 2E68  
                                                  _OSCCON 000FD3  
                                                  _SSPADD 000FC8  
                                                  _TRISC3 007CA3  
                                                  _TRISC4 007CA4  
                                                  _SSPBUF 000FC9  
                                rdBlkRegCompleteHandler@p 000A  
                                        __end_of___xxtofl 2202  
                                     _I2C_MasterGetRxData 3AE2  
                                _I2C_Master_RepeatedStart 3A7C  
                                            vfprintf@cfmt 00DF  
                                                  ___flge 2800  
                                                  ___fleq 2F78  
                                               ??___fladd 0022  
                                                  ___wmul 3950  
                                               ??___fldiv 0022  
                                           _I2C_MasterFsm 3262  
                                               ??___awdiv 001E  
                                               ??___flneg 001E  
                                           _I2C_MasterIsr 3AC4  
                                               ??___awmod 001E  
                                               ??___flmul 0068  
                                               ??___flsub 002E  
                                               ??___fltol 001E  
                                               ??___lldiv 0022  
                                                  _efgtoa 00C8  
                                                  _floorf 1E38  
                                                  clear_0 3582  
                                                  clear_1 358E  
                                                  clear_2 359A  
                                       I2C_SetCallback@cb 0001  
                                        ___awdiv@quotient 0020  
                                 fp__I2C_DO_SEND_ADR_READ 0000  
                                         ___awmod@divisor 001C  
                                 __size_of_I2C_MasterStop 0004  
                                         ___awmod@counter 001E  
                                                  pad@buf 0062  
                                           _I2C_SetBuffer 399C  
                                                  _strcpy 33FC  
                                                  _strlen 375E  
                           __size_of_Current_ReadRegister 0124  
                                                  fputc@c 001A  
                                                  fputs@c 0027  
                                     _I2C_DO_ADDRESS_NACK 32D2  
                                                  fputs@i 0028  
                                                  fputs@s 0023  
                                               ??_isdigit 001C  
                                    ?_I2C_MasterGetRxData 0001  
                                         ___fpclassifyf@e 0022  
                                         ___fpclassifyf@u 0024  
                                         ___fpclassifyf@x 001A  
                                            __mediumconst FD3A  
                                               ??_isspace 001C  
                                                  tblptrh 000FF7  
                                               ??_isupper 001C  
                                                  tblptrl 000FF6  
                                                  tblptru 000FF8  
                               ??_I2C_MasterEnableRestart 0001  
                                                  putch@c 0001  
                                        __end_of_vfprintf 339C  
                                               ??_sprintf 002E  
                                               ??_tolower 0022  
                                               ??_strncmp 0020  
                           __size_of_INTERRUPT_Initialize 0004  
                                              ___flge@ff1 0079  
                                         ??___fpclassifyf 001E  
                                              ___flge@ff2 007D  
                                            ___xxtofl@arg 002A  
                                            ___xxtofl@exp 0029  
                                       _SYSTEM_Initialize 3A30  
                                            ___xxtofl@val 0020  
                                              ___fleq@ff1 001A  
                                              ___fleq@ff2 001E  
                                              __accesstop 0060  
                                 __end_of__initialization 35A0  
                                              ___flneg@f1 001A  
                                      ?_SYSTEM_Initialize 0001  
                                           __end_of_ASCII FF3B  
                                           ___rparam_used 000001  
                                    ?_I2C_DO_ADDRESS_NACK 0001  
                                              ___fltol@f1 001A  
                            __end_of_Voltage_ReadRegister 24C4  
                                 _rdBlkRegCompleteHandler 3676  
                              fp__rdBlkRegCompleteHandler 0000  
                                          __pcstackCOMRAM 0001  
                                          ?_I2C_MasterFsm 0001  
                                          ?_I2C_MasterIsr 0001  
                                         ??_I2C_DO_RX_ACK 0001  
                                            __pidataBANK1 39FE  
                                  _I2C_CallbackReturnStop 3AEE  
                                     ??_SYSTEM_Initialize 001A  
                                           __end_of_fputc 2C78  
                                           __end_of_fputs 3636  
                                           __end_of_putch 3AFC  
                                          ?_I2C_SetBuffer 0001  
                          __size_of_I2C_DO_SEND_ADR_WRITE 0010  
                      __size_of_I2C_DO_SEND_RESTART_WRITE 0008  
                           __end_of_I2C_DO_SEND_ADR_WRITE 3A20  
                              ?_I2C_DO_SEND_RESTART_WRITE 0001  
                                   ??_I2C_MasterGetRxData 0001  
                              __end_of_I2C_MasterClearIrq 3ADE  
                                                 ??_fputc 001E  
                               __end_of_SYSTEM_Initialize 3A3E  
                                                 ??_fputs 0027  
                                                 ??_putch 001A  
                                       _I2C_MasterSendAck 3ACA  
                                              __pbssBANK0 00E1  
                                              __pbssBANK1 0100  
                                           ??_I2C_DO_IDLE 0001  
                          __size_of_rd2RegCompleteHandler 002C  
                                           ??_I2C_DO_RCEN 0001  
                           __end_of_rd2RegCompleteHandler 38A6  
                            __end_of_I2C_MasterSendTxData 3AC4  
                                      ?_I2C_MasterSendAck 0001  
                                       _I2C_MasterStartRx 3AE6  
                          __size_of_wr2RegCompleteHandler 002C  
                                   ??_I2C_DO_ADDRESS_NACK 000C  
                           __end_of_wr2RegCompleteHandler 387A  
                                     _I2C_DO_RX_NACK_STOP 3A8C  
                                   _rd1RegCompleteHandler 38A6  
                                      ?_I2C_MasterStartRx 0001  
                              __end_of_I2C_MasterSendNack 3AD6  
                                   _wr1RegCompleteHandler 38D2  
                                     ??_I2C_MasterSendAck 0001  
                                                 ?___flge 0079  
                                                 ?___fleq 001A  
                             __end_of_I2C_DO_SEND_RESTART 3AAC  
                                         _I2C_DO_TX_EMPTY 316C  
                                     I2C_SetBuffer@buffer 0001  
                                                 ?___wmul 001A  
                                                 ?_efgtoa 0085  
                                     ??_I2C_MasterStartRx 0001  
                           __size_of_I2C_DO_SEND_ADR_READ 0010  
                                                 ?_floorf 0026  
                        __size_of_I2C_CallbackReturnReset 0004  
                          I2C_SetDataCompleteCallback@ptr 0008  
                                                 ?_strcpy 001A  
                                                 ?_strlen 001A  
                                ??_I2C_DO_RX_NACK_RESTART 0001  
                       __end_of_I2C_DO_SEND_RESTART_WRITE 3AB4  
                                    ?_I2C_DO_RX_NACK_STOP 0001  
                                               ?___xxtofl 0020  
                                                 _REFOCON 000F9A  
                                                 _OSCCON2 000FD2  
                                      __size_of_vfpfcnvrt 0486  
                               __end_of_I2C_MasterSendAck 3AD0  
                                                 _OSCTUNE 000F9B  
                                                 _SSPCON1 000FC6  
                                                 _SSPCON2 000FC5  
                                                 _SSPSTAT 000FC7  
                               __end_of_I2C_MasterStartRx 3AEA  
                            ?_I2C_SetDataCompleteCallback 0006  
                                               _I2C_DO_RX 3022  
                                               _I2C_DO_TX 2E04  
                        __end_of_I2C_DO_SEND_RESTART_READ 3ABC  
                               ??_rdBlkRegCompleteHandler 000C  
                                                 _Current 00F7  
                                         ??_I2C_MasterFsm 000E  
                                         ??_I2C_MasterIsr 0010  
                                                 __Hparam 0000  
                                                 __Lparam 0000  
                                     __end_of_I2C_DO_IDLE 3A62  
                                     __end_of_I2C_DO_RCEN 3A56  
                                         __size_of___flge 0106  
                                         __size_of___fleq 00AA  
                                                 ___fladd 0D2A  
                                                 ___fldiv 1A9C  
                                                 ___awdiv 2D40  
                                                 ___flneg 36EE  
                                                 ___awmod 2EC8  
                                                 ___flmul 1670  
                                                 _Voltage 00FB  
                                                 ___flsub 35AA  
                                                 ___fltol 26FA  
                                                 ___lldiv 30C8  
                                         ??_I2C_SetBuffer 0005  
                                         __size_of___wmul 0026  
                                               ?_vfprintf 01C4  
                                 I2C_SetBuffer@bufferSize 0003  
                                         __size_of_efgtoa 0C62  
                                         __size_of_floorf 0216  
                                                 __pcinit 355C  
                                          _I2C_MasterStop 3AF2  
                                                 __ramtop 0F00  
                               __size_of_I2C_DO_SEND_STOP 0008  
                                                 __ptext0 2AE0  
                                                 __ptext1 34B8  
                                                 __ptext2 3338  
                                                 __ptext3 11EA  
                                                 __ptext4 2A04  
                                                 __ptext5 00C8  
                                                 __ptext6 339C  
                                                 __ptext7 36B6  
                                                 __ptext8 33FC  
                                                 __ptext9 2C78  
                                   ??_I2C_DO_RX_NACK_STOP 0001  
                                         __size_of_strcpy 005E  
                                         __size_of_strlen 0036  
                                   _OSCILLATOR_Initialize 39EC  
                                                 _current 003A  
                                            __size_of_pad 00C8  
                                                 _isdigit 3726  
                                              ??___xxtofl 0024  
                                        ___awmod@dividend 001A  
                                      I2C_SetCallback@idx 0005  
                                ??_PIN_MANAGER_Initialize 001A  
                           I2C_CallbackReturnReset@funPtr 000A  
                                                 _isspace 350A  
                                      I2C_SetCallback@ptr 0003  
                                                 _isupper 36B6  
                                __size_of_I2C_Master_Init 005E  
                                __size_of_I2C_Master_Read 0036  
                                                 efgtoa@c 008B  
                                                 efgtoa@d 00A9  
                                                 efgtoa@e 00C1  
                                                 efgtoa@f 0087  
                                                 efgtoa@g 00BD  
                                                 efgtoa@h 00B3  
                                                 efgtoa@i 00BB  
                                    _Voltage_ReadRegister 23A0  
                                                 efgtoa@l 00B7  
                                                 efgtoa@m 00A3  
                                                 efgtoa@n 00C3  
                                                 efgtoa@p 00AD  
                                                 efgtoa@t 009D  
                                                 efgtoa@u 00C5  
                                                 efgtoa@w 00AF  
                                __size_of_I2C_Master_Wait 0026  
                                fp__I2C_DO_SEND_ADR_WRITE 0000  
                                __size_of_I2C_Master_Stop 0008  
                                                 atoi@neg 0060  
                              __size_of_SYSTEM_Initialize 000E  
                                                 _sprintf 34B8  
                                                 _tolower 339C  
                                                 _voltage 003E  
                                                 _strncmp 2A04  
                                    end_of_initialization 35A0  
                                                 floorf@e 0077  
                                                 floorf@m 0073  
                                                 floorf@u 0079  
                                                 floorf@x 0026  
                              ??_I2C_Master_RepeatedStart 001B  
                                              ?_I2C_DO_RX 0001  
                                              ?_I2C_DO_TX 0001  
                               __size_of_I2C_MasterIsNack 0014  
                                                 fputc@fp 001C  
                                                 fputs@fp 0025  
                                  ?_rd1RegCompleteHandler 000A  
                                 __end_of_I2C_DO_TX_EMPTY 31E8  
                               __size_of_I2C_MasterSetIrq 0004  
                                  ?_wr1RegCompleteHandler 000A  
                               __size_of_I2C_Master_Start 0008  
                               __size_of_I2C_Master_Write 000A  
                                         ___lldiv@divisor 001E  
                             __size_of_Power_ReadRegister 0112  
                                         ___lldiv@counter 0026  
                                fp__rd2RegCompleteHandler 0000  
                                __size_of_I2C_SetCallback 007A  
                                       __end_of_vfpfcnvrt 1670  
                                              efgtoa@mode 00B2  
                                              efgtoa@sign 00AB  
                                        I2C_Master_Init@c 0027  
                                        I2C_Master_Read@a 001B  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                fp__wr2RegCompleteHandler 0000  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                  __end_of_I2C_MasterStop 3AF6  
                                              ??_vfprintf 002E  
                               fp__I2C_CallbackReturnStop 0000  
                                                 strcpy@d 0022  
                                                 strlen@a 001C  
                                                 strcpy@s 0020  
                                                 strlen@s 001A  
                         __end_of_rdBlkRegCompleteHandler 36B6  
                                    _I2C_MasterSendTxData 3ABC  
                                         fp__I2C_DO_RESET 0000  
                         __size_of_I2C_DO_RX_NACK_RESTART 0008  
                                             ___fladd@grs 0029  
                                   ?_Voltage_ReadRegister 0079  
                                           ___xxtofl@sign 0028  
                              __size_of_I2C_MasterSendAck 0006  
                                             ___fldiv@grs 0067  
                                             ___fldiv@rem 0060  
                              __size_of_I2C_MasterStartRx 0004  
                                             ___flmul@grs 006E  
                                             _I2C_DO_IDLE 3A56  
                                             _I2C_DO_RCEN 3A4A  
                            __end_of_Current_ReadRegister 25E8  
                                 ?_I2C_CallbackReturnStop 000A  
                                _I2C_DO_SEND_RESTART_READ 3AB4  
                             fp__I2C_DO_SEND_RESTART_READ 0000  
                            I2C_CallbackReturnStop@funPtr 000A  
                            __end_of_INTERRUPT_Initialize 3ADA  
                                         ?_I2C_MasterStop 0001  
                                 _I2C_CallbackReturnReset 3AEA  
                              fp__I2C_CallbackReturnReset 0000  
                                          __end_of___flge 2906  
                                          __end_of___fleq 3022  
                                             vfpfcnvrt@ap 00CD  
                                             vfpfcnvrt@ct 00DB  
                                             vfpfcnvrt@fp 00C9  
                                          __end_of___wmul 3976  
                    __size_of_I2C_SetDataCompleteCallback 0018  
                                          __end_of_efgtoa 0D2A  
                                          __end_of_floorf 204E  
                                   ?_I2C_MasterSendTxData 0001  
                                  ?_OSCILLATOR_Initialize 0001  
                                              floorf@F527 002E  
                             ??_I2C_DO_SEND_RESTART_WRITE 0001  
                                          __end_of_strcpy 345A  
                                          __end_of_strlen 3794  
                                     start_initialization 355C  
                   ??_wr1RegCompleteHandler@tolower$F2221 000C  
                   ??_wr2RegCompleteHandler@tolower$F2241 000C  
                    ?_rd2RegCompleteHandler@tolower$F2233 000A  
                   ??_rd2RegCompleteHandler@tolower$F2235 000C  
                    ?_rd1RegCompleteHandler@tolower$F2227 000A  
                    ?_wr1RegCompleteHandler@tolower$F2219 000A  
                   ??_rd1RegCompleteHandler@tolower$F2229 000C  
                  ?_rdBlkRegCompleteHandler@tolower$F2245 000A  
                 ??_rdBlkRegCompleteHandler@tolower$F2247 000C  
                    ?_wr2RegCompleteHandler@tolower$F2239 000A  
                         __size_of_PIN_MANAGER_Initialize 0026  
                                             __end_of_pad 2D40  
                                           ?_I2C_DO_RESET 0001  
                                             ??_I2C_DO_RX 000C  
                                             ??_I2C_DO_TX 000C  
                                  rd1RegCompleteHandler@p 000A  
                                       ??_I2C_Master_Init 0060  
                                       ??_I2C_Master_Read 001D  
                                       ??_I2C_Master_Wait 001A  
                                       ??_I2C_Master_Stop 001B  
                                   __end_of___fpclassifyf 2A04  
                          __end_of_I2C_CallbackReturnStop 3AF2  
                                  _I2C_DO_RX_NACK_RESTART 3A84  
                                        ?_I2C_DO_TX_EMPTY 0001  
                                      _I2C_MasterClearIrq 3ADA  
                                             vfprintf@fmt 01C6  
                                                ??___flge 0081  
                                                ??___fleq 0022  
                                                ??___wmul 001E  
                                  wr1RegCompleteHandler@p 000A  
                                     ?_I2C_MasterClearIrq 0001  
                                                ??_efgtoa 008C  
                             __end_of_I2C_MasterGetRxData 3AE6  
                                             __pdataBANK1 01DC  
                                                ??_floorf 006D  
                                   __end_of_I2C_DO_RX_ACK 3A9C  
                                        _I2C_DO_SEND_STOP 3A9C  
                                       ??_I2C_SetCallback 0005  
                                                ??_strcpy 001E  
                                      _I2C_MasterSendNack 3AD0  
                                                ??_strlen 001C  
                                ?_I2C_MasterEnableRestart 0001  
                                               ___fladd@a 001E  
                                               ___fladd@b 001A  
                                       _i2c_fsmStateTable FD3B  
                                  fp__I2C_DO_SEND_RESTART 0000  
                                  ??_Voltage_ReadRegister 007D  
                                               ___fldiv@a 001E  
                                               ___fldiv@b 001A  
                                   _I2C_DO_SEND_ADR_WRITE 3A10  
                                               ___flmul@a 0064  
                                               ___flmul@b 0060  
                                             __pbssCOMRAM 002E  
                                               ___flsub@a 007D  
                                               ___flsub@b 0079  
                                           __pcstackBANK0 0060  
                                           __pcstackBANK1 01C4  
                                          ??_I2C_DO_RESET 0001  
                                     ?_I2C_MasterSendNack 0001  
                                       __size_of___xxtofl 01B4  
                            __end_of_I2C_DO_SEND_ADR_READ 3A30  
                                    ??_I2C_MasterClearIrq 0001  
                             __end_of_I2C_DO_ADDRESS_NACK 3338  
                                        _I2C_MasterIsNack 39D8  
                               _I2C_DO_SEND_RESTART_WRITE 3AAC  
                                        _I2C_MasterSetIrq 3ADE  
                                               _atoi$2110 0062  
                                               _atoi$2111 0066  
                                               _atoi$2112 0064  
                                               __pnvBANK0 00F3  
                                        _I2C_Master_Start 3A74  
                                   _rd2RegCompleteHandler 387A  
                                        _I2C_Master_Write 3A62  
                                             _efgtoa$2052 0095  
                                             _efgtoa$2046 0091  
                                             _efgtoa$2047 0093  
                                             _efgtoa$2056 0097  
                                             _efgtoa$2057 0099  
                                             _efgtoa$2058 009B  
                                  _PIN_MANAGER_Initialize 392A  
                                   _wr2RegCompleteHandler 384E  
                               ??_I2C_CallbackReturnReset 000C  
                                    ??_I2C_MasterSendNack 0001  
                                               __pintcode 0008  
                                           __pmediumconst FD3A  
                                                ?___fladd 001A  
                                                ?___fldiv 001A  
                                                ?___awdiv 001A  
                                                ?___flneg 001A  
                                                ?___awmod 001A  
                                                ?___flmul 0060  
                                                ?___flsub 0079  
                                                ?___fltol 001A  
                                                ?___lldiv 001A  
                                  ??_I2C_MasterSendTxData 0001  
                               __end_of_i2c_fsmStateTable FD5B  
                            ??_INTERRUPT_InterruptManager 0010  
                                       __size_of_vfprintf 0064  
                                            fp__I2C_DO_RX 0000  
                                            fp__I2C_DO_TX 0000  
                            __size_of_I2C_DO_SEND_RESTART 0008  
                                    _Current_ReadRegister 24C4  
                                                ?_isdigit 001A  
                                                ?_isspace 001A  
                                                ?_isupper 001A  
        wr2RegCompleteHandler@i2c_master_example$F171@ptr 000A  
        rd1RegCompleteHandler@i2c_master_example$F148@ptr 000A  
        wr1RegCompleteHandler@i2c_master_example$F165@ptr 000A  
      rdBlkRegCompleteHandler@i2c_master_example$F182@ptr 000A  
        rd2RegCompleteHandler@i2c_master_example$F159@ptr 000A  
                                                ?_sprintf 01CA  
                                                ?_tolower 0020  
                                          __size_of_fputc 00CA  
                                          __size_of_fputs 0044  
                                 ??_rd1RegCompleteHandler 000C  
                                                ?_strncmp 001A  
                                          __size_of_putch 0002  
                                    _INTERRUPT_Initialize 3AD6  
                                 ??_wr1RegCompleteHandler 000C  
                              Voltage_ReadRegister@temp_a 0081  
                              Voltage_ReadRegister@temp_b 007F  
                                          ___wmul@product 001E  
                                                _PIE1bits 000F9D  
                                                _PIE2bits 000FA0  
                     __size_of_INTERRUPT_InterruptManager 00BC  
                                                i2u317_40 31FC  
                                                i2u317_41 31F8  
                                                i2u361_40 39AC  
                                                i2u361_41 39A8  
                                                _PIR1bits 000F9E  
                                                i2u611_40 0040  
                                                i2u611_41 003C  
                                                _PIR2bits 000FA1  
                                                i2u612_40 004E  
                                                i2u612_41 004A  
                                                i2u533_40 2E18  
                                                i2u613_40 005C  
                                                i2u533_41 2E14  
                                                i2u613_41 0058  
                                                i2u535_40 2EBE  
                                                i2u534_48 2E42  
                                                i2u615_40 0086  
                                                i2u614_48 0062  
                                                i2u535_41 2EBA  
                                                i2u534_49 2E56  
                                                i2u615_41 0082  
                                                i2u614_49 0074  
                                                i2u536_40 304E  
                                                i2u616_40 0094  
                                                i2u536_41 304A  
                                                i2u616_41 0090  
                                                i2u465_40 39E8  
                                                i2u465_41 39E2  
                                                i2u465_46 39EA  
                                                i2u537_48 307C  
                                                i2u537_49 308E  
                                                i2u538_48 319C  
                                                i2u538_49 31AE  
                                                i2u539_48 32FC  
                                                i2u539_49 330E  
                                                i2u557_40 3276  
                                                i2u557_41 3272  
                                                i2u558_40 328A  
                                                i2u558_41 3286  
                                                i2u559_48 32BA  
                                                i2u559_49 32CC  
                                   __end_of_I2C_MasterFsm 32D2  
                                   __end_of_I2C_MasterIsr 3ACA  
                                                _RCONbits 000FD0  
                             __end_of_I2C_DO_RX_NACK_STOP 3A94  
                         __end_of_I2C_MasterEnableRestart 3AFA  
                                          fp__I2C_DO_IDLE 0000  
                                          fp__I2C_DO_RCEN 0000  
                                               _vfpfcnvrt 11EA  
                                   __end_of_I2C_SetBuffer 39C0  
                                               _power_str 00E7  
                                       ___wmul@multiplier 001A  
                                   ?_Current_ReadRegister 0079  
                                  ?_I2C_DO_SEND_ADR_WRITE 0001  
                                I2C_MasterSendTxData@data 0001  
                                            _isspace$2141 0020  
                                              vfpfcnvrt@c 00DE  
                                              vfpfcnvrt@f 00D7  
                                     I2C_Master_Read@temp 001D  
                                             _INTCON2bits 000FF1  
                              ??_I2C_DO_SEND_RESTART_READ 0001  
                                               copy_data0 3570  
                                   ?_INTERRUPT_Initialize 0001  
                                ?_rdBlkRegCompleteHandler 000A  
                                              _I2C_Status 0150  
                                            ?_I2C_DO_IDLE 0001  
                                            ?_I2C_DO_RCEN 0001  
                              __end_of_Power_ReadRegister 26FA  
                                  ?_rd2RegCompleteHandler 000A  
                                  ?_wr2RegCompleteHandler 000A  
                                        ??_I2C_MasterStop 0001  
                               fp__I2C_DO_RX_NACK_RESTART 0000  
                                                __Hrparam 0000  
                                              vfprintf@ap 01C8  
                                                __Lrparam 0000  
                                              vfprintf@fp 01C4  
                                    __end_of_I2C_DO_RESET 3A4A  
                                 ??_OSCILLATOR_Initialize 001A  
                       __size_of_I2C_Master_RepeatedStart 0008  
                                        __size_of___fladd 04C0  
                                        __size_of___fldiv 039C  
                                        __size_of___awdiv 00C4  
                                    _I2C_DO_SEND_ADR_READ 3A20  
                                        __size_of___flneg 0038  
                                        __size_of___awmod 00B0  
                                        __size_of___flmul 042C  
                               ?_I2C_Master_RepeatedStart 0001  
                                        __size_of___flsub 0048  
                                        __size_of___fltol 0106  
                                        __size_of___lldiv 00A4  
                                              ?_vfpfcnvrt 00C9  
                                      ___fpclassifyf@F465 0032  
                                              sprintf@fmt 01CC  
                                         _I2C_Master_Init 345A  
                                         _I2C_Master_Read 3794  
                                                ___xxtofl 204E  
                                         _I2C_Master_Wait 3976  
                                             _current_str 00EB  
                                     fp__I2C_DO_SEND_STOP 0000  
                                         _I2C_Master_Stop 3A6C  
                                        __size_of_isdigit 0038  
                                        __size_of_isspace 0052  
                                                __ptext10 375E  
                                                __ptext11 35F2  
                                                __ptext20 2800  
                                                __ptext12 2BAE  
                                                __ptext21 2F78  
                                                __ptext13 3AFA  
                                                __ptext30 39EC  
                                                __ptext22 2EC8  
                                                __ptext14 1E38  
                                                __ptext31 3AD6  
                                                __ptext23 2D40  
                                                __ptext15 2906  
                                                __ptext40 3A62  
                                                __ptext32 25E8  
                                                __ptext24 2202  
                                                __ptext16 26FA  
                                                __ptext41 3A6C  
                                                __ptext33 3950  
                                                __ptext25 350A  
                                                __ptext17 35AA  
                                                __ptext50 32D2  
                                                __ptext42 3A74  
                                                __ptext34 345A  
                                                __ptext26 3726  
                                                __ptext18 0D2A  
                                                __ptext51 3A3E  
                                                __ptext43 3A7C  
                                                __ptext35 30C8  
                                                __ptext27 23A0  
                                                __ptext19 36EE  
                                                __ptext60 3022  
                                                __ptext52 3A84  
                                                __ptext44 3794  
                                                __ptext36 24C4  
                                                __ptext28 3A30  
                                                __ptext61 2E04  
                                                __ptext53 3A8C  
                                                __ptext45 3976  
                                                __ptext37 204E  
                                                __ptext29 392A  
                                                __ptext70 3AE2  
                                                __ptext62 3A10  
                                                __ptext54 3A94  
                                                __ptext38 1670  
                                                __ptext71 3AD0  
                                                __ptext63 3A20  
                                                __ptext55 3A9C  
                                                __ptext47 3AC4  
                                                __ptext39 1A9C  
                                                __ptext80 384E  
                                                __ptext72 3AE6  
                                                __ptext64 3A56  
                                                __ptext56 3AA4  
                                                __ptext48 3262  
                                                __ptext81 387A  
                                                __ptext73 3AEA  
                                                __ptext65 316C  
                                                __ptext57 3AAC  
                                                __ptext49 3ADA  
                                                __ptext90 0000  
                                                __ptext82 38A6  
                                                __ptext74 3AEE  
                                                __ptext66 3ADE  
                                                __ptext58 3AB4  
                                                __ptext83 38D2  
                                                __ptext75 3636  
                                                __ptext67 39D8  
                                                __ptext59 3A4A  
                                                __ptext84 38FE  
                                                __ptext76 37CA  
                                                __ptext68 3ABC  
                                                __ptext85 39C0  
                                                __ptext77 37F6  
                                                __ptext69 3ACA  
                                                __ptext86 31E8  
                                                __ptext78 3822  
                                                __ptext87 399C  
                                                __ptext79 3676  
                                                __ptext88 3AF2  
                                                __ptext89 3AF6  
                                        __size_of_isupper 0038  
                     __end_of_I2C_SetDataCompleteCallback 39D8  
                             _I2C_SetDataCompleteCallback 39C0  
                                 ?_I2C_DO_RX_NACK_RESTART 0001  
                                        __size_of_sprintf 0052  
                                        __size_of_tolower 0060  
                                              strcpy@dest 001A  
                                        __size_of_strncmp 00DC  
                                __end_of_I2C_DO_SEND_STOP 3AA4  
                                           __size_of_atoi 019E  
                                           __size_of_main 00CE  
                                         _I2C_SetCallback 31E8  
                           ??_I2C_SetDataCompleteCallback 000A  
                                                efgtoa@fp 0085  
                                                efgtoa@ne 00A1  
                                                efgtoa@pp 009F  
                                                efgtoa@ou 00A5  
                                                int$flags 0046  
                                   ?_I2C_DO_SEND_ADR_READ 0001  
                                                _vfprintf 3338  
                      __end_of_INTERRUPT_InterruptManager 00C4  
                              _INTERRUPT_InterruptManager 0008  
                                  ??_Current_ReadRegister 007D  
                                __end_of_I2C_MasterIsNack 39EC  
                                __end_of_I2C_MasterSetIrq 3AE2  
                                __end_of_I2C_Master_Start 3A7C  
                                          _vfpfcnvrt$2072 00D3  
                                          _vfpfcnvrt$2076 00D5  
                                __end_of_I2C_Master_Write 3A6C  
                                              _INTCONbits 000FF2  
                                                isdigit@c 001A  
                                  ??_INTERRUPT_Initialize 001A  
                          __end_of_I2C_DO_RX_NACK_RESTART 3A8C  
                                                intlevel2 0000  
                                               sprintf@ap 01D4  
                        __size_of_I2C_MasterEnableRestart 0004  
                                  rd2RegCompleteHandler@p 000A  
                                                isspace@c 001A  
                                        ___lldiv@dividend 001A  
                                 ?_PIN_MANAGER_Initialize 0001  
                                     _I2C_DO_SEND_RESTART 3AA4  
                                               strcpy@src 001C  
                                                isupper@c 001A  
                                  fp__I2C_DO_ADDRESS_NACK 0000  
                                               strncmp@_l 001A  
                                               strncmp@_r 001C  
                                             efgtoa@nmode 00B1  
                                  wr2RegCompleteHandler@p 000A  
                                __size_of_I2C_DO_TX_EMPTY 007C  
                                      fp__I2C_DO_TX_EMPTY 0000  
                                 __end_of_I2C_Master_Init 34B8  
                                 __end_of_I2C_Master_Read 37CA  
                                 __end_of_I2C_Master_Wait 399C  
                                 __end_of_I2C_Master_Stop 3A74  
                                             ??_vfpfcnvrt 00CF  
                                    ?_I2C_DO_SEND_RESTART 0001  
                                                sprintf@f 01D6  
                                                tolower@c 0020  
                                                sprintf@s 01CA  
                                  __size_of___fpclassifyf 00FE  
                                        ___lldiv@quotient 0022  
                                       I2C_Master_Write@d 001B  
                            __size_of_I2C_MasterGetRxData 0004  
                                                strncmp@l 0021  
                                                strncmp@n 001E  
                                                strncmp@r 0023  
                           __size_of_Voltage_ReadRegister 0124  
                                             _SSPCON1bits 000FC6  
                                             _SSPCON2bits 000FC5  
                                           ___fladd@signs 0026  
                             __size_of_I2C_MasterClearIrq 0004  
                                 __end_of_I2C_SetCallback 3262  
                          __end_of_PIN_MANAGER_Initialize 3950  
                          __size_of_rd1RegCompleteHandler 002C  
                           __end_of_rd1RegCompleteHandler 38D2  
                                  __size_of_I2C_DO_RX_ACK 0008  
                                        fp__I2C_DO_RX_ACK 0000  
                                            ___fladd@aexp 0027  
                                            ___fladd@bexp 0028  
                          __size_of_wr1RegCompleteHandler 002C  
                                   __size_of_I2C_DO_RESET 000C  
                           __end_of_wr1RegCompleteHandler 38FE  
                                   _MSSP_InterruptHandler 0044  
                            __size_of_I2C_DO_ADDRESS_NACK 0066  
                                    __size_of_I2C_DO_IDLE 000C  
                                    __size_of_I2C_DO_RCEN 000C  
                                 I2CSIMPLE_example@F12630 01DC  
                                      __size_of_I2C_DO_RX 00A6  
                                      __size_of_I2C_DO_TX 00C4  
